<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
				<funder ref="#_9kfhpHC #_b9sypXW #_n6TZtEf #_GHMuRKt #_esfpjzp">
					<orgName type="full">unknown</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><roleName>Jan, Víctor, Elena, Mauricio</roleName><forename type="first">Alex</forename><surname>Fernando</surname></persName>
						</author>
						<author>
							<persName><roleName>Ángel, Óscar</roleName><forename type="first">Jean</forename><surname>Paul</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Mari</forename><surname>Carmen</surname></persName>
						</author>
						<author>
							<persName><roleName>Raúl, María, Freddy</roleName><forename type="first">José</forename><surname>Ángel</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Miguel</forename><surname>Angel</surname></persName>
						</author>
						<author>
							<persName><roleName>Idafen, Carlos, Ghis, César, Rafa, Miguel</roleName><forename type="first">Jorge</forename><surname>Luis</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Ana</forename><surname>Sole</surname></persName>
						</author>
						<author>
							<persName><forename type="first">José</forename><forename type="middle">Alberto</forename><surname>Also</surname></persName>
						</author>
						<author>
							<persName><roleName>Moisés, Mar, Miguel</roleName><forename type="first">Ester</forename><surname>Nicholas</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Guillermo</forename><surname>David</surname></persName>
						</author>
						<author>
							<persName><roleName>Jezz, Olga</roleName><forename type="first">Ana</forename><surname>Juan</surname></persName>
						</author>
						<author>
							<persName><forename type="first">María</forename><surname>Cecilia</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Yadira</forename><surname>Juani</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Margarita</forename><surname>Caterina</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Yves</forename><surname>Soho</surname></persName>
						</author>
						<author>
							<persName><roleName>Mathieu, Yimin, Martin</roleName><forename type="first">Claudio</forename><surname>Peter</surname></persName>
						</author>
						<author>
							<persName><roleName>Tómas, Ger- man, Emanuelle, Irene</roleName><forename type="first">José</forename><surname>Manuel</surname></persName>
						</author>
						<author>
							<persName><surname>Salvatore</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Jerome</forename><surname>Luka</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Paula</forename><surname>Magin</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Don</forename><surname>Alfredo</surname></persName>
						</author>
						<author>
							<persName><roleName>Don</roleName><forename type="first">Doña</forename><surname>Betzy</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Doña</forename><surname>Charo</surname></persName>
						</author>
						<author>
							<persName><roleName>Consuelo, Nestor, Omar, Juanjo, Beto, Nippur, Ronald, Mauricio</roleName><forename type="first">Telma</forename><surname>Gonzalo</surname></persName>
						</author>
						<author>
							<persName><surname>Pomky</surname></persName>
						</author>
						<author>
							<persName><roleName>Ester</roleName><surname>Oeg</surname></persName>
						</author>
						<author>
							<persName><roleName>Moisés, Mar, Miguel</roleName><surname>Nicholas</surname></persName>
						</author>
						<author>
							<persName><surname>Yadira</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Raziel</forename><surname>Juani</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Universidad Politécnica de Madrid</orgName>
								<address>
									<country key="ES">Spain</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="laboratory">Agradecimientos Esta tesis es el resultado de una parte de mi trabajo como investigador en el Ontology Engineering Group</orgName>
								<orgName type="institution" key="instit1">OEG</orgName>
								<orgName type="institution" key="instit2">Universidad Politécnica de Madrid</orgName>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">168EF95325082EEEAF1FC7D6BB0CD6A7</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-07-16T18:27+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>There are many people I want to thank since they kindly supported me in so many different ways for the successful completion of this thesis.</p><p>First of all, I would like to thank in a very special way Prof. Dr. Asunción Gómez-Pérez, my supervisor and guide during these years. In this period of my research, she gave me a fair amount of freedom to develop myself and, at the same time she encouraged and supported me, providing the necessary guidance to achieve the best results. Actually, she is the reason I decided to start my research in the semantic web field.</p><p>During the elaboration of this thesis, I found out that, in many cases, informal conversations with friends and colleagues were of great importance to clarify ideas. So, I want to thank all the members of the OEG group for the interesting discussions we had in all these years: Mari Carmen, Elena, Ándres, Ángel, José Ángel, Víctor, Raúl, Óscar, Lupe, Mariano, Jaime, Inma, among others. In addition, I would like to thank Rosario Plaza for helping me with the writing of the document. I also want to extend my gratitude to all the friends with whom I shared many wonderful moments during my staying in Madrid. I will always remember them, specially</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Abstract</head><p>Current well-known methodologies for building ontologies do not consider the reuse and possible subsequent re-engineering of existing knowledge resources. The ontologization of non-ontological resources has led to the design of several specific methods, techniques and tools. These are mainly specific to a particular resource type, or to a particular resource implementation. Thus, everytime ontology engineers are confronted with the task of re-engineering a new resource into an ontology, they develop ad-hoc solutions for transforming such resource into a single ontology.</p><p>Within the context of the NeOn project, we propose a novel methodology for building ontology networks: the NeOn Methodology, a methodology based on scenarios. One of these scenarios is Building Ontology Networks by Reusing and Reengineering Non-Ontological Resources. As opposed to custom-building silos of single ontologies from scracth, this new scenario emphasizes the re-engineering of knowledge resources for building ontologies that are connected with other ontologies in the ontology network. The scope of this thesis lies in this scenario of the NeOn Methodology and in the use of re-engineering patterns for transforming non-ontological resources components into ontology representational primitives. Specifically, this thesis presents the following main contributions:</p><p>• A categorization of non-ontological resources, made by defining the term non-ontological resources and by proposing a three-level categorization of them according to the type, data model, and implementation of the resource.</p><p>• A metadata vocabulary, NoRMV, for describing non-ontological resources.</p><p>• Methodological guidelines for reusing available non-ontological resources, which have reached some degree of consensus by the community when building ontologies.</p><p>• Methodological guidelines for transforming the non-ontological resources selected into ontologies by re-engineering patterns.</p><p>• A set of re-engineering patterns for transforming classification schemes, thesauri, and lexica into ontologies.</p><p>• A software library, NOR 2 O, that implements the transformations suggested by the re-engineering patterns when building ontologies.</p><p>The integrated framework proposed in this thesis allows speeding up the ontology development, thus saving time and effort. v</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Resumen</head><p>Las metodologías disponibles para el desarrollo de ontologías no tienen en cuenta la reutilización y posible re-ingeniería de recursos de conocimiento disponibles. La ontologización de recursos no-ontológicos ha dado lugar al diseño de varios métodos, técnicas y herramientas. Éstas son específicas para un tipo o implementación particular del recurso que se va transformar. Por lo tanto, cada vez que los ingenieros ontológicos se enfrentan a la re-ingeniería de un nuevo recurso en una ontología, tienen que desarrollar soluciones ad-hoc para poder transformar dicho recurso en una ontología.</p><p>Dentro del contexto del proyecto NeOn, se ha propuesto la Metodología NeOn, una metodología novedosa basada en escenarios, para desarrollar ontologías en red. Uno de estos novedosos escenarios es el de la Construcción de Ontologías mediante la Reutilización y Re-ingeniería de Recursos No-ontológicos. Al contrario que la construcción personalizada de silos de ontologías simples partiendo desde cero, este nuevo escenario destaca la re-ingeniería de recursos de conocimiento para la construcción de ontologías que están conectadas con otras dentro de la red de ontologías. El ámbito de esta tesis se circunscribe al escenario de la Metodología NeOn así como al uso de patrones de re-ingeniería para transformar los componentes de recursos no-ontológicos en elementos de una ontología. Esta tesis presenta específicamente las siguientes contribuciones:</p><p>• Una categorización de recursos de conocimiento, definiendo el término de recurso no-ontológico y presentado una clasificación de los mismos de acuerdo al tipo, modelo de datos e implementación.</p><p>• Un vocabulario de metadatos para describir los recursos no-ontológicos, NoRMV.</p><p>• Guías metodológicas para el proceso de reutilización de recursos no-ontológicos, que hayan alcanzado un grado de consenso dentro de una comunidad, para la construcción de ontologías.</p><p>• Guías metodológicas para el proceso de re-ingeniería de recursos no-ontológicos en ontologías, mediante el uso de patrones de re-ingeniería.</p><p>• Una librería de patrones de re-ingeniería para transformar esquemas de clasificación, tesauros y lexicones en ontologías.</p><p>• Una librería de software, NOR 2 O, que implementa las transformaciones sugeridas por los patrones de re-ingeniería para la construcción de ontologías.</p><p>Todo el marco propuesto en esta tesis permite acelerar el desarrollo de ontologías reduciendo así costes de tiempo y esfuerzo. Ontologies are being used to model a domain of knowledge and to share information. They are found in knowledge engineering, artificial intelligence, computer science, and the Semantic Web, among others fields, as a form of knowledge representation of the world, or some part of it. The word ontology is taken from Philosophy, where it means a systematic explanation of existence. In the field of Artificial Intelligence there are many definitions for it, a collection of which appears in <ref type="bibr" target="#b94">[GPFLC03]</ref>. Neches [NFF + 91] was the first to define an ontology, which he did as follows: "Ontology defines the basic terms and the relations that include the vocabulary of a specific area, in addition to the rules to combine terms and relations to define extensions to the vocabulary". Gruber <ref type="bibr" target="#b100">[Gru93b,</ref><ref type="bibr" target="#b99">Gru93a]</ref> defines the ontology as "An explicit specification of a conceptualization", being this definition the most referenced in the literature. Borst <ref type="bibr" target="#b66">[Bor97]</ref> slightly modifies Gruber's definition by saying that "Ontologies are defined as a formal specification of a shared conceptualization". These last two definitions have been merged and explained by Studer et al. <ref type="bibr" target="#b137">[SBF98]</ref> as "An ontology is a formal, explicit specification of a shared conceptualization. Conceptualization refers to an abstract model of some phenomenon. Explicit means that the type of concepts used and the constraints on their use are explicitly defined. Formal refers to the fact that the ontology should be machine-readable. And shared reflects the notion that an ontology captures consensual knowledge, that is, it is not private of some individual, but accepted by a group".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1.1">Overview of Some Methodologies for Building Ontologies</head><p>Research on Ontology Engineering methodologies has provided methods and techniques for developing ontologies from scratch. Well-recognized methodological approaches such as METHONTOLOGY <ref type="bibr" target="#b94">[GPFLC03]</ref>, On-To-Knowledge <ref type="bibr" target="#b145">[SSSS01]</ref>, and DILIGENT <ref type="bibr" target="#b135">[PTS04]</ref> issue guidelines that help researchers to develop ontologies. However, researchers face an important limitation: no guidelines are provided CHAPTER 1. INTRODUCTION for building ontologies by re-engineering some knowledge resources widely used within a particular community.</p><p>During the last decade, specific methods, techniques and tools were proposed for building ontologies from available knowledge resources. First, ontology learning methods and tools were proposed to extract relevant concepts and relations from structured, semi-structured, and non-structured resources <ref type="bibr" target="#b95">[GPMM04,</ref><ref type="bibr" target="#b130">MS01]</ref> in order to form a single ontology. One important constraint of these methods and tools is that they propose ad-hoc solutions to transforming such resources, mainly texts, into ontologies. Hepp et al. <ref type="bibr" target="#b103">[Hep06,</ref><ref type="bibr" target="#b102">HdB07,</ref><ref type="bibr" target="#b104">Hep07]</ref> stated that employing methods and techniques when ontologizing non-ontological resources to the level of ontologies is key for the success of semantic technology and this for two main reasons: (1) if the use of semantic technologies for real-world data integration challenges is required, it is possible to refer to the original conceptual elements, and (2) for many domains, the existing category systems, XML schemas, and normative entity identifiers are the most efficient resources for engineering ontologies.</p><p>The literature presents a wide set of methods and tools for the ontologization of non-ontological resources. This ontologization of resources has led to the design of several specific methods, techniques and tools <ref type="bibr" target="#b102">[HdB07,</ref><ref type="bibr" target="#b112">HVTS08,</ref><ref type="bibr" target="#b88">GGMO03,</ref><ref type="bibr" target="#b85">GC05]</ref>. These are mainly specific to a particular resource type, or to a particular resource implementation. Thus, every time ontology engineers are faced with a new resource type or implementation, they develop ad-hoc solutions to transforming such resource into a single ontology.</p><p>The analysis of the ontologies developed by distinct research groups in different international and national projects have revealed that there are different alternative ways or possibilities to build ontologies by reusing and re-engineering the available knowledge resources used by a particular community. However, at this stage we can state that all the projects perform an ad-hoc transformation of the resources available for building ontologies.</p><p>• Knowledge Web<ref type="foot" target="#foot_0">1</ref> deals with the aligning and versioning of ontologies as well as the use of best practices or patterns related to W3C activities.</p><p>• The SEKT<ref type="foot" target="#foot_1">2</ref> project focuses on argumentative development of ontologies.</p><p>• The UMLS Project<ref type="foot" target="#foot_2">3</ref> describes the experiences gained while transforming the UMLS Semantic Network into OWL ontology.</p><p>• The UK PRODIGY <ref type="foot" target="#foot_3">4</ref> describes the transformation of tangled hierarchiesthose derived from ambiguous "broader than / narrower than" thesauri in library science -into formal ontologies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1.">CONTEXT</head><p>• The Knowledge Nets 5 project aims to investigate the impact of the Semantic Web technologies on electronic markets; one particular objective of this project is to build ontologies by reusing existing taxonomies for the description of skills as well as the classification of job profiles and industrial sectors within the job recruitment domain.</p><p>• Jimeno-Yepes et al. <ref type="bibr" target="#b117">[JYJRBLRS09]</ref> explore how to use terminological resources for ontology engineering. They describe an approach for the proper creation and use of a shared thesaurus in the development of ontologies.</p><p>They have applied their approach to a real scenario, the Health-e-Child (HeC) project 6 and have evaluated the impact of filtering and re-organizing several resources.</p><p>• The e-POWER project 7 aims to integrate heterogeneous components by means of a semantically-enhanced middleware, which operates between the portal and the web services interfacing the functionalities of back-offices.</p><p>As it can be inferred from above, a new ontology development paradigm started approximately in 2007, whose emphasis was on the reuse and possible subsequent re-engineering of knowledge resources, as opposed to custom-building new ontologies from scratch. However, in order to support and promote such reusebased approach, new methods, techniques, and tools are needed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1.2">Non-ontological Resources</head><p>The knowledge resources, reused in the aforementioned projects for building ontologies, contain, readily available, a wealth of category definitions and reflect some degree of community consensus. In this thesis, we refer to non-ontological resources (NOR) 8 as those knowledge resources whose semantics have not yet been formalized explicitly by means of ontologies. Examples of NORs are classification schemes, thesauri, lexica, and folksonomies, among others. This type of resources encodes different types of knowledge and can be implemented in different ways.</p><p>Our analysis of the literature has revealed different ways of categorizing nonontological resources. Thus Maedche et al. <ref type="bibr" target="#b130">[MS01]</ref> and Sabou et al. [SAd + 07] classify non-ontological resources into unstructured (e.g. free text), semi-structured (e.g. folksonomies) and structured (e.g. databases) resources; whereas Gangemi et al. <ref type="bibr" target="#b96">[GPS98]</ref> distinguish catalogues of normalized terms, glossed catalogues, and taxonomies. Finally, Hodge <ref type="bibr" target="#b109">[Hod00]</ref> proposes characteristics such as structure, complexity, relationships among terms, and historical functions for classifying them. However, an accepted and agreed upon typology of non-ontological resources does not exist yet.</p><p>5 http://wissensnetze.ag-nbi.de/ 6 http://www.health-e-child.org/ 7 http://lri.jur.uva.nl/ ˜epower/ 8 Along this thesis we use either NOR or Non-ontological resource without distinction.</p><p>As mentioned before, an ontology <ref type="bibr" target="#b137">[SBF98]</ref> has to reflect the notion of capturing consensual knowledge. Capturing this consensual knowledge is not an easy task to accomplish, especially if the ontology is built from scratch.</p><p>Furthermore, non-ontological resources usually contain terminology already agreed upon by a broad community of people, who have a given protocol for that. So, at least the labels used for naming terms are agreed on by consensus. Therefore, it is important to (1) select the appropriated resources, and (2) transform them into ontologies. In this way, the ontologies generated will have reached consensus within the ontological community. In addition, this reuse and possible subsequent re-engineering of existing resources will also speed up the ontology development; therefore, we will save time, effort and resources.</p><p>Along with this thesis we will work with non-ontological resources, specifically classification schemes, thesauri and lexica.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1.3">NeOn Methodology for Building Ontology Networks</head><p>Starting in 2007, the NeOn project <ref type="foot" target="#foot_4">9</ref> has made some noteworthy contributions to ontological engineering; however, the most important one is the design of the NeOn Methodology <ref type="bibr" target="#b138">[SF10,</ref><ref type="bibr" target="#b97">GPSF09]</ref>, which includes the definition of a new ontology development process, life cycle models based on methods, as well as the techniques and tools to be used during the ontology building.</p><p>The NeOn Methodology is a scenario-based methodology. It proposes nine scenarios for building ontology networks collaboratively, emphasizing the reuse and re-engineering of knowledge resources. The identified scenarios that may arise during the ontology (network) development are the following:</p><p>• Scenario 1: From specification to implementation.</p><p>• Scenario 2: Reusing and re-engineering non-ontological resources.</p><p>• Scenario 3: Reusing ontological resources.</p><p>• Scenario 4: Reusing and re-engineering ontological resources.</p><p>• Scenario 5: Reusing and merging ontological resources.</p><p>• Scenario 6: Reusing, merging and re-engineering ontological resources.</p><p>• Scenario 7: Reusing ontology design patterns.</p><p>• Scenario 8: Restructuring ontological resources.</p><p>• Scenario 9: Localizing ontological resources.</p><p>Figure <ref type="figure" target="#fig_1">1</ref>.1 presents a set of the nine identified scenarios for building ontologies and ontology networks. The directed arrows with numbered circles associated represent the different scenarios. Each scenario is decomposed into different processes or activities that are represented with coloured circles or with rounded boxes. Such processes and activities are defined in the NeOn Glossary of Activities <ref type="bibr" target="#b140">[SFGP08]</ref>. The figure also shows (as dotted boxes) the available knowledge resources to be reused and possible outputs (implemented ontology networks and alignments) resulting from the execution of some of the scenarios presented. The scope of this thesis is to propose novel methods, techniques and tools for supporting scenario 2, which reuses and re-engineers non-ontological resources for building ontology networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1.4">Patterns in Ontology Engineering</head><p>In the (Object-Oriented) software community, patterns are used to describe software design structures that can be used over and over again in different systems. They provide a general solution that has to be applied in a particular context, in which the design considerations serve to decide whether the pattern is useful and how it could be implemented best <ref type="bibr" target="#b80">[EPJ06]</ref>. A kind of software patterns are the re-engineering software patterns <ref type="bibr" target="#b134">[PS98]</ref>. These patterns describe how to change a legacy system into a new, refactored system that fits current conditions and requirements. Their main goal is to offer a solution for re-engineering problems. They are also on a specific level of abstraction, describe a process of re-engineering without proposing a complete methodology, and sometimes can suggest which type of tool to use.</p><p>In the ontology engineering community the idea of applying patterns for modelling ontologies was proposed by Peter Clark <ref type="bibr" target="#b77">[CTP00]</ref>. Since then, relevant works CHAPTER 1. INTRODUCTION on patterns have appeared, such as the Semantic Web Best Practices and Deployment Working Group <ref type="foot" target="#foot_5">10</ref> , the Ontology Design Patterns Public Catalog <ref type="foot" target="#foot_6">11</ref> , the Ontology Design Patterns (ODP) Portal <ref type="foot" target="#foot_7">12</ref> , and the Linked Data Patterns <ref type="foot" target="#foot_8">13</ref> , which is a catalogue of Linked Data <ref type="bibr" target="#b64">[Biz09]</ref> patterns. According to Presutti et al. <ref type="bibr" target="#b92">[GP08]</ref> Ontology Design Patterns are modelling solutions used to solve a recurrent ontology design problem. They distinguish different types of Ontology Design Patterns by grouping them into six families. Each family addresses different kinds of problems and can be represented with different levels of formality. ODPs reduce the effort of building ontologies.</p><p>As stated in the section 1.1.1, the re-engineering methods, techniques and tools that ontologize non-ontological resources are mainly specific to a particular resource type or to a particular resource implementation. Along this thesis we propose a set of re-engineering patterns for transforming available non-ontological resources, which have reached some degree of consensus, into ontologies. Also, we will try to demonstrate that the use of re-engineering patterns for transforming non-ontological resources into ontologies has several advantages: patterns (1) embody expertise in guiding a re-engineering process, (2) improve the efficiency of the re-engineering process, (3) make the transformation process easier for ontology engineers, and (4) speed up the ontology development process.</p><p>Thus, in this thesis we propose methodological guidelines to address these research problems, as well as a set of patterns that make explicit the hidden transformation decisions in the conversion scripts used in the ad-hoc approaches. Hence, it will be easier for ontology engineers to (1) reuse the hidden transformation decisions according to the type and implementation of the resources, and (2) perform the transformation of the resources into ontologies by saving time and effort.</p><p>Therefore, here we propose a model as well as methods and tools for transforming non-ontological resources into ontologies by using re-engineering patterns.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Thesis Structure</head><p>The remainder of the thesis proceeds as follows:</p><p>• Chapter 2 describes the state of the art of the topics of interest in this work.</p><p>For each topic we analyze the limitations and open research problems, emphasizing those to which we provide solutions.</p><p>• Chapter 3 provides a presentation of the objectives and main contributions of the thesis. Because of the limitations found in the state of the art, we describe first the overall objectives of the thesis and then the specific ones.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2.">THESIS STRUCTURE</head><p>Then, we introduce our contributions to the current state of the art, followed by the presentation of the assumptions, hypotheses and restrictions of this work.</p><p>• Chapter 4 explains the research methodology followed when designing the method for reusing and re-engineering non-ontological resources into ontologies, and the general framework for describing such a method.</p><p>• Chapter 5 presents our contribution to the topic of reusing non-ontological resources. First we provide a definition of the non-ontological resources.</p><p>Then, we present a categorization of non-ontological resources. Finally, we describe the methodological guidelines proposed for the non-ontological reuse process.</p><p>• Chapter 6 introduces a general method for re-engineering non-ontological resources into ontologies. We start by introducing the model for reenginee-ring non-ontological resources with re-engineering patterns. Then, we describe the methodological guidelines proposed for the non-ontological resource re-engineering process.</p><p>• Chapter 7 presents the patterns for re-engineering classification schemes into ontologies. First we define classification schemes and describe their main characteristics. Then we depict the set of patterns we have created for transforming classification schemes into ontologies.</p><p>• Chapter 8 describes the patterns for re-engineering thesauri into ontologies. We start by defining thesauri and describing their main characteristics. Then we present the set of patterns we have created for transforming thesauri into ontologies.</p><p>• Chapter 9 presents the patterns for re-engineering lexica into ontologies.</p><p>First we define lexica and describe their main characteristics. Then we depict the set of patterns we have created for transforming lexica into ontologies.</p><p>• Chapter 10 describes the technological support for the model and method proposed. First, we present the software library, NOR 2 O, that carries out the transformation process suggested by the patterns. Next, we depict a pattern library that includes the set of patterns for re-engineering non-ontological resources into ontologies.</p><p>• Chapter 11 is dedicated to evaluation. We have divided this chapter into two parts. The first one describes the evaluation, which is focused on all the methodological aspects related to the reuse and re-engineering of nonontological resources for building ontologies. The second part deals with the evaluation of the technology.</p><p>• Chapter 12 provides the conclusions and future lines of work.</p><p>CHAPTER 1. INTRODUCTION</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">Dissemination of Results</head><p>To conclude the introduction, it is important to remark that parts of this thesis have been internationally disseminated. A summary of the whole thesis has been published in  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>STATE OF THE ART</head><p>In this chapter we present an exhaustive analysis of the state of the art of the topics of interest covered in this thesis and a discussion on the limitations of the research works on the state of the art. We start with the presentation of a framework for comparing the methods and tools that permit reusing and re-engineering nonontological resources when building ontologies. Then, we provide the background on patterns for re-engineering. Finally, we conclude by summarizing the limitations found in the state of the art.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">A Comparative Framework of Methods and Tools for</head><p>Reusing and Re-engineering NORs into Ontologies</p><p>In this section we present a comparative study of the most outstanding methods and tools for reusing and re-engineering non-ontological resources into ontologies.</p><p>To carry out this study we have established a common framework with which to compare the main characteristics of the different methods and tools. The section is organized as follows: Section 2.1.1 introduces the framework for evaluating the methods and tools employed when reusing non-ontological resources and re-engineering them into ontologies. Section 2.1.2 describes the methods for reusing and re-engineering non-ontological resources. Section 2.1.3 depicts the tools available for this purpose. Finally, Section 2.1.4 presents the results and conclusions of the methods and tools evaluated in this comparative study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.1">Evaluation Framework</head><p>In this section we set up a framework for comparing the methods and tools required to reuse non-ontological resources and re-engineer them into ontologies. The framework is organized in four dimensions (the non-ontological resource, the reuse process, the transformation process, and the resultant ontology) that gather several features with which to compare the approaches proposed in the literature. The first dimension analyses the features of a NOR; the second covers the selection CHAPTER 2. STATE OF THE ART of the NORs; then, the third is focused on the transformation process, whereas the fourth is centred on the features of the resultant ontology.  • The data model <ref type="bibr" target="#b71">[Car02]</ref> is the abstract model that describes how data is represented and accessed. It can be different even for the same type of non-ontological resource. Besides, it is an important artefact for the reengineering process, because it helps to understand how the resource information is organized <ref type="bibr" target="#b89">[GGPSFVT08]</ref>. In the following chapters we present several data models for each of the non-ontological resources.</p><p>• With regard to the implementation we can classify non-ontological resources into (1) databases, (2) XML files, (3) flat files, and (4) spreadsheets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.1.2">Features of the reuse process</head><p>• The research work provides some methodological guidelines that support the selection of the resources to be transformed.</p><p>• The reuse process is supported by a tool or a set of tools.</p><p>• The research work keeps track of the provenance<ref type="foot" target="#foot_10">1</ref> of the resource, i.e., a reference to the non-ontological resource for every ontology generated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.1.3">Features of the transformation process</head><p>• The transformation process may follow one of the following approaches:</p><p>(1) ABox transformation <ref type="bibr" target="#b73">[CHPG09]</ref>, which transforms the resource schema into an ontology schema, and the resource content, into ontology instances;</p><p>(2) TBox transformation <ref type="bibr" target="#b73">[CHPG09]</ref>, which transforms the resource content into an ontology schema; or (3) Population, which transforms the resource content into instances of an available ontology. Figure <ref type="figure" target="#fig_4">2</ref>.2 depicts each of the possible transformations. The ABox transformation leaves the informal semantics of the transformed resources mostly untouched, whereas, the TBox transformation tries to enforce a formal semantics into them.</p><p>• The research work performs the transformation either (1) on the syntactic level; or (2) on the semantic level. The syntactic level deals with the ability to structure the representation in structured sentences, formulas or assertions. This level includes the transformations of resource component definitions according to the grammars of the source and target formats <ref type="bibr" target="#b75">[Cor05]</ref>, in other words, it includes a structure-preserving transformation that should reflect the resource structure as closely as possible. The semantic level deals with the ability to construct the propositional meaning of the representation <ref type="bibr" target="#b75">[Cor05]</ref>, which basically is a specific interpretation of the non-ontological resource.</p><p>• The research work makes explicit the semantics hidden in the relations of the non-ontological resource terms, e.g., subClassOf , partOf .</p><p>• The research work relies on (1) additional resources, or (2) a human domain expert for making explicit the semantics hidden in the relations of the NOR terms.</p><p>• The transformation process can be (1) automatic, (2) semi-automatic, and</p><p>(3) manual.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 2. STATE OF THE ART</head><p>• The research work provides some methodological guidelines that support the transformation process.</p><p>• The list of the techniques employed in the transformation process are clearly identified: mapping rules, re-engineering patterns, etc.</p><p>• The transformation process is supported by a tool or a set of tools. • The components of the ontology generated are classes, attributes, relations, or instances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>• The ontology implementation language is OWL or RDF(S).</p><p>• The research work generates a single ontology or several ontologies. However, we do not distinguish whether the ontologies generated are interconnected or not.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2">Methods for Reusing and Re-engineering Non-ontological Resources</head><p>In this section, we describe the most significant methods for reusing and re-engineering non-ontological resources taking into account the features previously identified in the framework. To do this, we analyse the literature from two complementary perspectives: First, in Section 2.1.2.1 we describe the methods for building ontologies by means of transforming different types of resources (classification schemes, thesauri, lexicons and folksonomies). Second, in Section 2.1.2.2 we analyze the methods based on the implementation of the resources (database, XML, flat file and spreadsheet).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2.1">Methods centred on the non-ontological resource type</head><p>In this section we present the most outstanding methods on reusing and re-engineering non-ontological resources. Specifically, we summarize methods for building ontologies from classification schemes, folksonomies, lexica and thesauri.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methods for building ontologies from classification schemes</head><p>The two main methods for transforming classification schemes are the GenTax <ref type="bibr" target="#b102">[HdB07]</ref> method and Hakkarai-nen et al's method <ref type="bibr" target="#b107">[HHST06]</ref>.</p><p>• GenTax is a method presented by Hepp et al. <ref type="bibr" target="#b102">[HdB07]</ref> for deriving semiautomatically consistent RDF(S) and OWL ontologies from hierarchical categorization schemas. For this method, a hierarchical categorization schema can be a taxonomy, a thesaurus, or a hierarchical classification, and any of them has to be implemented in a database. The three types of resources have in common the inclusion of a set of categories and some form of hierarchical order. This method does not take into consideration the data model of the input resource.</p><p>Gentax assumes that the non-ontological resource is already selected for its transformation; therefore, it provides neither methodological guidelines nor tools for the reuse process. Moreover, GenTax does not manage the resource provenance information, so the resultant ontology does not keep the reference to the non-ontological resource.</p><p>This method performs a semi-automatic TBox transformation, considering the syntactic and semantic levels. It makes explicit the semantics of the relations of the NOR categories. It also sets an ad-hoc and some taxonomic CHAPTER 2. STATE OF THE ART relations among the NOR categories. It provides methodological guidelines for the transformation, but does not clearly identify the techniques employed in the transformation. The transformation process is supported by a tool, SKOS2GenTax, which consists of a Java program, that accesses the NOR categories via an ODBC link.</p><p>Finally, the method produces a single lightweight ontology in OWL DLP or RDF(S). The ontology components generated are classes and relations. The method presented by Hakkarainen et al. transforms a specific nonontological resource, the ISO 15926-2 standard, but it provides neither methodological guidelines nor tools for the reuse process. Moreover, the method does not keep the resource provenance information, so the resultant ontology does not keep the reference to the non-ontological resource.</p><p>This method consists of (a) two transformation protocols, which are based on transformation rules, and (b) two inverse transformation protocols, which have the purpose of examining the possible loss of semantics. The method peforms a semi-automatic TBox transformation and considers the syntactic and semantic levels. It translates the whole set of subtype relations into sub-ClassOf relations. Additionally, it provides a set of methodological guidelines for the transformation and relies on transformation rules as the technique employed. However, not a single tool supporting the method is mentioned.</p><p>The transformation protocols generate a lightweight single ontology in OWL DL. The ontology components generated are classes, attributes, and relations. • Abbasi et al. <ref type="bibr" target="#b58">[ASC07]</ref> present a mechanism to transform a set of tags of a given folksonomy into instances of an available ontology. These authors, however, do not mention where tags are stored.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methods for building ontologies from folksonomies</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>Their method assumes that non-ontological resource is already selected for its transformation, so it provides neither methodological guidelines nor tools for the reuse process. Moreover, the method does not consider the resource provenance information, so the resultant ontology does not keep the reference to the non-ontological resource.</p><p>The method consists in (1) selecting the ontologies relevant to the tags by means of Swoogle<ref type="foot" target="#foot_13">4</ref> ; (2) pruning and refining the ontology; and (3) classifying the tags with lexico-syntactic patterns. It performs an automatic population, taking into consideration the syntactic level. However, it does not make explicit the semantics of the relations of the NOR categories, though it provides methodological guidelines for the transformation. The T-ORG tool, described in section 2.1.3, gives support to this method.</p><p>This method populates several lightweight ontologies, i.e., the ontology components generated are instances, although it does not mention the ontology language used.</p><p>• Maala et al.'s method <ref type="bibr" target="#b127">[MDA07]</ref> describes a conversion process from Flickr<ref type="foot" target="#foot_14">5</ref> tags to RDF descriptions. These authors present a method for automatically converting a set of tags into a RDF description in the context of photos on Flickr. It must be observed, however, that they do not mention where the Flickr tags are stored.</p><p>This method transforms a specific non-ontological resource, Flickr tags, but it provides neither methodological guidelines nor tools for the reuse process.</p><p>Nor does the method take into account the resource provenance information, so the resultant ontology does not keep the reference to the non-ontological resource.</p><p>Its authors analyse the tagging habits and the tagging content of the photos. To accomplish this, they rely on additional resources for the conversion such as (1) WordNet, which has been completed with extra information, (2) a database containing geographical locations and (3) an ontology of things. The method performs an automatic population, though it only considers the syntactic level. However, it does not make explicit the semantics of the relations of the NOR elements, although it provides methodological guidelines for the transformation. Nor does it clearly identify the techniques employed in the transformation. In addition, not a single tool supporting the method is mentioned.</p><p>This method populates a lightweight single ontology and the ontology components generated are instances, which are expressed in RDF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 2. STATE OF THE ART</head><p>Methods for building ontologies from lexica The two main methods for transforming lexica are presented in <ref type="bibr" target="#b148">[vAGS06]</ref> and <ref type="bibr" target="#b91">[GNV03,</ref><ref type="bibr" target="#b88">GGMO03]</ref> and both are focused on WordNet.</p><p>• The method of van Assem et al. <ref type="bibr" target="#b148">[vAGS06]</ref> proposes a standard conversion of WordNet <ref type="bibr" target="#b83">[Fel98]</ref> into the RDF/OWL representation language. This method employs version 2.0 of Princenton's WordNet Prolog distribution<ref type="foot" target="#foot_15">6</ref> , which contains eighteen files: one file represents synsets, word senses and words, and the remaining seventeen represent their relationship. This method takes into account the internal data model of the lexicon, and devises how the lexicon data is represented and accessed for the transformation. It also provides resource provenance information, so the resultant ontology keeps the reference to WordNet. However, it provides neither methodological guidelines nor tools for the reuse process.</p><p>In this method the authors include a process for designing the conversion of the resource, as well as a set of the requirements for the conversion. Some of the requirements include the following recommendations: Basically, the method consists in (1) creating a set of classes for each of the main components of WordNet: classes for every word, synset and sense; (2) modelling words, synsets and senses belonging to WordNet as instances of the previously created classes; and (3) coding part/s of the semantics related to each instance by means of the URIs used to identify each instance.</p><p>The method performs a semi-automatic ABox transformation, considering the syntactic level, but it does not make explicit the semantics of the relations of the NOR elements. However, it provides methodological guidelines for the transformation although it does not clearly identify the techniques employed in the transformation. The transformation process is supported by Swi-Prolog<ref type="foot" target="#foot_16">7</ref> tool.</p><p>This method produces a single lightweight ontology in RDF(S)/OWL Full. The ontology components generated are classes, attributes, relations, and instances.</p><p>• Gangemi et al. <ref type="bibr" target="#b91">[GNV03,</ref><ref type="bibr" target="#b88">GGMO03]</ref> present a method that explains how WordNet information can be bootstrapped, mapped, refined and modularized. It employs WordNet 1.6, which is stored in relational databases. It also takes into account the internal data model of the resource and devises how the lexicon data is represented and accessed for the transformation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>This method assumes that the non-ontological resource is already selected for its transformation; however, it provides neither methodological guidelines nor tools for the reuse process. Nor does it keep the resource provenance information, so the resultant ontology does not keep the reference to the non-ontological resource.</p><p>This is a hybrid method because it employs top-down techniques and tools from formal ontologies and bottom-up techniques from computational linguistics and machine learning. It can automatically extract association relations from WordNet elements and interpret those associations in terms of a set of conceptual relations, formally defined in the DOLCE <ref type="foot" target="#foot_17">8</ref> ontology.</p><p>The method consists in (1) bottom-up learning of association links (A-links), in which WordNed glosses are analysed, and A-links between a synset and the synsets in its gloss are created; and(2) top-down learning, in which the DOLCE ontology is used to interpret A-links in terms of axiomatic conceptual relations.</p><p>The method performs a semi-automatic TBox transformation, regarding the syntatic and semantic levels. Moreover, it makes explicit the semantics of the relations of the WordNet concepts (originally called synsets) by applying natural language techniques to their glosses and then using DOLCE ontology for making explicit the semantics of the ad-hoc relations (A-links). It provides methodological guidelines for the transformation. However, not a single tool supporting the method is mentioned.</p><p>The method generates a single lightweight ontology implemented in DAML+OIL.</p><p>The components of the ontology generated are classes, attributes, and relations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methods for building ontologies from thesauri</head><p>The six main methods for transforming thesauri are presented in <ref type="bibr" target="#b101">[Hah03,</ref><ref type="bibr" target="#b111">HS03]</ref>, <ref type="bibr" target="#b150">[vAMSW04]</ref>, <ref type="bibr" target="#b149">[vAMMS06]</ref>, <ref type="bibr" target="#b153">[WSWS01]</ref>, <ref type="bibr" target="#b112">[HVTS08]</ref>,[SLL + 04, LS06].</p><p>• Hahn et al. <ref type="bibr" target="#b101">[Hah03,</ref><ref type="bibr" target="#b111">HS03]</ref> present a method that extracts conceptual knowledge from an informal medical thesaurus, UMLS <ref type="foot" target="#foot_18">9</ref> , which is stored in ASCII files, and semi-automatically converts this conceptual knowledge into LOOM <ref type="foot" target="#foot_19">10</ref> . This method takes into account the internal data model of the thesaurus.</p><p>The method assumes that the non-ontological resource, UMLS, is already selected for its transformation. Therefore, it provides neither methodological guidelines nor tools for the reuse process. Besides, it ignores the resource provenance information, so the resultant ontology does not keep the reference to the non-ontological resource.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 2. STATE OF THE ART</head><p>Its authors formalize a model of partonomic reasoning that does not exceed the expressiveness of the well-understood concept language ALC <ref type="foot" target="#foot_20">11</ref> . Hahn et al. aim to extract conceptual knowledge from two major sub-domains of the UMLS, anatomy and pathology, in order to construct a formally sound knowledge base founded on an/the ALC-type description logic language.</p><p>This method performs a semi-automatic TBox transformation and takes into account the syntactic and semantic levels. It makes explicit the semantics of the relations of the UMLS elements by means of a biomedical domain expert. It treats the partOf/hasPart, isA, siblingOf, and associatedWith relations. It also introduces methodological guidelines for performing the transformation of the resource and relies on Ontology Design Patterns for partonomic relations. Besides, it utilizes a LOOM classifier for automatic consistency checking of the ontology generated.</p><p>This method produces a single heavyweight ontology expressed in formal description logics, LOOM. The ontology components generated are classes and relations.</p><p>• Van Assem et al. <ref type="bibr" target="#b150">[vAMSW04]</ref> present a method for converting thesauri from their native format to RDF(S) and OWL Full. The method deals with resources implemented in (1) a proprietary text format, (2) a relational database, and (3) an XML representation. However, it ignores the internal data model of the resource.</p><p>This method provides neither methodological guidelines nor tools for the reuse process. And nor does it take into account the resource provenance information; therefore, the resultant ontology does not keep the reference to the non-ontological resource.</p><p>The method consists of (1) preparation, in which the following characteristics of the thesaurus are analysed: conceptual model, relation between the conceptual and implementation model, and relations to standards; (2) syntactic conversion, which includes a structure-preserving translation and explication of the syntax of the resource; (3) semantic conversion, which includes the explication of semantics and specific interpretation of the thesaurus; and (4) standardization, which is an optional step for mapping a thesaurus onto a standard schema.</p><p>Additionally, this method performs a semi-automatic TBox transformation, taking into account the syntactic and semantic levels. It makes explicit the semantics of the relations of the thesaurus terms by means of a domain expert. Besides, it considers the subClassOf and ad-hoc relations. It also provides methodological guidelines for performing the transformation of the thesaurus though it provides neither information about the techniques employed nor a tool to support the method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>This method produces a single lightweight ontology in RDF(S)/OWL Full.</p><p>The ontology components generated are classes, attributes, and relations.</p><p>• Van Assem et al. <ref type="bibr" target="#b149">[vAMMS06]</ref> present a method for converting thesauri into the SKOS [MB05] RDF/OWL schema. This SKOS schema is a W3C recommendation developed by the W3C Semantic Web Best Practices Working Group. The method provides neither information about the format of the thesaurus, nor its internal data model. It is worth mentioning that the authors provide a description of the development of the method and of the method itself.</p><p>The development of this method is based on a process that has the following tasks: (1) defining the goal and requirements of the method; (2) comparing the available methods for transforming thesauri into ontologies; (3) developing the steps of the method (for this task the authors relied on the method of Miles et al. <ref type="bibr" target="#b128">[Mil05]</ref>); (4) applying the method to IPSV<ref type="foot" target="#foot_21">12</ref> , GTAA <ref type="foot" target="#foot_22">13</ref> and MeSH<ref type="foot" target="#foot_23">14</ref> thesauri; and (5) evaluating the method.</p><p>The method provides neither methodological guidelines nor tools for the reuse process. And it ignores the resource provenance information; therefore, the resultant ontology does not keep the reference to the non-ontological resource.</p><p>In a nutshell, the steps of the method are (1) to analyse the implementation and the documentation of the resource; <ref type="bibr">(2)</ref> to define mappings between input data items and output SKOS RDF; and (3) to develop an algorithm for the transformation program.</p><p>This method performs an automatic population, i.e., creates instances of the SKOS schema, taking into account the syntactic level. However, it does not make explicit the semantics of the relations of the thesaurus terms. In addition, it provides methodological guidelines for performing the transformation of the thesaurus though it does not provide information about the techniques employed. It relies on an ad-hoc tool for performing the transformation.</p><p>This method populates a single lightweight ontology. The ontology components generated are instances expressed in SKOS RDF. and is also available in XML files. This method takes into consideration the internal data model of the ATT thesaurus.</p><p>Since the method transforms a specific non-ontological resource, the ATT thesaurus, it provides neither methodological guidelines nor tools for the reuse process. Moreover, the method does not consider the resource provenance information, so the resultant ontology does not keep the reference to the non-ontological resource.</p><p>Basically, the method consists in: (1) converting the full ATT hierarchy into a hierarchy of concepts; (2) augmenting a number of concepts with additional attributes; and (3) adding knowledge about the relation between possible values of fields and nodes in the knowledge base.</p><p>The method performs a semi-automatic TBox transformation, taking into account the syntactic and semantic levels. It makes explicit the semantics of the relations of the thesaurus terms. It considers only the subClassOf relations and provides methodological guidelines for performing the transformation of the thesaurus. However, it provides neither information about the employed techniques nor a tool to support the method.</p><p>Additionally, it produces a lightweight ontology. The ontology components generated are classes, attributes, and relations and they are implemented in RDF(S).</p><p>• Hyvönen et al. <ref type="bibr" target="#b112">[HVTS08]</ref> present a method for transforming thesauri into ontologies. This method has been applied to the YSA thesaurus 16 . It provides neither information about the format of the thesaurus nor the internal data model of the thesaurus.</p><p>This method assumes that the non-ontological resource, YSA, is already selected for its transformation. Therefore, it provides neither methodological guidelines nor tools for the reuse process. Nor does it manage the resource provenance information; therefore, the resultant ontology does not keep the reference to the non-ontological resource.</p><p>On the other hand, it performs a semi-automatic TBox transformation, regarding the syntactic and semantic levels and makes explicit the subClassOf and partOf relations by using DOLCE 17 ontology. It also provides methodological guidelines for performing the transformation of the resource and relies on an ad-hoc tool; however, it does not provide information about the techniques employed.</p><p>The resultant heavyweight ontology, based on the YSA thesaurus, is the General Finnish Ontology YSO 18 . The ontology components generated are classes, attributes, and relations, all expressed in RDF(S).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>• Soergel et al. [SLL + 04], and Lauser et al. <ref type="bibr" target="#b124">[LS06]</ref> present a method for re-engineering the traditional thesaurus, AGROVOC <ref type="foot" target="#foot_26">19</ref> , which is stored in a database, into an ontology. This method considers the internal data model of the thesaurus.</p><p>Moreover, it assumes that the AGROVOC thesaurus is already selected for its transformation. Therefore, it provides neither methodological guidelines nor tools for the reuse process. Nor does it provide the resource provenance information; therefore, the resultant ontology does not keep the reference to the non-ontological resource.</p><p>On the other hand, the method of Soergel et al. explores the applicability of the rules-as-you-go approach to improve the re-engineering process. The steps of the transformation process are (1) to define the ontology structure;</p><p>(2) to fill in values from one or more legacy KOS to the extent possible; and (3) to edit manually using an ontology editor and to make the existing information more precise by adding new information. Their method performs a manual TBox transformation, considering the syntactic and semantic levels. This method makes explicit the subClassOf and ad-hoc relations by means of a domain expert. It provides methodological guidelines for performing the transformation of the resource.</p><p>Besides, this method produces a heavyweight ontology. The components of the ontology generated are classes, attributes, and relations, all expressed in OWL DL.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2.2">Methods centred on the ton-ontological resource implementation</head><p>In this section we present the most relevant methods we have found in the literature: research works for building ontologies from databases, XML, flat files and spreadsheets.</p><p>Methods for building ontologies from databases The two main methods for building ontologies from databases are presented in <ref type="bibr" target="#b146">[SSV02]</ref>, <ref type="bibr" target="#b61">[BCGP04,</ref><ref type="bibr" target="#b60">Bar07]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 2. STATE OF THE ART</head><p>• Stojanovic et al. <ref type="bibr" target="#b146">[SSV02]</ref> present an integrated and semi-automatic approach for generating shared-understandable metadata of data-intensive Web applications. Their method deals with resources stored in relational databases, and takes into consideration the internal data model of the resources.</p><p>It assumes that the resource is already selected for its transformation. Therefore, it provides neither methodological guidelines nor tools for the reuse process. Nor does it provide the resource provenance information, so the resultant ontology does not keep the reference to the non-ontological resource.</p><p>This method consists of the following steps: (1) the capture of information from relational schema through reverse engineering (it should be added that user interaction is necessary in this step); (2) the analysis of the information obtained and the maping of database entities into ontological entities with a set of mapping rules;</p><p>(3) the evaluation, validation and refining of the mapping; and (4) the creation of a knowledge base, i.e. data migration.</p><p>The method performs a semi-automatic ABox transformation, taking into consideration only the syntactic level. However, it does not make explicit the semantics of the relations of the NOR elements, though it provides methodological guidelines and employs mapping rules as a technique for the transformation. For the automation of the mapping process, it relies on KAON-REVERSE<ref type="foot" target="#foot_27">20</ref> , a tool for connecting semi-automatically relational database to ontologies.</p><p>In addition, it produces a lightweight ontology and generates ontology instances. The resultant ontology is expressed in F-Logic<ref type="foot" target="#foot_28">21</ref> , and the ontology instances are expressed in RDF.</p><p>• Barrasa et al. <ref type="bibr" target="#b61">[BCGP04,</ref><ref type="bibr" target="#b60">Bar07]</ref> present an integrated framework for the formal specification, evaluation and exploitation of the semantic cor-respondences between ontologies and relational data sources. These authors introduce a method that deals with resources stored in relational databases and that takes into consideration the internal data model of the resources.</p><p>The framework consists of the following two main components: (1) R 2 O, which is a declarative language for the description of arbitrarily complex mapping expressions between ontology elements (concepts, attributes and relations) and relational elements (relations and attributes); and (2) ODEMapster processor, which generates Semantic Web instances from relational instances based on the mapping description expressed in an R 2 O document.</p><p>The method assumes that the database is already selected for its transformation. Therefore, it provides neither methodological guidelines nor tools for the reuse process. Nor does it consider the resource provenance infor-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>mation; therefore, the resultant ontology does not keep the reference to the non-ontological resource.</p><p>This method consists in (1) discovering semi-automatically mappings between the database and ontology elements, user interaction is necessary in some special cases; (2) expressing those mappings in a formal language, R 2 O;</p><p>(3) evaluating and verifying those mappings manually; and (4) exploiting those mappings for retrieving the data using ODEMapster.</p><p>The method performs an automatic population of an ontology, taking into consideration the syntactic level. However, it does not make explicit the semantics of the relations of the NOR elements, although it provides methodological guidelines for the transformation.</p><p>Finally, it generates ontology instances expressed in RDF.</p><p>Methods for building ontologies from XML files The three main methods for building ontologies from XML files are presented in [GC05, AM05, CXH04].</p><p>• García et al. <ref type="bibr" target="#b85">[GC05]</ref> introduce a method to create an ontology from the XML schema and to populate it with instances created from the XML data. The method does not take into account the internal data model of the resource.</p><p>This method assumes that the resource, stored in an XML file, is already selected for its transformation. Therefore it provides neither methodological guidelines nor tools for the reuse process. Nor does it consider the resource provenance information, so the resultant ontology does not keep the reference to the non-ontological resource.</p><p>The method consists of the following steps: (1) XSD2OWL Mapping, in which the semantics implicit in the schema is captured with the XSD2OWL tool; and (2) XML2RDF Mapping, in which a translation of the XML metadata instances to RDF instances is performed with the XML2RDF tool.</p><p>This method performs a semi-automatic ABox transformation, taking into account only the syntactic level. However, it does not make explicit the semantics of the relations of the NOR elements, although it provides methodological guidelines and employs mapping rules as a technique for the transformation.</p><p>Finally, it produces a single lightweight ontology. The ontology components generated are classes, attributes, relations, and instances, all expressed in RDF/OWL Full.</p><p>• An et al. <ref type="bibr" target="#b56">[AM05]</ref> present a method for translating an XML web document into an instance of an OWL DL ontology. The method does not consider the internal data model of the resource.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 2. STATE OF THE ART</head><p>The method assumes that the resource, stored in an XML file, is already selected for its transformation. Therefore, it provides neither methodological guidelines nor tools for the reuse process. Moreover, the method does not keep the resource provenance information, so the resultant ontology does not keep the reference to the non-ontological resource.</p><p>This method takes advantage of the semi-automatic mapping discovery tool <ref type="bibr" target="#b53">[ABM05]</ref> for the relationship between XML schema and the ontology. It performs a semi-automatic population, considering only the syntactic level. It does not make explicit the semantics of the relations of the NOR elements and does not provide methodological guidelines.</p><p>Finally, it populates an ontology. The ontology components generated are and instances, all expressed in RDF.</p><p>• Cruz et al. <ref type="bibr" target="#b78">[CXH04]</ref> present a method that transforms XML schema into an ontology and preserves the XML document structure, i.e., by modelling the knowledge implicit in XML schema with RDF(S). This method does not take into account the internal data model of the resource.</p><p>The method assumes that the resource, stored in an XML file, is already selected for its transformation. Therefore, it provides neither methodological guidelines nor tools for the reuse process. Nor does it consider the resource provenance information; so the resultant ontology does not keep the reference to the non-ontological resource.</p><p>Basically, the method consists of the following phases: (1) element-level transformation, which defines the basic classes and properties of the ontology; (2) structure-level transformation, which encodes the hierarchical structures of the XML schema into the ontology; and (3) query driven data migration, which transforms the query expressed in RDQL<ref type="foot" target="#foot_29">22</ref> into XQuery<ref type="foot" target="#foot_30">23</ref> query and creates the RDF instances that satisfies the query.</p><p>This method performs a semi-automatic ABox transformation, taking into account only the syntactic level, but it does not make explicit the semantics of the relations of the NOR elements. Besides, it provides methodological guidelines and employs mapping rules as a technique for the transformation.</p><p>Finally, it produces a single lightweight ontology. The ontology components generated are classes, attributes, relations, and instances, all expressed in RDF(S).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methods for building ontologies from flat files</head><p>The main method to transforming flat file is presented in <ref type="bibr" target="#b82">[FB06]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>• Foxvog et al. in <ref type="bibr" target="#b82">[FB06]</ref> present a method that transforms Electronic Data Interchange (EDI)<ref type="foot" target="#foot_31">24</ref> messages into ontologies. There are two major EDI standards: the EDIFACT <ref type="bibr" target="#b62">[Ber94]</ref>, which is defined as an open standard by the United Nations, and the ASC X12<ref type="foot" target="#foot_32">25</ref> standard, which is primarily used in the United States. This method is centred on the ASC X12 standard, whose messages are stored in flat files. However, it does not take into account the internal data model of the resource.</p><p>The method assumes that the resource, EDI standard, is already selected for its transformation. Therefore, it provides neither methodological guidelines nor tools for the reuse process. Nor does it consider the resource provenance information; for this reason, the resultant ontology does not keep the reference to the non-ontological resource.</p><p>This method, which transforms ASC X12 messages into ontologies, consists in creating (1) a vocabulary for specifying the formats of the messages; and</p><p>(2) a set of instances.</p><p>It also performs a semi-automatic ABox transformation, considering only the syntactic level, and provides methodological guidelines. However, it does not make explicit the semantics of the relations of the NOR elements.</p><p>Finally, it produces several lightweight ontologies. The ontology components generated are classes, attributes, relations, and instances, all expressed in OWL Full, CycL, and WSML.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2.3">Comparison of the methods</head><p>Tables 2.1, 2.2, 2.3 and 2.4 summarize the methods presented according to the features related to the non-ontological resource, the reuse process, the transformation process, and the resultant ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.3">Tools for Re-engineering Non-ontological Resources</head><p>In this section, we describe the most significant non-ontological resource re-engineering tools according to the features identified in section 2.1.1. This section is organized into tools centred on the non-ontological resource type (section 2.1.3.1) and tools centred on the non-ontological resource implementation (section 2.1.3.2). Some of the tools give support to the methods presented in section 2.1.2. Also, it is worth mentioning that the tools provide (1) neither support for selecting the non-ontological resources for their subsequent transformation, (2) nor provenance information support.   In this section we present some of the tools we found in the literature related to the re-engineering of non-ontological resources and centred on their implementation. We first introduce some research works to transform databases, XML files, spreadsheet files and flat files into ontologies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 2. STATE OF THE ART</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>Tools for transforming databases into ontologies The four main tools for transforming databases are KAON-REVERSE, ODEMapster, D2R Server and Top-Braid Composer. Next we describe each one of them.</p><p>• KAON-REVERSE<ref type="foot" target="#foot_35">28</ref> is a tool that supports the reverse engineering method presented in <ref type="bibr" target="#b146">[SSV02]</ref> for transforming databases into ontologies. This tool performs an ABox transformation of the databases, generating ontologies in F-Logic and instances in RDF.</p><p>• ODEMapster<ref type="foot" target="#foot_36">29</ref> is the processor in charge of carrying out the exploitation of the mappings defined with R 2 <ref type="bibr">O [Bar07]</ref>. This tool is intended to create instances of an available ontology on demand or in a batch processing.</p><p>The ontologies have to be expressed in OWL or RDF(S), and the instances generated are expressed in RDF.</p><p>• D2R Server<ref type="foot" target="#foot_37">30</ref> is a tool for publishing the content of relational databases on the Semantic Web. This tool does not consider the data model of the resource stored in the database.</p><p>It is intended to create instances of an ontology on demand or in a batch processing, that is, to populate ontologies. D2R Server performs a semiautomatic conversion and does not consider the internal data model of the resource. Nor does it provide the resource provenance information, so the resultant ontology does not keep the reference to the database. D2R Server consists of: (1) a D2RQ mapping language, a declarative language for describing the relation between an ontology and a relational model; and (2) a D2RQ engine, that is, a plug-in for the Jena and Sesame Semantic Web toolkits. This engine uses the mappings to rewrite Jena and Sesame API calls into SQL queries against the database and passes query results up to the higher layers of the frameworks.</p><p>This tool populates a single ontology. The resultant ontology instances are expressed in RDF.</p><p>• TopBraid Composer<ref type="foot" target="#foot_38">31</ref> is an enterprise-class modelling environment for developing Semantic Web Ontologies. TopBraid Composer can convert databa-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>ses into ontologies, but does not consider the internal data model of the resource. This tool has a relational database importer, D2RQ<ref type="foot" target="#foot_39">32</ref> in its platform.</p><p>TopBraid performs an ABox transformation, though it does not provide the resource provenance information; therefore, the resultant ontology does not keep the reference to the database.</p><p>TopBraid Composer performs the following tasks for converting databases into ontologies: (1) static import of schema, where tables become classes, columns become properties and link tables become object properties; and</p><p>(2) dynamic import of actual data, where rows become instances on the fly, i.e., data can stay where it is.</p><p>The tool produces a single ontology whose components are classes, attributes, relations, and instances. The resultant ontology is expressed in RDF/OWL (Full, DL or Lite).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tools for transforming XML files into ontologies</head><p>The main tools are XSD2-OWL, XML2RDF, and TopBraid Composer.</p><p>• XSD2OWL and XML2RDF<ref type="foot" target="#foot_40">33</ref> are tools that support the method for transforming XML files into ontologies <ref type="bibr" target="#b85">[GC05]</ref>. The input files are (1) an XML schema definition (XSD) file, which describes the XML schema; and (2) an XML file, which contains the XML instances. This tool does not consider the data model of the resource stored in the XML.</p><p>It produces a single lightweight ontology whose components are classes, attributes, relations, and instances, all expressed in RDF/OWL Full.</p><p>• TopBraid Composer also can convert XML files into ontologies. This tool does not consider the data model of the resource stored in the XML.</p><p>It performs a semi-automatic ABox transformation and a Population, taking into consideration the syntactic level. Besides, it relies on mapping rules as a technique for performing the transformation.</p><p>The ontology components generated are classes, attributes, relations, and instances. The resultant ontology is expressed in RDF/OWL (Full, DL or Lite) and the tool generates a single lightweight ontology.</p><p>Tools for transforming flat files into ontologies The four main tools for transforming flat files are TopBraid Composer, ConvertToRdf, flat2rdf and Java BibTeX-To-RDF converter.</p><p>• TopBraid Composer can also convert flat files into ontologies. This tool performs a semi-automatic ABox transformation, taking into account the syntactic level.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 2. STATE OF THE ART</head><p>The ontology components generated are classes, attributes, relations, and instances. The resultant ontology is expressed in RDF/OWL (Full, DL or Lite), and the tool generates a single lightweight ontology.</p><p>• ConvertToRdf<ref type="foot" target="#foot_41">34</ref> is a tool for automatically converting delimited text data into RDF via a simple mapping mechanism. The input resources are delimited text files. This tool does not consider the data model of the resource stored in the XML.</p><p>It performs a semi-automatic population of an available ontology from the data stored in the flat file. And it produces a single lightweight ontology.</p><p>The resultant ontology instances are expressed in RDF.</p><p>• flat2rdf<ref type="foot" target="#foot_42">35</ref> is a simple Perl script that converts classic Unix text database files into RDF.</p><p>The input resources are classic Unix text files (e.g., /etc/passwd). This tool populates semi-automatically an available ontology.</p><p>The tool generates a single lightweight ontology. The resultant ontology instances are expressed in RDF.</p><p>• Java BibTeX-To-RDF Converter<ref type="foot" target="#foot_43">36</ref> allows converting BibTeX files into an RDF format according the SWRC ontology<ref type="foot" target="#foot_44">37</ref> .</p><p>The input resources are plain BiBTex files (i.e. text files). This tool populates automatically an ontology from the information stored in the BiBTex files</p><p>The resultant ontology instances are expressed in RDF.</p><p>Tools for transforming spreadsheet files into ontologies The four main tools for transforming spreadsheet files are TopBraid Composer, Excel2rdf, RDF123, and XLWrap.</p><p>• TopBraid Composer can also convert spreadsheets into ontologies. The tool receives Excel spreadsheets as input, but it does not consider the internal resource data model. Besides, it performs semi-automatically an ABox transformation.</p><p>The ontology components generated are classes, attributes, relations, and instances. The resultant ontology is expressed in RDF/OWL (Full, DL or Lite) and the tool deals with a single lightweight ontology.</p><p>• Excel2rdf<ref type="foot" target="#foot_45">38</ref> is a Microsoft Windows program that converts Excel files into valid RDF. It populates semi-automatically an ontology, but it does not consider the data model of the resource for the transformation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>The resultant ontology instances are expressed in RDF.</p><p>• RDF123 [HFP + 06] is a highly flexible open source tool for transforming semi-automatically spreadsheet data into RDF. It works on CSV files and also Google spreadsheets.</p><p>This tool populates semi-automatically an available ontology. Every row of a spreadsheet will generate a row graph, and the RDF graph produced for the whole spreadsheet is the merge of all row graphs, eliminating duplicated resources and triples.</p><p>RDF123 consists of the following two components: (1) an RDF123 application, that is, a component whose main purpose is to give users an interactive and easy-to-use graphical interface for creating the map graph and outputting the map graph in RDF syntax; and (2) a RDF123 Web Service, which aims to provide a public service that translates online spreadsheets into RDF.</p><p>This tool populates more than one ontology and the resultant ontology instances are expressed in RDF.</p><p>• XLWrap [LW09] is a spreadsheet-to-RDF wrapper that is capable of transforming spreadsheets into arbitrary RDF graphs based on a mapping specification. The tool supports Microsoft Excel and OpenDocument spreadsheets such as comma (and tab) separated value (CSV) files and it can load local files or download remote files via HTTP.</p><p>This tool populates semi-automatically ontologies. Every row of a spreadsheet will generate a row graph, and the RDF graph produced for the whole spreadsheet is the merge of all row graphs, eliminating duplicated resources and triples.</p><p>This tool populates more than one ontology; thus, the resultant ontology instances are expressed in RDF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.3.3">Comparison of the tools</head><p>Tables 2.5, 2.6 and 2.7 present the tools according to the features related to the non-ontological resource, the transformation process and the resultant ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.4">Results and Conclusions</head><p>After having analysed the state of the art of the methods and tools for re-engineering non-ontological resources, we present the results of applying the evaluation framework described in section 2.1.1. The results are provided according to the features of the groups identified, namely, non-ontological resource, reuse process, transformation process, and resultant ontology. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 2. STATE OF THE ART</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methods</head><p>• According to the type of non-ontological resource, we can state that most of the methods are focused on thesauri, classification schemes, lexicons and folksonomies, and then there is a small group which do not contemplate the type of resource. Only one method is focused on thesauri and classification schemes.</p><p>• In relation to the data model, we can observe the half of the methods does not contemplate the data model of the resource for the transformation, whereas the other half does.   • With regard to the implementation of the non-ontological resource, we can state that most of the methods are focused on databases, some on XML, and flat files, and some are independent of the resource implementation. In addition, one method is focused on resources implemented in Prolog, whereas another method includes resources implemented in proprietary format, relational database, and XML.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tools</head><p>• In relation to the type of non-ontological resource, we can observe that most of the tools do not consider the type of the resource, since they are focused on the resource implementation. In addition, one tool considers classification schemes and thesauri, whereas another considers folksonomies.</p><p>• As for the data model, most of the tools do not consider the data model for</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">A COMPARATIVE FRAMEWORK OF METHODS AND TOOLS FOR REUSING AND RE-ENGINEERING NORS INTO ONTOLOGIES</head><p>the transformation.</p><p>• With regard to the implementation, almost all the tools are focused on the resource implementation, many of them on databases, and some on spreadsheets, XML and flat files. Only one tool provides an integrated environment that considers resources implemented in databases, XML, flat files, and spreadsheets.</p><p>To sum up we can affirm that most of the methods and tools presented are based on ad-hoc transformations for the resource type and the resource implementation. Only a few take advantage of the resource data model, an important artefact in the re-engineering process <ref type="bibr" target="#b89">[GGPSFVT08]</ref>. There is not integrated framework, method or corresponding tool that considers the resource types, data models and implementations identified in a unified way. Thus, we can conclude that there is a clear need for some sort of re-engineering methods and tools that simultaneously</p><p>• Cope with the overall set of non-ontological resources, i.e., classification schemes, thesauri, and lexica.</p><p>• Consider the internal data model of the resource.</p><p>• Deal with non-ontological resources implemented in databases, XML files, flat files, or spreadsheets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.4.2">Results according to the reuse process</head><p>Table <ref type="table" target="#tab_4">2</ref>.2 summarizes the methods described above regarding the features of the reuse process: methodological guidelines for the selection of the resource, tool support and provenance information. We can conclude that the whole set of methods assumes that the non-ontological resources are already selected for their transformation; therefore, they do not provide methodological guidelines for the selection of the resource. Consequently, there is not tool support for this process. It should be noted that only one method keeps the reference to the non-ontological resource.</p><p>In conclusion, we can say that there is a clear need for some sort of methods and tools that • Provide guidelines for the selection of the most appropriate resources for building an ontology.</p><p>• Consider the provenance information of the resource.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.4.3">Results according to transformation process</head><p>Table <ref type="table" target="#tab_4">2</ref>.3 and table 2.6 summarize the methods and tools presented above regarding the features of the transformation process, namely, the transformation approach; the transformation performed on the syntactic and semantic level; the explicitation of the hidden semantics in the relations of the resource terms; the use of additional CHAPTER 2. STATE OF THE ART resources or a domain expert for making explicit the hidden semantics of the relations; the degree of automation; the provision of methodological guidelines; and the list of the techniques employed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methods</head><p>• With regard to the transformation approach, the majority of the methods perform a TBox transformation, many others perform an ABox transformation and some perform a population. However, no method includes the possibility to perform the three transformation approaches.</p><p>• Regarding the transformation at the syntactic and semantic levels, we can observe that this feature is closely related to the transformation approach performed by the methods. As mentioned in section 2.1.1.3, the ABox transformation disregards the informal semantics of the transformed resources, so the transformation is performed only at the syntactic level; and this also happens to the Population. On the contrary, the TBox transformation tries to enforce a formal semantics on the resources, so the transformation is performed at the syntactic and semantic levels.</p><p>• As for the explicitation of the hidden semantics of the relations of the resource components, we can state that the methods performing a TBox transformation make explicit the semantics in the relations of the resource components. Most of those methods identify subClassOf relations, others identify ad-hoc relations, and some identify partOf relations. However, only a few methods make explicit the three types of relations.</p><p>• With respect to how the methods make explicit the hidden semantics in the relations of the resource components, we can say that three methods rely on the domain expert for making explicit the semantics, and two rely on an external resource, e.g., DOLCE ontology. Moreover, there are two methods that rely on external resources though not for making explicit the hidden semantics, but for finding out a proper ontology and populating it.</p><p>• Regarding the degree of automation, almost all the methods perform a semiautomatic transformation of the resource, three are performed automatically, and one is done manually.</p><p>• As for the provision of the methodological guidelines, almost all the methods provide methodological guidelines for the transformation. However, these guidelines are not finely detailed; for instance, they do not provide information about who is in charge of performing a particular task/activity, nor when that task/activity has to be carried out.</p><p>• With regard to the techniques employed, most of the methods do not mention them at all. Only a few methods establish techniques as transformation rules, lexico-syntactic patterns, mapping rules and natural language techniques.</p><p>• As for the tool support, most of the methods rely on ad-hoc tools for the transformation, but only a few integrate a public available tool, such as, KAON-REVERSE, ODEMapster, XSD2OWL, or XML2RDF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tools</head><p>• Regarding the transformation approach, most of the tools perform a population, some perform an ABox transformation, and one performs a TBox transformation. However, no tool includes the possibility to perform the three transformation approaches.</p><p>• With respect to the transformation at the syntactic and semantic levels, as we observed, before this feature is closely related to the transformation approach performed by the tools. The ABox transformation is performed only at the syntactic level, and this also happens to the Population. On the contrary, the TBox transformation is performed at the syntactic and semantic level. However, almost of all the tools perform a population, three perform an ABox and a TBox transformation.</p><p>• With regard to the explicitation of the hidden semantics in the relations of the resource terms, we can state that the tool performing the TBox transformation is the only one that makes explicit the semantics hidden in the relations of the NOR terms.</p><p>• As for how the tools make explicit the hidden semantics in the relations of the resource terms, the only tool that makes this explicitation it does it by setting both ad-hoc and taxonomic relations among the NOR terms, though it does not state which relation is the correct. Moreover, there is one tool that relies on an external resource, though it does not do it for expliciting the hidden semantics, but for finding out a proper ontology for populating it.</p><p>• With respect to the degree of automation, almost all the tools perform a semiautomatic transformation of the resource, and only two tools perform an automatic transformation.</p><p>• Regarding the techniques employed, the majority of the tools do not mention them at all. Only a few methods specify techniques as mapping rules and lexico syntactic patterns.</p><p>In summary, after having analysed the features related to the transformation process, we can conclude that (1) methods are mostly focused on the TBox transformation approach, whereas tools are focused on the population; (2) only a few methods and tools make explicit the hidden semantics in the relations of the NOR components, and most of them rely on the domain expert for doing it; (3) almost all the methods provide a methodological guidelines for the transformation, but they are not finely detailed; (4) only a few methods and tools specify the techniques CHAPTER 2. STATE OF THE ART employed for the transformation, and (5) there is not any integrated framework, method or corresponding tool that considers the possibility to perform the three transformation approaches. In a nutshell, we can state that there is a clear need for some sort of re-engineering methods and tools that • Include the three transformation approaches (TBox, ABox and Population).</p><p>• Make explicit the hidden semantics in the relations of the NOR terms, by means of external resources in an semi-automatic way, for saving the transformation time,</p><p>• Provide fully detailed guidelines for the transformation, including information on who is in charge of performing a particular task/activity and when this task/activity has to be carried out.</p><p>• Integrate in a single framework the method and its corresponding tool supporting for the transformation.</p><p>• Employ techniques that improve the efficiency of the re-engineering process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.4.4">Results according to the ontology</head><p>Tables 2.4 and 2.7 summarize the methods and tools presented regarding the features of the resultant ontology, namely, whether the ontology is lightweight or heavyweight; the ontology components; the ontology implementation language; and whether one or more ontologies are generated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methods</head><p>• With respect to whether the ontology is lightweight or heavyweight, most of the methods generate lightweight ontologies; only three rely on domain experts to generate heavyweight ontologies.</p><p>• Regarding the ontology components, we can observe that this feature is closely related to the transformation approach performed by the methods. Methods that perform TBox transformation, generate classes, relations, and optionally attributes. Methods that perform ABox transformation, generate classes, attributes, relations and instances. Methods that perform population, generate instances.</p><p>• With regard to the ontology implementation language, even though there is a large variety of languages, the ontology languages mostly used are OWL for the ontology and RDF for the instances.</p><p>• As for whether the methods generate one or several ontologies, almost all the methods generate a single ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">PATTERNS FOR RE-ENGINEERING</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tools</head><p>• Regarding whether the ontology generated is lightweight or heavyweight, we can state that almost all generate lightweight ontologies.</p><p>• Concerning the ontology components, we can observe that this feature is closely related to the transformation approach performed by the tools, just like in the case of the methods.</p><p>• With respect to the ontology implementation language, and taking into account that almost all the tools generate ontology instances, the language most used is RDF.</p><p>• As for whether the tools generate one or several ontologies, we can state that almost all the tools generate a single ontology.</p><p>After having analysed the features related to the resultant ontology, we can confirm the lack both of re-engineering methods and tools supporting several ontologies, and of the generation of ontologies with classes, attributes, relations and instances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Patterns for Re-engineering</head><p>In this section we analyse the role patterns play in software and ontology engineering, emphasizing specifically the re-engineering patterns.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Software Re-engineering</head><p>This section is based on the landmark work of Byrne <ref type="bibr" target="#b69">[Byr92]</ref>, one of the most prominent specialists on software re-engineering. In a nutshell, software re-engineering takes a legacy software that is expensive to maintain or whose system architecture or implementation is obsolete and remakes it with current software and/or hardware technology. The difficulty of this process lies in understanding the existing system. Very often requirements, design and code documentation are no longer available, or are very out of date, so it is unclear what functions have to be moved.</p><p>Several definitions have been given for software re-engineering, but the one most widely accepted comes from Chikofsky <ref type="bibr" target="#b72">[CCI90]</ref>. He defines software reengineering as the examination and alteration of a software system to reconstitute it in a new form and the subsequent implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1.1">Levels of abstraction</head><p>Understanding how software is developed is useful for understanding how software can be re-engineered. The concept of levels of abstraction that underlies the development process also underlies the re-engineering process. This concept is Next, we describe briefly the software levels of abstraction proposed by <ref type="bibr" target="#b69">[Byr92]</ref>.</p><p>• The conceptual level describes, in general terms, the functional characteristics of a system, i.e., the concept of the system (its reason for existence).</p><p>• The requirements level depicts in detail the functional characteristics of a system, though it does not provide details of the internal system.</p><p>• The design level describes the system characteristics, such as architectural structure, system components, interfaces between components, algorithmic procedures, and data structures. Here, we face two degrees of abstraction levels: (1) the high-level design, which expresses the architectural structure of a system, and (2) the detailed-design, which expresses the internal structure of system components.</p><p>• The implementation level focuses on the description of the implementation characteristics, and is represented in a language understood by the computer.</p><p>Byrne <ref type="bibr" target="#b69">[Byr92]</ref> also has made a set of assumptions for software re-engineering based on the software levels of abstraction. Next, we describe briefly each of them.</p><p>Assumption 1. The re-engineering of a software system produces a new form of the system that is better, in some way, than the original form. This assumption answers the question of why software is re-engineered. There are many different reasons for software re-engineering, and most of them assume that the available software needs to be improved.</p><p>Assumption 2. Software re-engineering begins with an existing system representation expressed at some level of abstraction. The concept of levels of abstraction contributes to the understanding of software re-engineering. Thus,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">PATTERNS FOR RE-ENGINEERING</head><p>we can say that,on the one hand, software development starts with an idea for a system and creates a system representation for each abstraction level.</p><p>On the other hand, software re-engineering starts with an existing system representation.</p><p>Assumption 3. To alter a system characteristic, we have to work at the level of abstraction at which information about that characteristic is explicitly expressed. This is related to the issue of how to identify the abstraction level at which the re-engineering work should be carried out. Re-engineering changes the characteristics of a software system. To alter information about a system characteristic we have to work at either abstraction level where the characteristic is introduced, or at any level below that.</p><p>Assumption 4. A system characteristic can be altered by working within a level of abstraction below the level at which information about the characteristic is explicitly expressed. However, the best re-engineering result might not be achieved. "Best possible result" means that the target system has the desired system characteristics and properties.</p><p>Assumption 5. A system characteristic cannot be altered by working at a level of abstraction above the level where information on the characteristic is introduced. A characteristic cannot be altered, in the sense of manipulating information about that characteristic, by working at a higher abstraction level containing no information on that characteristic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1.2">Software re-engineering principles</head><p>According to <ref type="bibr" target="#b69">[Byr92]</ref> there are three principles underlying a re-engineering method, which are Refinement, Abstraction and Alteration.</p><p>Refinement. This principle states that the gradual decrease in the abstraction level of a system representation is caused by successively replacing available system information with more detailed information.</p><p>Abstraction. This principle establishes that if a system representation at a particular abstraction level is missing or not up-to-date, then it is possible to reconstruct that representation.</p><p>Alteration. Alteration is the making of one or more changes to a system representation without changing the degree of abstraction. Alteration includes the addition, deletion, and modification of information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 2. STATE OF THE ART</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1.3">General model for software re-engineering</head><p>Here we present the general software re-engineering model proposed by Byrne <ref type="bibr" target="#b69">[Byr92]</ref>. Assumption 3 and the Principle of Alteration both show the level of abstraction at which certain types of change can be made. The Principle of Refinement is the basis for forward engineering, which creates a target system implementation. This model suggests that re-engineering begins with the available system implementation and produces a target system implementation. The sequence of reverse engineering, re-designing (or re-coding, re-specifying, re-thinking) and forward re-engineering rests on the three re-engineering principles of Abstraction, Alteration, and Refinement.</p><p>Reverse Engineering. Reverse Engineering is the process of analysing a subject system to identify the system's components and their relationships and to create representations of the system in another form or at a higher level of abstraction. In reverse engineering, the requirements and essential design, structure and content of the legacy system must be recaptured. Reverse engineering does not involve changes in the system or creating a new system; it is the process of examining the system without changing its overall functionality.</p><p>Alteration or Transformation. To alter a system characteristic, the work is done at the level of abstraction at which information on that characteristic is explicitly expressed. To translate the existing code to a target language no reverse engineering is needed because the alteration (re-coding) is done at the implementation level. As the level of abstraction increases, the alteration tasks change and the amount and tasks of reverse engineering also change. As for re-design changes, they might include restructuring a design architecture, altering a system's data model or a database, etc. To re-specify requirements, reverse engineering techniques must be applied to the implementation and design in order to obtain the functional characteristics. Regarding the re-thinking changes, they can result in drastic changes to a</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">PATTERNS FOR RE-ENGINEERING</head><p>system, i.e., manipulating the concepts embodied in an existing system to create a new system that operates in a different problem domain.</p><p>Forward Engineering. The new target system is created by moving downward through the levels of abstraction, that is, a gradual decrease in the abstraction level of the system representation, by successively replacing system information with more detailed information. This downward movement is actually a forward movement through the standard software development, i.e., forward engineering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Software Patterns</head><p>In this section we introduce briefly the role that patterns play in software and ontology engineering, focusing specially on software re-engineering patterns.</p><p>Patterns were introduced by Christopher Alexander <ref type="bibr" target="#b54">[Ale79]</ref> to encode knowledge and experience when designing buildings. He defines a pattern as the core of a solution to a problem in context. The solution can be applied in different situations and has to be adapted to fit the needs of the specific situation <ref type="bibr" target="#b54">[Ale79]</ref>. In the (Object-Oriented) software community, patterns are used to describe software design structures that can be used over and over again in different systems. Patterns provide a general solution that has to be applied in a particular context, where the design considerations are used to decide whether the pattern is useful and how it could be best implemented <ref type="bibr" target="#b80">[EPJ06]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2.1">Software design patterns</head><p>Software design patterns <ref type="bibr" target="#b147">[Tic97]</ref> describe proven solutions to recurring software design problems. A software design pattern consists of one or several software design elements (such as interfaces, classes, objects, methods, functions, processes, threads), relationships among the elements (for example, association, inheritance, delegation, invocation, and creation), and a behavioural description. Examples of design patterns are the Layered System and the Model-View-Controller.</p><p>The purpose of design patterns is to capture "design know-how" and to make it reusable. Design patterns can improve the structure of software, speed up implementation, simplify maintenance, and help to avoid architectural drift. Design patterns also improve communication among software developers and can empower less experienced developers to produce high-quality designs <ref type="bibr" target="#b147">[Tic97]</ref>.</p><p>There are several classifications of software design patterns. The classification proposed by Gamma et al. <ref type="bibr" target="#b90">[GHJV95]</ref> uses two orthogonal dimensions: (1) purpose, in which they define three categories, namely, creational, structural and behavioural patterns, and (2) scope, in which they distinguish whether a pattern applies primarily to classes or to objects. Buschmann et al. [BMR + 96] propose three categories, namely, architectural patterns, design patterns, and idioms. In addition to these, there are several online catalogues of software design patterns, such as the </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2.2">Software re-engineering patterns</head><p>A kind of software patterns are the re-engineering software patterns <ref type="bibr" target="#b134">[PS98,</ref><ref type="bibr" target="#b123">LDP]</ref>. They describe how to change a legacy system into a new, refactored system that fits current conditions and requirements. Their main goal is to offer a solution for reengineering problems. They are also on a specific level of abstraction and describe a process of re-engineering without proposing a complete methodology; they can sometimes suggest which type of tool to use <ref type="bibr">[LDP]</ref>.</p><p>The structure of a re-engineering pattern consists of some essential elements, which are described next.</p><p>• Pattern name. The name should be short, clear, and descriptive.</p><p>• Intent. It includes the description of the re-engineering process, the results and why it is desirable.</p><p>• Applicability. It describes when a particular pattern is applicable and when it is not. It also comprises symptoms, reengineering goals and related patterns.</p><p>• Motivation. It includes the descriptions of the legacy system and its structure as well as the refactored system and the relation between them. This is done through the use of a concrete example.</p><p>• Structure. It describes the structure before and after re-engineering.</p><p>• Process. It includes the description of how to perform the re-engineering and possible variants.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.3">Ontology Patterns</head><p>The idea of applying patterns to modelling ontologies was proposed by Clark et al. <ref type="bibr" target="#b77">[CTP00]</ref>. They introduce "knowledge patterns" as a technique for helping construct axiom-rich, formal ontologies, based first on identifying and explicitly representing recurring patterns of knowledge in the ontology, and then on mapping those patterns onto domain-specific concepts in the ontology. Since then, the ontology community has adopted the pattern idea. Relevant works on patterns are </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">PATTERNS FOR RE-ENGINEERING</head><p>• The Ontology Design Patterns Public Catalog<ref type="foot" target="#foot_46">44</ref> , which focuses on the biological knowledge domain.</p><p>• The Ontology Design Patterns (ODP) Portal<ref type="foot" target="#foot_47">45</ref> , a Semantic Web portal dedicated to ontology design patterns.</p><p>• Linked Data Patterns<ref type="foot" target="#foot_48">46</ref> , a catalogue of Linked Data <ref type="bibr" target="#b64">[Biz09]</ref> patterns.</p><p>According to <ref type="bibr" target="#b92">[GP08]</ref> Ontology Design Patterns are modelling solutions to solve a recurrent ontology design problem. <ref type="bibr">Gangemi</ref>   • Content ODPs propose, on the one hand, patterns for solving design problems for the domain classes and, on the other hand, properties that populate an ontology, thus addressing content problems.</p><p>• Structural OPs include Logical OPs and Architectural OPs. Logical OPs are compositions of logical constructs that solve the problem of expressivity, while Architectural OPs are defined in terms of composition of Logical OPs used to affect the overall shape of the ontology.</p><p>• Lexico-Syntactic ODPs can be defined as linguistic structures or schemas that consist of certain types of words following a specific order, and that permit generalizing and extracting some conclusions about the meaning they express.</p><p>• Reasoning ODPs are applications of Logical OPs oriented to obtain certain reasoning results and based on the behaviour implemented in a reasoning engine.</p><p>• Presentation ODPs deal with the usability and readability of ontologies from a user perspective. They are meant to be used as good practices that support the reuse of patterns by facilitating their evaluation and selection.</p><p>• </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Summary and Discussion</head><p>This chapter has presented an exhaustive analysis of the state of the art of the various topics dealt within this thesis, and discussed their limitations.</p><p>In this section we provide an overall summary of the open research problems identified and we have focused on such problems to provide methods and tools for reusing and re-engineering non-ontological resources with the aim of speeding up the ontology development.</p><p>The first step is to identify the resources that the methods and tools proposed are going to deal with. For this purpose we introduce the notions of non-ontological resources and ontology (see sections 1.1 and 1.1.2). Then, we put forward our categorization of non-ontological resources according to the three different features presented in Figure <ref type="figure" target="#fig_21">5</ref>.1: (1) the type of non-ontological resource, which refers to the type of inner organization of the information; (2) the data model, that is, the design data model used to represent the knowledge encoded by the resource; and</p><p>(3) the resource implementation.</p><p>The second step is the selection of the most appropriate non-ontological resources for ontology development. The analysis of the State of the Art reveals that there are not detailed guidelines on how to find the most suitable non-ontological resources for the development of ontologies. Most of the research studies assume that there are already suitable resources to use in the conversion. In conclusion, we can state that there is a clear need for some sort of methods, techniques and tools that help in the selection of the resources and that keep the provenance information of these resources.</p><p>The third step is the transformation of the resources selected into ontologies. In this step we can state that there is a clear need for some sort of re-engineering methods that (1) cope with the overall set of NORs (i.e., classification schemes, thesauri, and lexica) in an uniform way, independently of how it has been implemented; (2) include the three transformation approches (TBox, ABox and Population); (3) make explicit the hidden semantics in the relations of the NOR terms, by means of external resources in an semi-automatic way; and (4) provide finely detailed guidelines for the transformation, including information on who is in charge</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">SUMMARY AND DISCUSSION</head><p>of performing a particular task/activity and when such a task/activity has to be carried out.</p><p>Additionally, we have reviewed the state of the art on software re-engineering, software re-engineering patterns, and ontology patterns. All along this thesis we intend to demonstrate that the application of re-engineering patterns for transforming non-ontological resources into ontologies has several advantages. The most representative are</p><p>• Improvement of the efficiency of the re-engineering process.</p><p>• Ease of the transformation process for both ontology engineers and domain experts.</p><p>• Improvement of the reusability of non-ontological resources.</p><p>Finally, a very important matter that we would like to emphasize is the lack of an integrated method (and technological support) that addresses all the previous issues.</p><p>Chapter 3</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>OBJECTIVES AND CONTRIBUTIONS</head><p>The goal of this thesis is to investigate methods and tools for reusing and reengineering non-ontological resources when building ontologies, as opposed to custom-building new ontologies from scratch. With the thesis we have contributed to the NeOn Methodology Framework since it lies on this new paradigm. It presents a re-engineering model as well as a method and a technology for reusing and reengineering non-ontological resources when building ontologies by means of reengineering patterns. Figure <ref type="figure" target="#fig_15">3</ref>.1 depicts a general overview of our contributions and the relationships between them. Next, we present the main contributions.</p><p>i) The definition of methodological guidelines for reusing non-ontological resources when building ontologies. These methodological guidelines provide support (1) for selecting the most appropriate non-ontological resources for ontology development; and (2) for describing and providing the provenance information of the ontology generated.</p><p>ii) The definition of methodological guidelines for re-engineering non-ontological resources into ontologies. The methodological guidelines (1) cope with the classification schemes, thesauri, and lexica, in an uniform way, independently of how those resources have been implemented; (2) are based on re-engineering patterns;</p><p>(3) include the three transformation approches (TBox, ABox and Population); (4) make explicit the hidden semantics in the relations of the NOR terms by means of external resources in a semi-automatic way; and (5) provide support for the transformation, including information about who is in charge of performing a particular activity and when such an activity has to be carried out.</p><p>iii) The development of a library of patterns for re-engineering non-ontological resources into ontologies. These patterns cover classification schemes, thesauri, and lexica. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Objectives</head><p>The general objective of the thesis is to provide domain independent, and resource independent methods and tools for speeding up the ontology development process and is achieved by reusing and re-engineering as much as possible available nonontological resources. To fulfil this overall goal, we have decomposed it into the following methodological and technological objectives:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methodological Objectives</head><p>O1. The definition of methodological aspects related to the reuse of non-ontological resources for building ontologies. We propose a method that describes a set of activities and serves as a guide for selecting the most suitable nonontological resources to develop ontologies.</p><p>O2. The definition of methodological aspects related to the re-engineering of non-ontological resources for building ontologies. We propose a method that guides users through the transformation of a non-ontological resource into an ontology. O4. The development of a software library, NOR 2 O, that implements the suggestions given by the re-engineering patterns. The patterns have an associated software library, that performs the suggested transformations automatically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">CONTRIBUTIONS TO THE STATE OF THE ART</head><note type="other">Technological</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Contributions to the State of the Art</head><p>We have tried to provide solutions to some of the open research and technological problems (see Chapter 2) identified in the scope of this thesis.</p><p>I. Regarding the methodological guidelines for carrying out the non-ontological resource reuse process, this thesis presents new advances in the state of the art in the following aspects:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C1. A definition of non-ontological resources.</head><p>There is a wealth of nonontological resources that embodies knowledge about some particular domains and that represents some degree of consensus for a user community. These resources present the form of free texts, textual corpora, web pages, standards, catalogues, web directories, classification schemes, thesauri, lexica and folksonomies, among others. The definition of non-ontological resource is provided in section 5.1.</p><p>C2. A categorization of non-ontological resources according to three different features: type of non-ontological resource, data model and implementation. The categorization is described in section 5.1. It should be noted that an accepted and agreed upon typology of non-ontological resources does not exist yet. This contribution is the result of the thorough analysis of the structures that NORs usually have.</p><p>C3. A metadata vocabulary for non-ontological resources, NoRMV. This vocabulary allows (1) describing the available non-ontological resources, and (2) including the provenance information in the ontology generated.</p><p>The vocabulary is described in Section 5.2.</p><p>C4. A method for reusing non-ontological resources when building ontologies. The description of the method is included in Section 5.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II.</head><p>Regarding the methodological guidelines for carrying out the non-ontological resource re-engineering process, the new advances in the state of the art are C5. A re-engineering model for non-ontological resources. This model is based on the software re-engineering model presented in <ref type="bibr" target="#b69">[Byr92]</ref> and depicted in Chapter 6.</p><p>C6. A method for re-engineering non-ontological resources when building ontologies with re-engineering patterns. This method is described in Chapter 6.</p><p>III. Problems in ontology engineering can be solved by applying common solutions (as experienced in software engineering); on the other hand, Ontology Design Patterns (ODPs) can support reusability on the design side. Our third objective belongs to the Ontology Design Patterns field. We propose a library of re-engineering patterns (PR-NOR), which is included in the ontologydesignpatterns.org portal<ref type="foot" target="#foot_49">1</ref> . In this thesis we provide C7. A set of patterns for re-engineering classification schemes into ontologies. These patterns take advantage of the classification scheme underlying data models. The data models identified for classification schemes are described in Chapter 7.</p><p>C8. A set of patterns for re-engineering thesauri into ontologies. These patterns take advantage of the thesaurus underlying data models. The data models identified for thesauri are described in Chapter 8.</p><p>C9. A set of patterns for re-engineering lexica into ontologies. These patterns take advantage of the lexicon underlying data model. The data models identified for lexica are described in Chapter 9.</p><p>IV. Finally, our fourth objective is to provide technological support to the patterns for re-engineering non-ontological resources. We present the following advance in the state of the art:</p><p>C10. A software library, NOR 2 O, that implements the transformation suggested by the patterns. In this way, the software library covers the transformations of classification schemes, thesauri and lexica. These resources can be implemented in databases, XML files, flat files or spreadsheets. The description of this software library is included in Section 10.1.</p><p>The contributions are presented in the document as follows: first, Chapter 5 presents the contributions: (C1) a definition of non-ontological resource; (C2) a categorization of non-ontological resources; (C3) a metadata vocabulary for describing non-ontological resources; and (C4) a method for reusing non-ontological 3.3. ASSUMPTIONS resources for building ontologies. Then, Chapter 6 presents (C5) our model for reengineering non-ontological resources and (C6) a method for re-engineering nonontological resources when building ontologies. Then, Chapters 7, 8, and 9 present the patterns for re-engineering classification schemes, thesauri, and lexica respectively (C7, C8, and C9). These contributions are the result of establishing which semantic additions (enrichments) have to be made after an initial transformation. Finally, Chapter 10 describes the technological support we provide for the model and method proposed, including the implementation of a software library, NOR 2 O, that carries out the transformation process suggested by the patterns (C10).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Assumptions</head><p>The work described in this thesis is based on a set of assumptions described next.</p><p>A1. Some claims valid in software engineering and software re-engineering are also valid in ontology engineering.</p><p>A2. The Ontology Specification Activity was carried out previously, i.e. we started from a correctly created Ontology Requirements Specification Document (OR-SD).</p><p>A3. The non-ontological resources to be reused and transformed are freely available and with no restriction of use.</p><p>A4. The non-ontological resources to be transformed are well designed and implemented.</p><p>A5. The quality of the ontologies generated can be measured as the similarity value of the ontologies generated against a gold standard ontology. This gold standard is created by human domain experts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Hypotheses</head><p>Once the assumptions have been identified, the hypotheses of our work are described. These hypotheses cover the main features of the solutions proposed.</p><p>H1. The reuse and re-engineering of non-ontological resources, which have reached some degree of consensus in the community, will allow the development of ontologies in an easier and faster way.</p><p>H2. It is possible to define a unified method for transforming non-ontological resources into ontologies independently (1) of the type, data model or implementation of the resource, and (2) of the target ontology to be generated, i.e., ontology schema (TBox), ontology (TBox+ABox), or ontology instances (ABox).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 3. OBJECTIVES AND CONTRIBUTIONS</head><p>H3. The method for re-engineering non-ontological resources is extensible and adaptable to other types of resources. It can be applied to any kind of nonontological resource independently of its type, data model or implementation.</p><p>H4. It is possible to create re-engineering patterns that allow generating ontologies from available non-ontological resources, namely, classification schemes, thesauri, and lexica, in an uniform way, independently (1) of how they have been implemented; (2) of the target ontology to be generated, i.e., ontology schema (TBox), ontology (TBox+ABox), or ontology instances (ABox); (3) of the domain of the resources, that is, the patterns can be used to build ontologies in different domains.</p><p>H5. The re-engineering patterns proposed can be implemented in a software library that facilitates the work of ontology engineers when developing ontologies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Restrictions</head><p>Finally, there is a set of restrictions that defines the limits of our contribution and establishes future research objectives. These restrictions are the following:</p><p>R1. The categorization of non-ontological resources covers semi-structured resources, but it does not cover unstructured resources, e.g., free text.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>R2.</head><p>NoRMV covers the description of the non-ontological resources according to the proposed categorization, but this thesis only includes the identified types, data models and implementations.</p><p>R3. The method for reusing non-ontological resources considers only semi-structured resources, but does not cover unstructured resources, e.g., free text.</p><p>R4. The method for re-engineering non-ontological resources covers the transformation of the whole resource, but does not cover the transformation of excerpts of the resource.</p><p>R5. The method for re-engineering non-ontological resources covers the transformation of one resource per time, but does not consider the integration of several resources simultaneously or one after the other.</p><p>R6. The patterns for re-engineering non-ontological resources do not generate ontologies with disjoint knowledge.</p><p>R7. The software library supports the following non-ontological resource implementations: database, XML, spreadsheets and flat files.</p><p>R8. The software library generates ontologies implemented in OWL Lite, and ontology instances in RDF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.">RESTRICTIONS</head><p>R9. The discovery of the semantics of relations among the non-ontological resource terms occurs only in the English language.</p><p>R10. The whole set of techniques, with the exception of the discovery of relations, is independent of the language.</p><p>R11. The evaluation of our work is restricted to the use of the results in real cases providing specific feedback.</p><p>Table <ref type="table">3</ref>.1 summarizes the mapping between the objectives identified in Section 3.1 and the specific contributions. The table also summarizes for each contribution, the associated assumptions (c.f. Section 3.3), hypotheses (c.f. Section 3.4) and restrictions (c.f. Section 3.5) of the thesis. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RESEARCH METHODOLOGY</head><p>This chapter presents the research methodology we have used when designing the method for reusing and re-engineering non-ontological resources into ontologies, as well as the main requirements that guide its development.</p><p>Since the work presented in this thesis is a subset of the NeOn Methodology [SF10], we follow the same research methodology (see Chapter 4 <ref type="bibr" target="#b138">[SF10]</ref>) used for the creation of such methodology, which we have tried to specialize in our method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">General Framework for Describing the Method</head><p>For designing the method we have followed the "divide and conquer" strategy, that is, the general problem to be solved is decomposed into different subproblems. Then to solve each subproblem different strategies and alternatives are provided. Finally, to obtain the solution to the general problem, i.e., speeding up the ontology development process by reusing and re-engineering as much as possible available non-ontological resources, the solutions to the different subproblems are combined.</p><p>The subproblems identified are (1) the selection of the most appropriate nonontological resources for building ontologies; (2) the transformation of the nonontological resources selected into ontologies; (3) the techniques used for such transformation; and (4) the technological support for the method.</p><p>We introduce prescriptive methodological guidelines for reusing non-ontological resources when building ontologies, as described in Chapter 5, as a solution to subproblem (1). We provide methodological guidelines for re-engineering nonontological resources into ontologies, as described in Chapter 6, as a solution to subproblem <ref type="bibr">(2)</ref>. We present a set of Patterns for Re-engineering Non-Ontological Resources in Chapters 7, 8, and 9, as solution to subproblem (3). We also present a software library that implements the transformation process suggested by the patterns, and a pattern library as solution to subproblem (4). The pattern library is available at the ODP portal<ref type="foot" target="#foot_51">1</ref> ,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 4. RESEARCH METHODOLOGY</head><p>In order to obtain the methodological guidelines for reusing non-ontological resources, we were grounded in the following approaches, as presented graphically in Figure <ref type="figure">4</ref>.1.</p><p>• Existing categorization of resources. In this case, we analysed from [MS01, SAd + 07, GPS98, Hod00] different ad-hoc categorization of resources.</p><p>• Previous practices and experiences. Here, we used our previous experiences in the development of ontologies within several European and National funded projects, such as the REIMDOC Project<ref type="foot" target="#foot_52">2</ref> (FIT340100-2004-022), and the Knowledge Web Project<ref type="foot" target="#foot_53">3</ref> (FP6-507482). We made a retrospective analysis of the processes and activities performed within these projects to get a preliminary set of informal steps, which were refined, improved and completed to provide full methodological guidelines for each process, activity, and task.</p><p>• Available ad-hoc methods. In this case, we used the ad-hoc methods [MPBS06, BA05, BHM + 05] that provide guidelines for reusing existing resources when building ontologies. To obtain the methodological guidelines for re-engineering non-ontological resources, we were grounded in the following approaches, as presented graphically in Figure <ref type="figure">4</ref>.2.</p><p>• Available ad-hoc methods. In this case, we used the ad-hoc methods, described in Section 2.1, that provide guidelines for re-engineering resources. We performed an analysis of the guidelines they propose to extract and improve a preliminary set of guidelines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">GENERAL FRAMEWORK FOR DESCRIBING THE METHOD</head><p>• Previous practices and experiences. Here, we used our previous experiences in the development of ontologies within several European and National funded projects, such as, the REIMDOC Project<ref type="foot" target="#foot_54">4</ref> (FIT340100-2004-022), the Knowledge Web Project<ref type="foot" target="#foot_55">5</ref> (FP6-507482), and the NeOn Project<ref type="foot" target="#foot_56">6</ref> (FP6-027595). We made a retrospective analysis of the processes or activities performed within such projects to get a preliminary set of informal steps, which were refined, improved and completed to provide full methodological guidelines for each process, activity, and task.</p><p>• Available Software Re-engineering practices. In this case, we based our work on the re-engineering model proposed by Byrne <ref type="bibr" target="#b69">[Byr92]</ref>. To obtain the set of patterns required for re-engineering non-ontological resources, we were grounded in the following best practices and patterns, as presented graphically in Figure <ref type="figure">4</ref>.3.</p><p>• Previous practices and experiences. Here we used the practices we describe in Section 2.1. Additionally, within the SEEMP project<ref type="foot" target="#foot_57">7</ref> (FP6-027347) we built some ad-hoc wrappers for transforming existing non-ontological resources into ontologies. Then, we transformed ten non-ontological resources and identified some common data structures for storing and organizing the resources. These common data structures, also known as data models <ref type="bibr" target="#b71">[Car02]</ref>, are abstract models that describe how data is represented and accessed. For every data model we can define a process with a well-defined sequence of activities to extract the NORs terms and then map them to the conceptual model of an ontology. Each process can be expressed as a pattern for reengineering NORs.</p><p>• Previous practices in the Ontology Engineering community. As we mentioned in Section 2.2.3, the ontology community is adopting the use of design patterns for modelling ontologies. We extend the current patterns in the Ontology Engineering field with patterns for re-engineering non-ontological resources into ontologies. These re-engineering patterns make use of the logical and content patterns, from the ODP portal, for generating the ontologies; therefore, the re-engineering patterns follow the best practices of the community.</p><p>• Available Software Re-engineering patterns. In the software engineering community, it is well known that the reuse of resources helps to reduce costs and to disseminate good practices. This also holds for ontology engineering, where the reuse of existing knowledge can be done either by directly reusing resources as they are, or after performing a reengineering process. The underlying principle is that reuse allows saving time and money, and promotes the application of good practices. Therefore, for consolidating our patterns we have applied the concept of software re-engineering pattern. • Goal, which explains the main objective intended to achieve by the process or the activity.</p><p>• Input, which includes the resources needed to carry out the process or the activity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">REQUIREMENTS FOR THE PROPOSED METHOD</head><p>• Output, which includes the results obtained after carrying out the process or the activity.</p><p>• Who, which identifies the people or teams involved in the process or the activity.</p><p>• When, which explains in which moment the process or the activity should be carried out.</p><p>• How, which includes details for carrying out the process or the activity in a prescriptive manner. A graphical workflow on how the process or the activity should be carried out is also included, with the inputs, outputs and actors involved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Requirements for the Proposed Method</head><p>The method presented in this thesis must fulfil a set of requirements that can be grouped into two main types: generic and specific requirements. The generic requirements are those that any method must fulfil, while the specific requirements of a given method are determined by factors such as the domain where the method is applied as well as cases, situations or problems it deals with. The following sections present the requirements we have considered for the design of our method.</p><p>The requirements are based on those presented by Paradela <ref type="bibr" target="#b133">[PG01]</ref>. It is worth mentioning that the requirements identified by Paradela are specific to methodologies, and that Suarez Figueroa has already demonstrated those requirements for the NeOn Methodology <ref type="bibr" target="#b138">[SF10]</ref>. In this thesis we refine the requirements for our particular method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.1">Generic Requirements</head><p>• Generality. A method should be general enough and not be driven to solve ad-hoc cases or problems. Thus our method tackles the development of ontologies by reusing and re-engineering non-ontological resources.</p><p>• Completeness. A method must consider all the cases presented and propose solutions to all of them. In this sense, the method here proposed considers classification schemes, thesauri and lexica; and presents methodological guidelines and patterns for these non-ontological resources.</p><p>• Effectiveness. A method should solve adequately the cases proposed, independently of the person using such a method. Therefore, it should be more prescriptive than descriptive. Thus our goal is to describe the method in a simple way, and any person (a software developer or an ontology practitioner) should be able to understand and follow it without any special effort.</p><p>• Efficiency. A method must be efficient, that is, be able to achieve its objective. This means that the method should allow the construction of ontologies with fewer resources (time, money, etc.) and better quality. We will describe and carry out the necessary experiments using the method for validating this requirement.</p><p>• Consistency. A method must produce the same set of results for the same problem, independently of who employs it. Thus, our method identifies which the outputs of the different processes, activities and tasks should be, or who the different users involved in the development of ontologies are. We will validate that the same set of outputs is obtained after applying the method in several cases.</p><p>• Finiteness. The number of the elements that compose a method and the number of activities must be finite, i.e., consuming a reasonable period of time. Our method consists of a finite set of processes, activities and tasks.</p><p>The number of elements used to describe them is also finite.</p><p>• Discernment. A method must be composed of a small set of structural, functional and representational components. Thus, the method here proposed includes -A categorization of non-ontological resources (structural component).</p><p>-Processes, activities, tasks, inputs, outputs and restrictions (funcional components). -A set of patterns for re-engineering non-ontological resources into ontologies (representational components).</p><p>• Environment. Methods can be classified into scientific and technological.</p><p>In scientific methods ideas are validated, whereas in technological methods artefacts are built. In our case, since the main result after applying the method is a technical product, i.e., an ontology, our method can be considered as a technological one.</p><p>• Transparency. A method must be like a white box, so that we can know in every moment the active processes or activities being performed, who is performing them, etc. The method here presented explicitly defines the actors, inputs, and outputs of each process, as well as activities and tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.2">Specific Requirements</head><p>• The method should allow performing the transformation approaches identified in Section 2.1.1.3, namely, TBox, ABox and population.</p><p>• The method should cover any kind of non-ontological resource. Thus, we can apply the method to other types of resources not contemplated in this thesis.</p><p>• The method should be automatable, because the size of the non-ontological resources can be huge. It should have technological support that permits the automatization of the activities and tasks involved, thus saving time and effort when dealing with very large non-ontological resources.</p><p>Chapter 5</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>REUSING NON-ONTOLOGICAL RESOURCES</head><p>As stated in the introduction of this thesis, our goal is to speed up the ontology development process by reusing available non-ontological resources that have been agreed upon by a particular community. In this sense, we have to identify first which non-ontological resources we are going to work with. However, as we discussed in Section 1.1.2 an accepted and agreed upon typology of nonontological resources does not exist yet. Therefore, in this section we start by describing our categorization of non-ontological resources. Then, we present our Non-ontological Resource Metadata Vocabulary (NoRMV) for depicting the available non-ontological resources. This vocabulary will be included later on in the ontology generated as provenance information. Finally, we set forth the methodological guidelines devised for reusing non-ontological resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Non-ontological Resources</head><p>Non-ontological Resources<ref type="foot" target="#foot_58">1</ref> (NORs) are knowledge resources whose semantics</p><p>has not yet been formalized by an ontology. There is a considerable number of NORs that embody knowledge about some particular domains and that represent some degree of consensus. These resources are present in the form of textual corpora, classification scheme, thesaurus, lexicon, etc. NORs have related semantics that allows interpreting the knowledge they contain. Regardless of whether the semantics is explicit or not, the main problem is that the semantics of NORs is not always formalized, and this lack of formalization prevents them from being used as ontologies. Using non-ontological resources that have been agreed on for building ontologies can have several benefits, e.g. interoperability in terms of the  An example of glossary is the FAO Fisheries Glossary<ref type="foot" target="#foot_59">2</ref> .</p><p>• Lexicons: In a restricted sense, a computational lexicon is considered as a list of words or lexemes hierarchically organized and normally accompanied by meaning and linguistic behaviour information <ref type="bibr" target="#b108">[Hir04]</ref>. A fine example is WordNet<ref type="foot" target="#foot_60">3</ref> , the best known computational lexicon of English.</p><p>• Classification schemes: A classification scheme is the descriptive information of an arrangement or division of objects into groups according to the characteristics that the objects have in common <ref type="bibr" target="#b116">[ISO04]</ref>. A good example is</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">NON-ONTOLOGICAL RESOURCES</head><p>the Fishery International Standard Statistical Classification of Aquatic Animals and Plants (ISSCAAP) <ref type="foot" target="#foot_61">4</ref> .</p><p>• Thesauri: Thesauri are controlled vocabularies of terms in a particular domain with hierarchical, associative, and equivalence relations between terms. Thesauri are mainly used for indexing and retrieving articles in large databases <ref type="bibr" target="#b115">[ISO86]</ref>. An example of thesaurus is the AGROVOC<ref type="foot" target="#foot_62">5</ref> thesaurus.</p><p>• Folksonomies: Folksonomies are Web 2.0 systems that users employ to upload and annotate their content effortlessly and without requiring any expert knowledge <ref type="foot" target="#foot_63">6</ref> . This simplicity has made folksonomies widely successful, and this success, in its turn, has resulted in a massive amount of user-generated and user-annotated web content. The main advantage of folksonomies is the implicit knowledge they contain. When users tag resources with one or more tags, they assign these resources the meaning of the tag. Furthermore, the cooccurrence of tags implies a semantic correlation among them. An example of how folksonomies are used can be seen in the del.icio.us <ref type="foot" target="#foot_64">7</ref> website.</p><p>The knowledge encoded by the resource can be represented in different ways, known as data models. A data model <ref type="bibr" target="#b71">[Car02]</ref> is an abstract model that describes how data is represented and accessed. There are three types: (1) the conceptual data model, which presents the primary entities and relationships of concern to a specific domain; (2) the logical data model, which depicts the logical entity types, the data attributes describing those entities, and the relationships between entities; and (3) the physical data model, which is related to a specific implementation of the resource. In this thesis we will use the term data model when referring to the logical data model. With regard to the data model, there are different ways of representing the knowledge encoded by the resource.</p><p>Next we present several data models for classification schemes, shown in Figure 5.2. These data models will be described in detail in Chapter 7.</p><p>• Path Enumeration <ref type="bibr" target="#b67">[Bra05]</ref>: A path enumeration model (see Figure <ref type="figure" target="#fig_21">5</ref>.2-b)) is a recursive structure for hierarchy representations and is defined as a model that stores, for each node, the path (as a string) from the root to the node. This string is the concatenation of the node code in the path from the root to the node.</p><p>• Adjacency List <ref type="bibr" target="#b67">[Bra05]</ref>: An adjacency list model is a recursive structure for hierarchy representations comprising a list of nodes with a linking column to their parent nodes. Figure <ref type="figure" target="#fig_21">5</ref>.2-c) shows this model.</p><p>• Next we present two data models for thesauri. These data models are described in detail in Chapter 8.</p><p>• Record-based model <ref type="bibr" target="#b144">[Soe95]</ref>: A record-based model is a denormalized structure that for every term it uses a record with information about the term, such as synonyms, broader, narrower and related terms. This model looks like the flattened model for classification scheme.</p><p>• Relation-based model <ref type="bibr" target="#b144">[Soe95]</ref>: A relation-based model leads to a more elegant and efficient structure. Information is stored in individual pieces that can be arranged in different ways. Relationship types are not defined as fields in a record, they are simply data values in a relationship record, thus new relationship types can be introduced with ease. There are three entities:</p><p>(1) a term entity, which contains the overall set of terms; (2) a term-term relationship entity, in which each record contains two different term codes and the relationship between them; and (3) a relationship source entity, which contains the overall resource relationships.</p><p>Next we present a data model for lexica. These data models are described in detail in Chapter 9.</p><p>• Record-based model <ref type="bibr" target="#b144">[Soe95]</ref>: This model can also be used for lexicons, because the use of a record for every lexical resource and information about that lexical resource is possible.</p><p>• Relation-based model <ref type="bibr" target="#b144">[Soe95]</ref>: It can also be used for lexicons, because the storage of information about the lexicon in individual pieces is possible.</p><p>According to the implementation we classify NORs into</p><p>• Databases : A database is a structured collection of records or data stored in a computer system.</p><p>• Spreadsheets : An electronic spreadsheet consists of a matrix of cells where a user can enter formulas and values.</p><p>• XML file : eXtensible Markup Language is a simple, open, and flexible format used to exchange a wide variety of data on and off the Web. XML is a tree structure of nodes and nested nodes of information where the user defines the names of the nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">NON-ONTOLOGICAL RESOURCES</head><p>• Flat file : A flat file is a file usually read or written sequentially. In general, a flat file is a file containing records with no structured inter-relationships.</p><p>In summary, Figure <ref type="figure" target="#fig_21">5</ref>.1 shows how a given type of NOR can be modelled following one or more data models, each of which implemented in different ways at the implementation layer. Figure <ref type="figure" target="#fig_21">5</ref>.1 shows, as an example, a classification scheme modelled following a path enumeration model. In this case, the classification scheme is implemented in a database and in an XML file.</p><p>To exemplify the non-ontological categorization presented with a real life classification scheme, we use an excerpt from the FAO water area classification presented in Figure <ref type="figure" target="#fig_21">5</ref> It is worth mentioning that this first categorization of NORs is neither exhaustive nor complete. Currently, we are enriching it by adding examples taken from RosettaNet <ref type="foot" target="#foot_65">8</ref> and Electronic Data Interchange, EDI <ref type="foot" target="#foot_66">9</ref> .</p><p>Moreover, we can map available non-ontological resources to our categorization. Next we present a brief list of them.</p><p>• The United Nations Standard Products and Services Code, UNSPSC <ref type="foot" target="#foot_67">10</ref> , is a classification scheme, modelled with the path enumeration data model and stored in a relational database. • WordNet<ref type="foot" target="#foot_68">11</ref> , a lexical database for English, is a lexicon, modelled with the relationbased data model and stored in several implementations; a particular implementation of it is a relational database. • UMLS <ref type="foot" target="#foot_69">12</ref>   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Non-ontological Resource Metadata Vocabulary</head><p>As stated before there is a large amount of NORs that embody knowledge on some particular domains and that represent some degree of consensus. Currently, most of these NORs are in its pure form without any additional information, e.g., domain of interest or authorship information, like the one provided by Dublin Core 22 for text documents, or OMV 23 for ontologies 24 . This burden makes it difficult for academia and industry to identify, find and reuse NORs effectively and efficiently. As a consequence, the reuse of NORs for building ontologies is nowadays a hard task, if not impossible. We argue that metadata, when meaning machine processable information for the Web, helps to improve NORs accessibility and reusability. Besides, it can provide other useful resource information to support maintenance. Thus, we claim here that metadata not only helps when applied (or, attached) to documents or ontologies, but also when applied to NORs themselves. There is a great demand in the field for a NOR metadata standard, a standard that would permit, amongst other things, the access and reuse of NORs.</p><p>In this thesis we propose a metadata standard reflecting the most relevant properties of NORs for supporting their reuse, which is the so called Non-Ontological </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">NoRMV Core Metadata Entities</head><p>The main classes and properties of the NoRMV are illustrated in Figure <ref type="figure" target="#fig_21">5</ref>. Besides the main NOR class, the metadata model contains elements describing various aspects related to the creation, management and usage of a NOR. We briefly discuss these in the following section. The NOR class includes as datatype properties, the URL, name, acronym, description, creation date and version of the non-ontological resource. As already described in section 5.1, we classify NOR into Classification Scheme, Thesaurus, and Lexicon, among others. Regarding the datamodel, a ClassificationScheme may have a Flattened, a PathEnumeration, an AdjacencyList, or a Snowflake data model. On the other hand, a Thesaurus may have RecordBased or RelationBased data model. And the same occurs to a Lexicon, that is, it may have Record-Based or RelationBased data model. Regarding the Implementation, it may be classified into XML, Spreadsheet, Database, and FlatFile. In addition, a NOR has a Domain, and a creator, Person(s) or Organization(s).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">METHOD FOR REUSING NON-ONTOLOGICAL RESOURCES</head><p>We group these two classes (Person and Organization) under the generic class Party by a subClassOf relation. Finally, in order to include the provenance information in the ontology generated, we relate the Ontology class, taken from OMV, to the NOR class by means of the builtByReusing relation.</p><p>Next, as an illustrative example we present an excerpt of the NoRMV metadata from the Water Area classification scheme (see Figure <ref type="figure" target="#fig_21">5</ref>.2), modelled with the Path Enumeration data model, and implemented in a database. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Method for Reusing Non-ontological Resources</head><p>Once we have defined and categorized the non-ontological resources to be dealt with, we present the methodological guidelines for reusing them. The goal of the Non-Ontological Resource Reuse process is to choose the most suitable nonontological resource for building ontologies. Domain experts, software developers and ontology practitioners carry out this process by taking as input the ontology requirements specification document (ORSD)<ref type="foot" target="#foot_74">26</ref> to find the most suitable non-ontological resources for the development of ontologies. The output of the process is a set of non-ontological resources that, to some extent, covers the expected domain. Figure <ref type="figure" target="#fig_21">5</ref>.4 shows the filling card used in the process of reusing non-ontological resources, which includes the definition, goal, input, output, performer of the process and period of execution.</p><p>This process includes the activities and tasks presented in Figure <ref type="figure" target="#fig_21">5</ref>.5 and is explained next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.1">Activity 1. Search Non-ontological Resources</head><p>The goal of the activity is to search non-ontological resources from highly reliable Web sites, domain-related sites and resources within organizations. Domain experts, software developers and ontology practitioners carry out this activity taking as input the ORSD. They use the terms that have the highest frequency in the ORSD to search for the candidate non-ontological resources that cover the desired </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2">Activity 2. Assess the Set of Candidate Non-ontological Resources.</head><p>The goal of the activity is to assess the set of candidate non-ontological resources. Domain experts, software developers and ontology practitioners carry out this activity, taking as input the set of candidate non-ontological resources. We propose to consider the following measurable criteria: (1) coverage, (2) precision plus two subjective criteria (3) quality <ref type="foot" target="#foot_75">27</ref> and (4) consensus. These criteria are inspired on the work proposed in <ref type="bibr" target="#b86">[GCCL06]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2.1">Task 2.1 Extract lexical entries</head><p>The goal of this task is to extract the lexical entries of the non-ontological resources. The task is carried out by software developers and ontology practitioners by taking as input the non-ontological resources for extracting their lexical entries with terminology extraction tools.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">METHOD FOR REUSING NON-ONTOLOGICAL RESOURCES</head><note type="other">Figure 5</note><p>.5: Activities for the non-ontological resource reuse process</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2.2">Task 2.2 Calculate precision</head><p>The goal of this task is to calculate the precision of the candidate non-ontological resources. Precision is a measure widely used in information retrieval <ref type="bibr" target="#b70">[BYRN99]</ref> and is defined as the proportion of retrieved material that is actually relevant. This task is carried out by software developers and ontology practitioners by taking as input the lexical entries extracted for the non-ontological resources and the terminology gathered in the ORSD. To adapt this precision measure into our context we need to define</p><p>• NORLexicalEntries as the set of lexical entries extracted from the non-ontological resource.</p><p>• ORSDTerminology as the set of identified terms included in the ORSD. Now we can define the precision, in our context, as the proportion of the lexical entries of the non-ontological resource that are included in the identified terms CHAPTER 5. REUSING NON-ONTOLOGICAL RESOURCES of the ORSD over the lexical entries of the non-ontological resource. This is expressed as follows:</p><formula xml:id="formula_0">P recision = |{N ORLexicalEntries} ∩ {ORSDT erminology}| |{N ORLexicalEntries}|</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2.3">Task 2.3 Calculate coverage</head><p>The goal of this task is to calculate the coverage of the non-ontological resources.</p><p>Coverage is based on the recall measure used in information retrieval <ref type="bibr" target="#b70">[BYRN99]</ref>.</p><p>Recall is defined as the proportion of relevant material actually retrieved in answer to a search request. This task is carried out by software developers and ontology practitioners by taking as input both the lexical entries extracted from the nonontological resources and the terminology gathered in the ORSD. To adapt this measure into our context, we use the aforementioned definitions of NORLexica-lEntries and ORSDTerminology. In this context, coverage is the proportion of the identified terms of the ORSD that are included in the lexical entries of the nonontological resource over the identified terms of the ORSD. This is expressed as follows:</p><formula xml:id="formula_1">Coverage = |{N ORLexicalEntries} ∩ {ORSDT erminology}| |{ORSDT erminology}|</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2.4">Task 2.4 Evaluate the consensus</head><p>The goal of this task is to evaluate the consensus of the non-ontological resources.</p><p>Consensus is a subjective and not quantifiable criterion. This task is carried out by domain experts, taking as input the non-ontological resources for stating whether the non-ontological resources contain terminology agreed upon by the community or not. We propose a preliminary starting point for this evaluation. Domain experts have to check whether the resource is coming from</p><p>• A standardization body or any entity whose primary activity is to develop, coordinate, promulgate, revise, amend, reissue, or otherwise maintain standards. For example: the International Organization for Standardization (ISO), the American National Standards Institue (ANSI), the World Wide Web Consortium (W3C).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.">METHOD FOR REUSING NON-ONTOLOGICAL RESOURCES</head><p>• Large organizations across national governments, such as the Food and Agriculture Organization of the United Nations (FAO), the World Health Organization (WHO), the United Nations Educational, the Scientific and Cultural Organization (UNESCO), the International Olympic Commitee (IOC).</p><p>• A large enough user community to make it profitable for developers to use it as a means of general interoperability.</p><p>If the resource is coming from any of the aforementioned parties, then domain experts may state that the resource has reached some degree of consensus.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2.5">Task 2.5 Evaluate the quality</head><p>The goal of this task is to evaluate the quality of the resource. We do not intend to provide a deep analysis of the quality of the resource but to offer some preliminary considerations about it. In this thesis, we propose to check the following quality attributes:</p><p>• Good documentation of the resource.</p><p>• Lack of anomalies of the non-ontological resource, such redundancies or inconsistencies.</p><p>• Reliability of the non-ontological resource. This means analysing whether we can trust in the resource or not.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2.6">Task 2.6 Build the assessment table</head><p>The goal of this task is to create an assessment table of the non-ontological resources. Software developers and ontology practitioners carry out this task, taking as input the non-ontological resources with their respective values for precision, coverage, consensus and quality criteria, for the construction of the assessment table. This table is shown in Table <ref type="table" target="#tab_34">11</ref>.3. The first column shows the non-ontological resources found. The precision column shows the precision value calculated for each non-ontological resource. Then, the coverage column shows the coverage value calculated for each non-ontological resource. Next, the consensus column depicts the domain experts' judgment about whether the non-ontological resource has been agreed on by the community or not (Yes/No). Finally, the quality column illustrates the domain experts, software developers and ontology practitioners' judgment about whether the resource has an acceptable level of quality or not (Yes/No).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.3">Activity 3. Select the Most Appropriate Non-ontological Resources</head><p>The goal of this activity is to select the most appropriate non-ontological resources to be transformed into an ontology. This activity is carried out by domain experts, • Consensus. This criterion is taken into account in the first place because, if the resource to be reused contains terminology agreed upon by the community, the effort and time spent in finding out the right labels for the ontology terms will decrease considerably.</p><p>• Quality. This criterion is taken into account in the second place because, if the resource to be reused has an acceptable level of quality, then the resultant ontology should also have it.</p><p>• High value of coverage. This criterion is taken into account in the third place because our third concern is to consider most of the ORSD terms identified.</p><p>• High value of precision. This criterion is taken into account in the fourth place because our fourth concern is the proportion of non-ontological lexical entries over the identified terms of the ORSD.</p><p>The activity output is a ranked list of non-ontological resources that, to some extent, covers the expected domain. These resources will be ready for the re-engineering process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Summary</head><p>This chapter presents our solution to those aspects related to the reuse of nonontological resources for building ontologies. It addresses some of the limitations identified in the state of art in this area.</p><p>First, it provides a formal definition of non-ontological resources and a categorization of them according to three dimensions: type of resource, data model, and implementation. Second, it introduces the Non-ontological Resource Metadata Vocabulary (NoRMV). NoRMV allows describing the non-ontological resources available, which can be used later on for generating provenance information in the ontology. Finally, it presents a method for reusing non-ontological resources for 5.4. SUMMARY building ontologies. This method provides detailed guidelines for selecting the most suitable non-ontological resources for ontology development.</p><p>The solutions presented in this chapter cover contributions C1, C2, C3 and C4, which address objective O1 (see Chapter 3).</p><p>Chapter 6</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PATTERN BASED RE-ENGINEERING METHOD</head><p>This chapter presents the method for re-engineering non-ontological resources into ontologies, which is based on a model for re-engineering non-ontological resources. First, it provides a description of this re-engineering model for NORs, and then it introduces the notion of patterns for re-engineering NORs. Next, it presents a discussion about the hidden semantics in the relations of the NORs and the formal definitions of the ontologies generated. Finally, it depicts the prescriptive methodological guidelines for re-engineering NORs into ontologies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Re-engineering Model for Non-ontological Resources</head><p>This section describes our model for re-engineering non-ontological resources. The model is based on the software re-engineering model presented in Section 2.2.1. It is worth mentioning that we consider non-ontological resources as software resources because a software system consists of one or more programs, data files, databases, and job control scripts.</p><p>The model for non-ontological resource re-engineering is depicted in Figure <ref type="figure" target="#fig_29">6</ref>.1. The figure also shows the following activities: NOR reverse engineering, NOR transformation, and ontology forward engineering. Next, we describe the activities defined in the Glossary of Activities in Ontology Engineering [SFGP08]:</p><p>• NOR reverse engineering is defined as the activity of analysing a non-ontological resource to identify its underlying components and creating a representation of the resource at higher levels of abstraction.</p><p>• NOR transformation is defined as the activity of generating an ontological model at different levels of abstraction from the NOR.</p><p>• Ontology forward engineering refers to the activity of outputting a new implementation of the ontology on the basis of the new conceptual model. As mentioned before, we consider non-ontological resources as software resources and, therefore, we use the software abstraction levels shown in Figure <ref type="figure" target="#fig_29">6</ref>.1 to depict the reverse engineering of the non-ontological resource. Understanding how a non-ontological resource is created is useful for also understanding how non-ontological resource can be reverse engineered. The idea of levels of abstraction that underlies the development process also underlies the reverse engineering process. This idea is used to model software development as a sequence of phases, in which each phase corresponds to a particular level of abstraction.</p><p>In the left triangle of Figure <ref type="figure" target="#fig_29">6</ref>.1 we can distinguish the four different abstraction levels that define each activity in software development:</p><p>1. The conceptual abstraction level, which describes in general terms, the system functional characteristics;</p><p>2. The requirements level, which is the specification of the problem being solved;</p><p>3. The design level, which is the specification of the solution;</p><p>4. The implementation level, which refers to the coding, testing and delivery of the operational system.</p><p>As the level of abstraction decreases, the system description becomes more detailed and thus the amount of information increases. Moreover, the higher the abstraction level, the less information about a system to comprehend.</p><p>In the right triangle of Figure <ref type="figure" target="#fig_29">6</ref>.1 we can distinguish the four different abstraction levels that define each activity in ontology engineering:</p><p>1. The specification level, which describes the collection of requirements that the ontology should fulfil;</p><p>2. The conceptualization level, which information from the acquisition process is organized into meaningful conceptual models;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.">REQUIREMENTS FOR THE TRANSFORMATION</head><p>3. The formalization level, which represents the transformation of the conceptual model into a formal or semi-computable model according to a knowledge representation paradigm;</p><p>4. The implementation level, which refers to the generation of computable models according to the syntax of a formal representation language.</p><p>Finally, the model in Figure <ref type="figure" target="#fig_29">6</ref>.1 suggests the path from the available nonontolo-gical resource to the target ontology. This transformation is guided by a set of Patterns for Re-engineering Non-Ontological Resources (PR-NOR), and goes from the non-ontological resource requirements/design level to the conceptualization level of the ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Requirements for the Transformation</head><p>In this section we describe the requirements identified for the transformation. The requirements are listed according to the three transformation approaches identified in Section 2.1.1 (see Figure <ref type="figure" target="#fig_4">2</ref>.2).</p><p>• TBox transformation <ref type="bibr" target="#b73">[CHPG09]</ref>, which transforms the resource content into an ontology schema. This transformation approach tries to enforce a formal semantics to the re-engineered resources, even at the cost of changing their structure. The requirements for this transformation are -Full conversion, the resultant ontology has all the information that is present in the original resource. In other words, all queries that are possible on the original source should also be possible on the ontology generated. -Conversion on the semantic level, which implies that the schema translation interprets the semantics of the data. In other words, the conversion should not avoid possible interpretations, e.g., relations among the NOR entities.</p><p>• ABox transformation <ref type="bibr" target="#b73">[CHPG09]</ref>, which transforms the resource schema into an ontology schema, and the resource content into ontology instances. This transformation approach leaves the informal semantics of the re-engineered resources mostly untouched. The requirements for this transformation are -Full conversion, the same requirement for the TBox transformation. Again, this implies that all queries that are possible on the original source should also be possible on the ontological version. -Structure preserving translation, which is the opposite of the second requirement of the TBox transformation. The translation should reflect as much as possible the original structure of the resource; in other words, the conversion should avoid possible interpretations.</p><p>• Population, which transforms the resource content into instances of an ontology. The requirements of the transformation are CHAPTER 6. PATTERN BASED RE-ENGINEERING METHOD -Full conversion, the same requirement for the TBox and ABox transformation.</p><p>-The ontology instances generated should reflect the target ontology structure as closely as possible. In this case, the class structure of the ontology already exists and is extended with instance data. In other words, the ontology instances must conform to the already existing ontology schema.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Patterns for Re-engineering Non-ontological Resources</head><p>In this section we introduce the sixteen patterns, developed in this thesis, that perform the transformations of NORs into ontologies. Patterns for re-engineering NORs (PR-NOR) define a procedure that transforms the NOR terms into ontology representational primitives. Next, we present the template proposed that describes the patterns for reengineering non-ontological resources (PR-NOR). We have modified the tabular template used in [VTAGS + 08] for describing the PR-NORs. The meaning of each field is shown in Table <ref type="table">6</ref>.1.</p><p>According to the NOR categorization presented in section 5.1, in this thesis we propose patterns for re-engineering classification schemes, thesauri, and lexicons (see Table <ref type="table">6</ref>.2). Since the data model can be different even for the same type of NOR. For every data model we can define a process with a well-defined sequence of activities in order to extract the NORs terms and then to map these terms to a conceptual model of an ontology. This process is expressed as an algorithm. Moreover, it is worth mentioning that we refer to ontology schema as TBox, and just ontology as TBox and ABox. These patterns are included in the ODP Portal<ref type="foot" target="#foot_76">1</ref> .</p><p>The re-engineering patterns take advantage of the use of the Ontology Design Patterns<ref type="foot" target="#foot_77">2</ref> for creating the ontology code. So, most of the code generated follows the best practices already identified by the community (Process section Table <ref type="table">6</ref>.1).</p><p>Although we have identified five types of NORs, here we just list patterns for re-engineering classification schemes, thesauri, and lexica (see Table <ref type="table">6</ref>.2).</p><p>The identifier of a PR-NOR follows a naming convention. Next, we illustrate the naming convention for identifying the patterns. We have the pattern identifier PR-NOR-&amp;&amp;%%-## where • PR-NOR is the prefix • &amp;&amp; represents the type of resource: CL for classification scheme, TS for thesaurus, and LX for lexicon.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4.">SEMANTICS OF THE RELATIONS AMONG THE NOR TERMS</head><p>among those entities must be discovered and then made explicit. Thus, patterns that follow the TBox transformation approach must discover first the semantics of the relations among the NOR terms. To perform this task, we rely on WordNet, which organizes the lexical information into meanings (senses) and synsets. What makes WordNet remarkable is the existence of various relations explicitly declared between the word forms (e.g. lexical relations, such as synonymy and antonymy) and the synsets (meaning to meaning or semantic relations e.g. hyponymy/hypernymy relation, meronymy relation). In this thesis, we want to prove that we can rely on an external resource for making explicit the relations. For this purpose, first we rely on WordNet, and, then as a future line of this work, we may rely on other information resources, such as DBpedia<ref type="foot" target="#foot_78">3</ref> . Algorithm 1 describes how to make explicit the semantics of the relations in the NOR terms. The abbreviation of the algorithm name is getRelation.</p><p>Algorithm 1 Discovering the semantics of the relations -getRelation 1: Take two related terms from the NOR, ti and tj 2: def aultRelation ← userDef inedRelation 3: if contains(ti,tj) then • (Lines 3-6) Check if it is possible to get the subClassOf relation by identifying attribute adjetives <ref type="foot" target="#foot_79">4</ref> within the two terms.</p><p>• (Line 7) If it is not possible to get the subClassOf relation.</p><p>- It is worth mentioning that the algorithm takes advantage of the use of the PartOf content pattern<ref type="foot" target="#foot_80">5</ref> for asserting the partOf relation.</p><formula xml:id="formula_2">(</formula><p>Regarding the time complexity of the algorithm, this is constant, i.e. O(1)+K, where K represents the time complexity of accessing the WordNet method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5">Formal Definition of the Ontologies Generated</head><p>In this section we provide a formal definition of the ontologies generated which are dealt with by the patterns. This formal definition is used in the Formal Transformation section of the patterns (see Table <ref type="table">6</ref>.1).</p><p>Based on the definition provided in <ref type="bibr" target="#b81">[ES07]</ref>, we can define a lightweight ontology O as the following tuple:</p><formula xml:id="formula_3">O = OS, KB</formula><p>Where OS represents the ontology schema, and KB represents the knowledge base.</p><p>An ontology schema OS is defined through the following tuple:</p><formula xml:id="formula_4">OS = C, A, R, S</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6.">METHOD FOR RE-ENGINEERING NON-ONTOLOGICAL RESOURCES</head><p>where:</p><p>• C = {c 1 , ..., c n }, a finite set of classes.</p><p>• A = {a 1 , ..., a n }, a finite set of attributes, where every a i ⊆ C x Literal.</p><p>• R = {r 1 , ..., r n }, a finite set of binary relations, where every r i ⊆ C x C.</p><p>• S : C → C, a subClassOf relation.</p><p>A knowledge base is a structure:</p><formula xml:id="formula_5">KB = C, A, R, I, t C , t A , t R</formula><p>consisting of:</p><p>• three sets C, A, and R as defined before.</p><p>• a set I = {i 1 , ..., i n } whose elements are called instance identifiers</p><formula xml:id="formula_6">• a function t C : C → I called class instantiation • a function t A : A → I called attribute instantiation</formula><p>• a function t R : R → I 2 called relation instantiation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6">Method for Re-engineering Non-ontological Resources</head><p>In this section we depict the prescriptive methodological guidelines for re-engineering NORs. The goal of the Method for Re-engineering Non-Ontological Resources is to transform a non-ontological resource into an ontology. The output of the process is an ontology. Figure <ref type="figure" target="#fig_29">6</ref>.2 shows the filling card of the non-ontological resource re-engineering process, which includes the definition, goal, input, output, performer of the process and time execution. The NOR re-engineering process consists of the three activities depicted in Figure <ref type="figure" target="#fig_29">6</ref>.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6.1">Activity 1. Non-ontological Resource Reverse Engineering.</head><p>The goal of this activity is to analyse a non-ontological resource, to identify its underlying terms, and to create representations of the resource at the different levels of abstraction (design, requirements and conceptual).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6.1.1">Task 1.1 Data gathering.</head><p>The goal of this task is to search and compile all the available data and documentation about the non-ontological resource, including purpose, components, data model and implementation details. The goal of this task is to identify the schema of the non-ontological resource including the conceptual components and their relationships. If the conceptual schema is not available in the documentation, the schema should be reconstructed manually or with a data modelling tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6.1.3">Task 1.3 Information exploration.</head><p>The goal of this task is to find out how the conceptual schema of the non-ontological resource and its content are represented in the data model. If the non-ontological resource data model is not available in the documentation, the data model should be reconstructed manually or with a data modelling tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6.2">Activity 2. Non-ontological Resource Transformation.</head><p>This activity has as a goal to generate a conceptual model from the non-ontological resource. We propose the use of Patterns for Re-engineering Non-Ontological Resources (PR-NOR) to guide the transformation process. The goal of this task is to find out if there is any applicable re-engineering pattern that transforms the non-ontological resource into a conceptual model. The search is performed in the ODP Portal<ref type="foot" target="#foot_81">6</ref> , which includes the PR-NOR library, and with the following criteria: (1) non-ontological resource type, (2) internal data model of the resource, and (3) the transformation approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6.">METHOD FOR RE-ENGINEERING NON-ONTOLOGICAL RESOURCES</head><p>6.6.2.2 Task 2.2.a Use re-engineering patterns to guide the transformation.</p><p>The goal of this task is to apply the re-engineering pattern obtained in task 2.1 to transform the non-ontological resource into a conceptual model. If a suitable CHAPTER 6. PATTERN BASED RE-ENGINEERING METHOD pattern for re-engineering non-ontological resource is found, then the conceptual model is created from the non-ontological resource following the procedure established in the pattern for re-engineering. Alternatively, the software library, described in Chapter 10, can be used for generating the ontology automatically.</p><p>6.6.2.3 Task 2.2.b Perform an ad-hoc transformation.</p><p>The goal of this task is to set up an ad-hoc procedure that transforms the nonontological resource into a conceptual model when a suitable pattern for re-engineering cannot be found. This ad-hoc procedure may be generalized to create a new pattern for re-engineering non-ontological resource.</p><p>6.6.2.4 Task 2.3 Manual refinement.</p><p>The goal of this task is to check whether any inconsistency appears after the transformation. Software developers and ontology practitioners, with the help of domain experts, can fix manually any inconsistencies appearing after the transformation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6.3">Activity 3. Ontology Forward Engineering</head><p>The goal of this activity is to generate the ontology. We use the ontology levels of abstraction to depict this activity because they are directly related to the ontology development process. The conceptual model obtained in task 2.2.a or 2.2.b is transformed into a formalized model, according to a knowledge representation paradigm such as description logics and first order logic. Then, the formalized model is implemented in an ontology language.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.7">Summary</head><p>This chapter has presented our solution for the aspects related to the re-engineering of non-ontological resources for building ontologies. It also addresses some of the limitations identified in the state of art in this area. First, it presents our Re-engineering Model for Non-ontological resources, which is based on the software re-engineering model presented in Section 2.2.1. Then, it describes the requirements for the transformation process. Next, it briefly describes the Patterns for Re-engineering Non-ontological resources into Ontologies (PR-NOR). Then, it shows how the patterns make explicit the hidden semantics in the relations of the non-ontological resource. After that, it introduces the formal definitions of the ontologies generated. Finally, it presents our method for re-engineering non-ontological resources for building ontologies. This method provides detailed guidelines for transforming a non-ontological resource into an ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.7.">SUMMARY</head><p>The solutions presented in this chapter cover contributions C5 and C6, which address objective O2 (see Chapter 3).</p><p>Chapter 7</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES</head><p>Classification schemes [KBH + 97] play an important role when retrieving information in a network environment, especially because they provide browsing structures for subject-based information gateways on the Web. The advantages of using classification schemes include improved subject browsing facilities and interoperability with other services. Classification schemes are probably the most valuable input for creating, at a reasonable cost, ontologies in many domains. They contain, readily available, a wealth of category definitions plus a hierarchy and reflect some degree of community consensus <ref type="bibr" target="#b102">[HdB07]</ref>.</p><p>In this chapter we present a definition of classification schemes, the data models for representing classification schemes and our main contribution: the set of patterns for re-engineering classification schemes into ontologies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Classification Scheme</head><p>A classification scheme <ref type="bibr" target="#b116">[ISO04]</ref> is the descriptive information of an arrangement or division of objects into groups based on the characteristics the objects have in common. A good example is the Fishery International Standard Statistical Classification of Aquatic Animals and Plants (ISSCAAP)<ref type="foot" target="#foot_82">1</ref> from FAO<ref type="foot" target="#foot_83">2</ref> .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.1">Components of a Classification Scheme</head><p>The ISO/IEC 11179-2 <ref type="bibr" target="#b116">[ISO04]</ref> provides a conceptual model for managing classification schemes and identifies the classification scheme components, presented in Figure <ref type="figure" target="#fig_36">7</ref>.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 7. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES</head><p>• A classification scheme, which represents the classification scheme itself. It has the cs name element, that is, the name of the classification scheme.</p><p>• A classification scheme item, which represents the individual item within a classification scheme. It has the following elements:</p><p>csi name, which is the name of the classification scheme item.</p><p>-One or more csi attributes</p><p>• A classification scheme item relationship. It is the relationship among items within a classification scheme. Such relation serves to assist in navigating through a large number of classification scheme items. This relationship bears the csir name element, which is the name of the classification scheme item relationship. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.2">Classification Scheme Formal Definition</head><p>We formally define a classification scheme as the following tuple:</p><formula xml:id="formula_7">C = CS, CC</formula><p>Where CS represents the schema of the classification scheme, and CC represents the content of the classification scheme. The schema of the classification scheme, CS, is defined as:</p><formula xml:id="formula_8">CS = CG, CA, CR</formula><p>where:</p><p>• CG = {c 1 }, a set of one category.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.">CLASSIFICATION SCHEME</head><p>• CA = {a 1 , ..., a n }, a finite set of attributes, where every a i ⊆ CG x Literal.</p><p>• CR = {r 1 }, a set of one binary relation, where r 1 ⊆ CG x CG.</p><p>The content of the classification scheme, CC, is defined as</p><formula xml:id="formula_9">CC = CG, CA, CR, CI, Ct C , Ct A , Ct R</formula><p>which consists of</p><p>• The three CG, CA and CR sets, as were defined before.</p><p>• A CI = {csi 1 , ..., csi n } set, whose elements are called classification scheme item identifiers</p><formula xml:id="formula_10">• A Ct G : CG → CI function, called classification scheme item instantiation • A Ct A : CA → CI function,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>called classification scheme attribute instantiation</head><p>• A Ct R : CR → CI 2 function, called classification scheme relation instantiation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.3">Classification Scheme Data Models</head><p>As we mentioned in Section 5.1 there are different ways of representing the knowledge encoded by a particular resource. In this section we review the existing data models for classification schemes already presented in Section 5.1. In order to exemplify the data models for classification schemes, we use an excerpt from the FAO classification scheme of water areas<ref type="foot" target="#foot_84">3</ref> shown in Figure <ref type="figure" target="#fig_21">5</ref>.2-a). These data models are the following:</p><p>• A path enumeration data model <ref type="bibr" target="#b67">[Bra05]</ref> is a recursive structure for hierarchy representations, defined as a model, which stores for each node the path (as a string) from the root to the node, see Figure <ref type="figure" target="#fig_21">5</ref>.2-b).</p><p>• An adjacency list <ref type="bibr" target="#b67">[Bra05]</ref> data model is a recursive structure for hierarchy representations comprising a list of nodes with a linking column to their parent nodes. In this case, every classification scheme item has the parent code, see Figure <ref type="figure" target="#fig_69">5.2-c</ref>).</p><p>• A snowflake data model <ref type="bibr" target="#b131">[MZ06]</ref> is a normalized structure for hierarchy representations. In this case, the classification scheme items are grouped by levels or entities. There are as many groups as levels the classification scheme has. In this model every classification scheme item has the parent code (i.e., parent key value), just like the adjacency list data model has; see Figure <ref type="figure" target="#fig_21">5</ref>.2-d).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 7. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES</head><p>• A flattened data model <ref type="bibr" target="#b131">[MZ06]</ref> is a denormalized structure for hierarchy representations. In this case, each hierarchy level is represented on a different column. There are as many columns as levels the classification scheme has. The hierarchy is represented with one single entity where each hierarchy level is stored in a different column, see Figure <ref type="figure" target="#fig_21">5</ref>.2-e).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.4">Classification Scheme Implementations</head><p>These data models can be implemented as databases, XML files, flat files, spreadsheets, etc.    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.1">Patterns for the TBox Transformation</head><p>These patterns transform the resource content into an ontology schema. The TBox transformation approach tries to impose a formal semantics to the re-engineered resources, even at the cost of changing their structure [SAd + 07]. For making explicit the semantics of the relations among the NOR terms, the patterns rely on an external resource, WordNet, as we described in Section 6.4. The time complexity of the algorithms described in the section PROCESS: How to Re-engineering is polynomial O(n 2 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.1.1">Pattern for re-engineering a classification scheme following the path enumeration data model into an ontology schema</head><p>The pattern for re-engineering non-ontological resource, shown in Table <ref type="table" target="#tab_16">7</ref>.1, provides a guide to transform a classification scheme into an ontology schema. The classification scheme is modelled with a path enumeration data model. Additional Notes</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES INTO ONTOLOGIES</head><p>• noP arentT erms, children, allChildren are lists that do not allow duplicates. • createClass is a function that creates a class from a given term.</p><p>• getRelation is the algorithm 1 defined in section 6.4.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given term. • childrenOf is a function that returns the children of a given term.</p><p>• removeAllTerms is a function that removes all the elements of a given list.</p><p>• isEmpty checks if a list has elements or not.</p><p>• add is a function that adds the elements of a list into another list.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal Transformation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Classification Scheme: C = CS, CC Ontology: The pattern for re-engineering non-ontological resource, shown in Table <ref type="table" target="#tab_16">7</ref>.2, provides a guide to transform a classification scheme into an ontology schema. The classification scheme is modelled with an adjacency list data model. </p><formula xml:id="formula_11">O = OS, KB Transformation: CC -→ OS : Ct G -→ C Ct R -→ R ∪ S Continued</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Re-engineering a classification scheme following the adjacency list model, to design an ontology schema.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Suppose that someone wants to build an ontology based on the water areas classification published by FAO. This classification scheme follows the adjacency list data model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pattern for Re-engineering Non-ontological Resource</head><p>INPUT: Resource to be Re-engineered</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>A non-ontological resource holds a classification scheme that follows the adjacency list model. A classification scheme is a rooted tree of terms, in which each term groups entities by some particular degree of similarity. The semantics of the hierarchical relation between parent and children terms may vary depending on the context. The adjacency list data model <ref type="bibr" target="#b67">[Bra05]</ref> for hierarchical classifications proposes to create an entity which holds a list of items with a linking column associated to their parent items.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>The FAO classification for water areas groups them according to some different criteria, such as environment, statistics, and jurisdiction, among others. Additional Notes</p><p>• noP arentT erms, children, allChildren are lists that do not allow duplicates. • createClass is a function that creates a class from a given term.</p><p>• getRelation is the algorithm 1 defined in section 6.4.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given term. • childrenOf is a function that returns the children of a given term.</p><p>• removeAllTerms is a function that removes all the elements of a given list.</p><p>• isEmpty checks if a list has elements or not.</p><p>• add is a function that adds the elements of a list into another list.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Continued on next page</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES INTO ONTOLOGIES</head><p>Table <ref type="table" target="#tab_16">7</ref>.3: Pattern for re-engineering a classification scheme following the snowflake data model into an ontology schema (continued). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graphical Representation (UML) General Solution Ontology</head><p>Continued on next page Additional Notes</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES INTO ONTOLOGIES</head><p>• noP arentT erms, children, allChildren are lists that do not allow duplicates. • createClass is a function that creates a class from a given term.</p><p>• getRelation is the algorithm 1 defined in section 6.4.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given term. • childrenOf is a function that returns the children of a given term.</p><p>• removeAllTerms is a function that removes all the elements of a given list.</p><p>• isEmpty checks if a list has elements or not.</p><p>• add is a function that adds the elements of a list into another list. Additional Notes</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Continued on next page</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES INTO ONTOLOGIES</head><p>• noP arentT erms, children, allChildren are lists that do not allow duplicates. • createClass is a function that creates a class from a given term.</p><p>• getRelation is the algorithm 1 defined in section 6.4.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given term. • childrenOf is a function that returns the children of a given term.</p><p>• removeAllTerms is a function that removes all the elements of a given list.</p><p>• isEmpty checks if a list has elements or not.</p><p>• add is a function that adds the elements of a list into another list.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Continued on next page</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES INTO ONTOLOGIES</head><p>Table <ref type="table" target="#tab_16">7</ref>.4: Pattern for re-engineering a classification scheme following the flattened data model into an ontology schema (continued).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><p>Formal Transformation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Classification Scheme: C = CS, CC Ontology:</p><formula xml:id="formula_12">O = OS, KB Transformation: CC -→ OS : Ct G -→ C Ct R -→ R ∪ S</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relations to other modelling components</head><p>Use the Architectural Pattern: AP-TX-01 [SFBG + 07]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.2">Patterns for the ABox Transformation</head><p>These patterns transform the resource schema into an ontology schema, and the resource content, into ontology instances. The ABox transformation approach leaves the informal semantics of the re-engineered resources mostly untouched</p><formula xml:id="formula_13">[SAd + 07].</formula><p>The patterns presented here deal with classification schemes. As described in Section 7.1, the schema of a classification scheme has the following components:</p><p>(1) a classification scheme entity, which will be transformed into a class, and (2) a classification scheme item relationship, which will be transformed into a subClas-sOf relation.</p><p>The time complexity of the algorithms described in the Section PROCESS: How to Re-engineering is linear O(n).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.2.1">Pattern for re-engineering a classification scheme following the path enumeration data model into an ontology</head><p>The pattern for re-engineering non-ontological resource, shown in Table <ref type="table" target="#tab_16">7</ref>.5, provides a guide to transform a classification scheme following the path enumeration data model into an ontology. The pattern transforms the resource schema into an ontology schema, and the resource content, into ontology instances.</p><p>Table <ref type="table" target="#tab_16">7</ref>.5: Pattern for re-engineering a classification scheme following the path enumeration data model into an ontology.  Additional Notes</p><p>• csT erms is a list that does not allow duplicates.</p><p>• createClass is a function that creates a class from a given term.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• createInstance is a function that creates an instance from a given term.</p><p>• setInstanceOfClass is a function that sets up a given instance of a given class.</p><p>Continued on next page 123 CHAPTER 7. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES Table <ref type="table" target="#tab_16">7</ref>.5: Pattern for re-engineering a classification scheme following the path enumeration data model into an ontology (continued).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><p>Formal Transformation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Classification Scheme: CS = CS, CC Ontology:</p><formula xml:id="formula_14">O = OS, KB Transformation: CS -→ OS : CG -→ C CA -→ A CR -→ R ∪ S CC -→ KB : CI -→ I Ct G -→ t C Ct A -→ t A Ct R -→ t R</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relations to other modelling components</head><p>Use the Architectural Pattern: TX-AP-01 [SFBG + 07]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.2.2">Pattern for re-engineering a classification scheme following the adjacency list data model into an ontology</head><p>The pattern for re-engineering non-ontological resource, shown in Table <ref type="table" target="#tab_16">7</ref>.6, provides a guide to transform a classification scheme following the adjacency list data model into an ontology. The pattern transforms the resource schema into an ontology schema, and the resource content, into ontology instances.</p><p>Table <ref type="table" target="#tab_16">7</ref>.6: Pattern for re-engineering a classification scheme following the adjacency list data model into an ontology. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><note type="other">General</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Suppose that someone wants to build an ontology based on the water areas classification published by FAO. This classification scheme follows the adjacency list data model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Continued on next page</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES INTO ONTOLOGIES</head><p>Table <ref type="table" target="#tab_16">7</ref>.6: Pattern for re-engineering a classification scheme following the adjacency list data model into an ontology (continued).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><p>Pattern for Re-engineering Non-ontological Resource INPUT: Resource to be Re-engineered</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>A non-ontological resource holds a classification scheme that follows the adjacency list model. A classification scheme is a rooted tree of concepts, in which each concept groups entities by some particular degree of similarity.</p><p>The semantics of the hierarchical relation between parent and children concepts may vary depending on the context. The adjacency list data model <ref type="bibr" target="#b67">[Bra05]</ref> for hierarchical classifications proposes to create an entity which holds a list of items with a linking column associated to their parent items.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>The FAO classification for water areas groups them according to some different criteria, such as environment, statistics, and jurisdiction, among others. This classification scheme is available at http://www.fao.org/figis/servlet/RefServlet Graphical Representation   </p><note type="other">General</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES INTO ONTOLOGIES</head><p>Additional Notes</p><p>• csT erms is a list that does not allow duplicates.</p><p>• createClass is a function that creates a class from a given term.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• createInstance is a function that creates an instance from a given term.</p><p>• setInstanceOfClass is a function that sets up a given instance of a given class.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal Transformation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Classification Scheme: CS = CS, CC Ontology:</p><formula xml:id="formula_16">O = OS, KB Transformation: CS -→ OS : CG -→ C CA -→ A CR -→ R ∪ S CC -→ KB : CI -→ I Ct G -→ t C Ct A -→ t A Ct R -→ t R</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relations to other modelling components</head><p>Use the Architectural Pattern: TX-AP-01 [SFBG + 07] 7.2.2.3 Pattern for re-engineering a classification scheme following the snowflake data model into an ontology</p><p>The pattern for re-engineering non-ontological resource, shown in Table <ref type="table" target="#tab_16">7</ref>.7, provides a guide to transform a classification scheme into an ontology. The classifica-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 7. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES</head><p>tion scheme is modeled with a snowflake data model. The pattern transforms the resource schema into an ontology schema, and the resource content, into ontology instances.</p><p>Table <ref type="table" target="#tab_16">7</ref>.7: Pattern for re-engineering a classification scheme following the snowflake data model into an ontology. Use Case</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Re-engineering a classification scheme following the snowflake model, to design an ontology schema.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Suppose that someone wants to build an ontology based on an occupation hierarchical classification following the snowflake data model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pattern for Re-engineering Non-ontological Resource</head><p>INPUT: Resource to be Re-engineered</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>A non-ontological resource holds a classification scheme that follows the snowflake model. A classification scheme is a rooted tree of terms, in which each term groups entities by some particular degree of similarity. The semantics of the hierarchical relation between parent and children concepts may vary depending on the context. The snowflake data model <ref type="bibr" target="#b131">[MZ06]</ref> is a normalized structure for hierarchy representations. In this case, the classification scheme terms are grouped by levels or entities. There are as many groups as levels the classification scheme has.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Snowflake models are widely used on data warehouses to build hierarchical classifications on structures known as dimensions. Some examples of dimension are Time, Product Category, Geography, Occupations, etc. In this pattern the example is an occupation hierarchical classification hold on four different tables, one for each level (PROFESSIONI 0, PROFESSIONI 1, PROFESSIONI 2, PROFESSIONI 3). Continued on next page CHAPTER 7. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Additional Notes</head><p>• csT erms is a list that does not allow duplicates.</p><p>• createClass is a function that creates a class from a given term.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• createInstance is a function that creates an instance from a given term.</p><p>• setInstanceOfClass is a function that sets up a given instance of a given class.</p><p>Continued on next page</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES INTO ONTOLOGIES</head><p>Table <ref type="table" target="#tab_16">7</ref>.7: Pattern for re-engineering a classification scheme following the snowflake data model into an ontology (continued).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><p>Formal Transformation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Classification Scheme: CS = CS, CC Ontology:</p><formula xml:id="formula_17">O = OS, KB Transformation: CS -→ OS : CG -→ C CA -→ A CR -→ R ∪ S CC -→ KB : CI -→ I Ct G -→ t C Ct A -→ t A Ct R -→ t R</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relations to other modelling components</head><p>Use the Architectural Pattern: TX-AP-01 [SFBG + 07]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.2.4">Pattern for re-engineering a classification scheme following the flattened data model into an ontology</head><p>The pattern for re-engineering non-ontological resource, shown in Table <ref type="table" target="#tab_16">7</ref>.8, provides a guide to transform a classification scheme following the flattened data model into an ontology. The pattern transforms the resource schema into an ontology schema, and the resource content, into ontology instances. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Additional Notes</head><p>• csT erms is a list that does not allow duplicates.</p><p>• createClass is a function that creates a class from a given term.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• createInstance is a function that creates an instance from a given term.</p><p>• setInstanceOfClass is a function that sets up a given instance of a given class.</p><p>Continued on next page</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CHAPTER 7. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES</head><p>Table <ref type="table" target="#tab_16">7</ref>.8: Pattern for re-engineering a classification scheme following the flattened data model into an ontology (continued).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><p>Formal Transformation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Classification Scheme: CS = CS, CC Ontology:</p><formula xml:id="formula_18">O = OS, KB Transformation: CS -→ OS : CG -→ C CA -→ A CR -→ R ∪ S CC -→ KB : CI -→ I Ct G -→ t C Ct A -→ t A Ct R -→ t R</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relations to other modelling components</head><p>Use the Architectural Pattern: TX-AP-01 [SFBG + 07]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Summary</head><p>This chapter has presented the solution we provide for those aspects related to the re-engineering of classification schemes for building ontologies. Our solution addresses some of the limitations identified in the state of art of this area. First, we review the definition of a classification scheme, including its components. Then, we provide a formal definition for the classification schemes and the identified data models and implementations for them. Finally, we present the patterns for re-engineering classification schemes into ontologies, including those for the TBox and ABox transformation approaches. The time complexity of the TBox transformation algorithm is polynomial O(n 2 ), whereas that of the ABox transformation algorithm is linear O(n). This set of patterns are used within the method presented in Chapter 6.</p><p>The solutions presented in this chapter cover contribution C7, which partially addresses objective O3 (see Chapter 3). Such a contribution is evaluated in Sections 11.1.1 and 11.2.1.</p><p>Chapter 8</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PATTERNS FOR RE-ENGINEERING THESAURI</head><p>A thesaurus represents the knowledge of a domain with a collection of terms and a limited set of relations between them. Thesauri are the most valuable input for creating, at reasonable cost, ontologies in many domains. They contain, readily available, a wealth of category definitions plus a hierarchy, and they reflect some degree of community consensus <ref type="bibr" target="#b102">[HdB07]</ref>. This chapter presents a definition of thesauri, the existing standards for thesauri, the data models for representing thesauri, and our main contribution, namely, the set of patterns for re-engineering thesauri into ontologies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Thesaurus</head><p>In the field of thesaurus development there are several standards. These standards provide some guidelines about how the thesaurus should be structured. Next we briefly describe the most important thesaurus standards.</p><p>• ISO 2788:1986, which is the standard that sets the guidelines for the establishment and development of monolingual thesauri <ref type="bibr" target="#b115">[ISO86]</ref>. This standard covers some aspects of the selection of indexing terms, the procedures for the control of the vocabulary, and specifically, the way of establishing relationships among these terms (particularly those relations that are used, a priori, in the thesauri), as well as the inclusion and suppression of terms, the methods of compilation, the form and the content of the thesauri, the use of automatic data processing, etc. The indications established in this standard ensure the uniformity of each of the indexing areas or entities. The techniques described by the standard are based on general principles that can be applicable to any kind of subject.</p><p>• ISO 5964:1985, which sets the guidelines for the establishment and development of multilingual thesauri [ISO85]. These guidelines should be used in conjunction with ISO 2788 and regarded as an extension of the scope of the monolingual guidelines. The majority of procedures and recommendations contained in ISO 2788, namely, the forms of terms and the basic thesauri relationships as well as management operations such evaluation and maintenance, are equally valid for a multilingual thesaurus. Distinction is made between preferred terms and non-preferred terms.</p><p>• ANSI/NISO Z39.19-2005, which establishes the guidelines for the construction, format, and management of monolingual controlled vocabularies <ref type="bibr" target="#b57">[ANS05]</ref>. This standard is related to ISO 2788. It presents guidelines and conventions for the contents, display, construction, testing, maintenance, and management of monolingual controlled vocabularies. It focuses on controlled vocabularies that are used for the representation of content objects in knowledge organization systems, including lists, synonym rings, taxonomies, and thesauri.</p><p>• BS 8723-1:2005 and BS 8723-2:2005 [BS 05a, BS 05b]. The British Standard BS 8723-1 defines the terminology used throughout the rest of the BS</p><p>• A HierarchicalRelationship, which is a relationship between or among terms in the thesaurus that depicts broader (generic) to narrower (specific) or wholepart relationships.</p><p>• A AssociativeRelationship, which is a relationship between or among terms in the thesaurus that leads from one term to other terms that are related to or associated with it.</p><p>• A Equivalence, which is a relationship between or among terms in the thesaurus that leads to one or more terms that are to be used instead of the term from which the cross-reference is made.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.2">Thesaurus Formal Definition</head><p>We formally define a thesaurus as the following tuple:</p><formula xml:id="formula_19">T = T S, T C</formula><p>Where T S represents the schema of the thesaurus, and T C represents the content of the thesaurus. The schema of the thesaurus is defined as:</p><formula xml:id="formula_20">T S = T T, T A, T B, T N, T R</formula><p>where:</p><p>• T T = {tt pt , tt npt }, a set of two categories, tt pt preferred term, and tt npt , non-preferred term.</p><p>• T A = {a 1 , ..., a n }, a finite set of attributes, where every a i ⊆ T T x Literal.</p><p>• T B = {tsb 1 , ..., tsb n }, a finite set of broader term relations.</p><p>• T N = {tsn 1 , ..., tsn n }, a finite set of narrower term relations.</p><p>• T R = {tsr 1 , ..., tsr n }, a finite set of related term relations.</p><p>The content of the thesaurus is defined as:</p><formula xml:id="formula_21">T C = T T, T A, T B, T N, T R, T I, T t T , T t A , T t B , T t N , T t R</formula><p>which consists of:</p><p>• The five T T , T A, T B, T N , and T R sets, as were defined before.</p><p>• A T I = {ti 1 , ..., ti n } set whose elements are called thesaurus term identifiers   The relation-based model leads to a more elegant and efficient structure. Information is stored in individual pieces that can be arranged in different ways. Relationship types are not defined as fields in a record, but they are simply data values in a relationship record; thus new relationship types can be introduced with ease. As Figure <ref type="figure" target="#fig_31">8</ref>.5 shows, there are three entities: (1) a term entity, which contains the overall set of terms, (2) a term-term relationship entity, in which each record contains two different term codes and the relationship between them, and (3) a relationship source entity, which contains the overall thesaurus relationships. </p><formula xml:id="formula_22">• A T t T : T T → T I</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.4">Thesaurus Implementations</head><p>These data models can be implemented as any of the identified types on Section 5.1, i.e., databases, XML files, flat files, and spreadsheets. A direct implementation would be implemented as tables in a relational database or in a spreadsheet.  .8 shows how a given type of thesauri can be modelled following one or more data models, each of which could be implemented in different ways at the implementation layer. As an example, Figure <ref type="figure" target="#fig_31">8</ref>.8 shows a thesaurus modelled following a record-based model. In this case, the thesaurus is implemented in a database and in an XML file.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.">PATTERNS FOR RE-ENGINEERING THESAURI INTO ONTOLOGIES</head><p>Table <ref type="table" target="#tab_28">8</ref>.1: Pattern for re-engineering a thesaurus following the record-based data model into an ontology schema (continued).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><p>Additional Notes</p><p>• noBT erms, N T erms, RT erms, U F T erms, restOf T erms are lists that do not allow duplicates. • createClass is a function that creates a class from a given term.</p><p>• getRelation is the algorithm 1 defined in section 6.4.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given term. • narrowerTermOf is a function that returns the narrower terms of a given term.</p><p>• relatedTermOf is a function that returns the related terms of a given term.</p><p>• usedForTermOf is a function that returns the equivalent terms of a given term.</p><p>• remove is a function that removes a given term from a given list.</p><p>• removeAllTerms is a function that removes all the elements of a given list.</p><p>• isEmpty checks if a list has elements or not.</p><p>• add is a function that adds the elements of a list into another list.</p><p>• SOE is a pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref> suggested as best practice in the context of this antipattern: the tendency to declare two classes equivalent when in fact their labels simply express synonym.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal Transformation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Thesaurus: The pattern for re-engineering thesaurus, shown in Table <ref type="table" target="#tab_28">8</ref>.2, provides a guide to transform a thesaurus into an ontology schema. The thesaurus is modelled with a relation-based data model.  </p><formula xml:id="formula_23">T = T S, T C Ontology: O = OS, KB Transformation: T C -→ OS : T t T -→ C T t N -→ R ∪ S T t B -→ R ∪ S T t R -→ R ∪ S</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><p>Additional Notes</p><p>• noBT erms, N T erms, RT erms, U F T erms, restOf T erms are lists that do not allow duplicates. • createClass is a function that creates a class from a given term.</p><p>• getRelation is the algorithm 1 defined in section 6.4.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given term. • narrowerTermOf is a function that returns the narrower terms of a given term.</p><p>• relatedTermOf is a function that returns the related terms of a given term.</p><p>• usedForTermOf is a function that returns the equivalent terms of a given term.</p><p>• remove is a function that removes a given term from a given list.</p><p>• removeAllTerms is a function that removes all the elements of a given list.</p><p>• isEmpty checks if a list has elements or not.</p><p>• add is a function that adds the elements of a list into another list.</p><p>• SOE is a pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref> suggested as best practice in the context of this antipattern: the tendency to declare two classes equivalent when in fact their labels simply express synonym.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal Transformation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Thesaurus:</p><formula xml:id="formula_24">T = T S, T C Ontology: O = OS, KB Transformation: T C -→ OS : T t T -→ C T t N -→ R ∪ S T t B -→ R ∪ S T t R -→ R ∪ S</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relations to other modelling components</head><p>Use the Architectural Pattern: AP-LW-01 [SFBG + 07]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.2">Patterns for the ABox Transformation</head><p>These patterns transform the resource schema into an ontology schema, and the resource content, into ontology instances. The ABox transformation approach leaves the informal semantics of the re-engineered resources mostly untouched [SAd + 07].</p><p>As we mentioned in Section 8.1.1 the schema of a thesaurus has the following main components: (1) PreferredTerm, which will be transformed into a class, (2) Hierarchical Relationship, which will be transformed into a subClassOf relation, (3) Associative Relationship, which will be transformed into an ad-hoc relation, (4) Equivalent terms, the terms from the USE relationships, which will be transformed into labels, by using the logical pattern SOE, proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref>. Finally, the content of the thesaurus will be transformed into ontology instances.</p><p>The time complexity of the algorithms described in the Section PROCESS: How to Re-engineering is linear O(n). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><p>Additional Notes</p><p>• T T erms, U F T erms are lists that do not allow duplicates.</p><p>• createClass is a function that creates a class from a given term.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given term. • createInstance is a function that creates an instance from a given term.</p><p>• setInstanceOfClass is a function that sets up a given instance of a given class.</p><p>• usedForTermOf is a function that returns the equivalent terms of a given term. • SOE is a pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref> suggested as best practice in the context of this antipattern: the tendency to declare two classes equivalent when in fact their labels simply express synonym.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal Transformation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Thesaurus: The pattern for re-engineering thesaurus, shown in Table <ref type="table" target="#tab_28">8</ref>.4, provides a guide to transform a thesaurus following the record-based data model into an ontology. The pattern transforms the resource schema into an ontology schema, and the resource content, into ontology instances. Additional Notes</p><formula xml:id="formula_25">T = T S, T C Ontology: O = OS, KB Transformation: T S -→ OS : T T -→ C T A -→ A T B -→ R ∪ S T N -→ R ∪ S T R -→ R ∪ S T C -→ KB : T I -→ I T t A -→ t A T t N -→ t R T t B -→ t R T t R -→ t R</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.">PATTERNS FOR RE-ENGINEERING THESAURI INTO ONTOLOGIES</head><p>• T T erms, U F T erms are lists that do not allow duplicates.</p><p>• createClass is a function that creates a class from a given term.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given term. • createInstance is a function that creates an instance from a given term.</p><p>• setInstanceOfClass is a function that sets up a given instance of a given class. • usedForTermOf is a function that returns the equivalent terms of a given term. • SOE is a pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref> suggested as best practice in the context of this antipattern: the tendency to declare two classes equivalent when in fact their labels simply express synonym.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Continued on next page</head><p>Chapter 9</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PATTERNS FOR RE-ENGINEERING LEXICA</head><p>The term lexicon is found in many ways, in conventional printed dictionaries, CD-ROM editions and Web-based versions. During the 1970s and 80s computational linguistics began to develop computational lexicons for natural language processing programs. Computational lexicons differ from dictionaries intended for human use in that they must contain much more explicit and specific linguistic information about phrases and words and must be encoded in strictly formal structures operable by computer programs. In this chapter we present a definition of lexicon, data models for representing lexicons and patterns for re-engineering lexicons into ontologies, which are our contribution to this area.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1">Lexicon</head><p>According to <ref type="bibr" target="#b108">[Hir04]</ref> a lexicon is a list of words in a language (a vocabulary) that provides some knowledge of how to use each word. A lexicon may be general or domain-specific; we might have, for example, a lexicon of several thousand common words of English or German, or a lexicon of the technical terms of dentistry in some language. The words of interest are usually open-class or content words, such as nouns, verbs, and adjectives, rather than closed-class or grammatical function words such as articles, pronouns, and prepositions whose behaviour is more tightly bound to the grammar of the language. A lexicon may also include multiword expressions such as fixed phrases (by and large), phrasal verbs (tear apart), and other common or popular expressions such as Merry Christmas! or Elvis has left the building.</p><p>Hirst <ref type="bibr" target="#b108">[Hir04]</ref> also points out that an ordinary dictionary is an example of a lexicon. However, a dictionary is intended to be used by humans, and its style and format are unsuitable for computational use. A dictionary in a machine-readable format can serve as the basis for a computational lexicon, as in the ACQUILEX project<ref type="foot" target="#foot_86">1</ref> , and it can also serve as the basis of a semantic hierarchy.</p><p>During the last decade the subject of lexicon standardization has been studied and developed by several projects, for example, EDR<ref type="foot" target="#foot_87">2</ref> , EAGLES<ref type="foot" target="#foot_88">3</ref> , MULTEXT <ref type="foot" target="#foot_89">4</ref> , PAROLE<ref type="foot" target="#foot_90">5</ref> , SIMPLE<ref type="foot" target="#foot_91">6</ref> and ISLE<ref type="foot" target="#foot_92">7</ref> , among others.</p><p>Next, we briefly describe the most important and recent lexicon standards.  • A Lexical Resource component, which represents the entire resource. The Lexical Resource is a container for one or more lexicons.</p><p>• A Global Information component, which constitutes the administrative information and other general attributes. There is an aggregation relationship between the Lexical Resource and the Global Information in that the latter describes the administrative information and general attributes of the entire resource.</p><p>• A Lexicon component, which contains all the lexical entries of a given language within the entire resource. A Lexicon must contain at least one lexical entry.</p><p>• A Lexical Entry component, which represents a lexeme in a given language. The Lexical Entry is a container for managing the Form and Sense. Therefore, the Lexical Entry manages the relationship between the forms and their related senses. A Lexical Entry can contain one or many different forms, and can have different sense ranging from zero to many.</p><p>• A Form Representation component, which constitutes one variant orthography of a Form. When there is more than one variant orthography, the Form Representation contains a Unicode string representing the Form as well as, if needed, the unique attribute-value pairs that describe the specific language, script, and orthography.</p><p>• A Representation component, which represents a Unicode string as well as, if needed, the unique attribute-value pairs that describe the specific language, script, and orthography.</p><p>• A Sense component, which represents one meaning of a lexical entry. It allows for hierarchical senses in that a sense may be more specific than another sense of the same lexical entry.</p><p>• A Synset component, which represents the set of shared meanings within the same language. A Synset instance can link senses of different Lexical Entry instances with the same part of speech.</p><p>• A Synset Relation component, which represents the oriented relationship between Synset instances.</p><p>• A Definition component, which represents a narrative description of a sense. It is displayed to facilitate human users to understand the meaning of a Lexical Entry and is not meant to be processable by computer programs. A Sense can have no definition or it can have many. Each Definition may be associated with zero to many Text Representation components in order to manage the text definition in more than one language or script. The narrative description can be expressed in a language and/or script different than the language of the Lexical Entry component.</p><p>• A Statement component, which constitutes a narrative description and refines or complements Definition. A Definition can have no Statement instances or it can have many.</p><p>• A Text Representation component, which represents a textual content of Definition or Statement. When there is more than one variant orthography, the Text Representation contains a Unicode string representing both the textual content and the unique attribute-value pairs that describe the specific language, script, and orthography.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.">LEXICON</head><p>which contains the overall set of lexicon elements, (2) an element-element relationship entity, in which each record contains two different element codes and the relationship between them, and (3) a relationship source entity, which contains the overall lexicon relationships.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.4">Lexicon Implementations</head><p>Finally these data models can be implemented as any of the identified types in Section 5.1, namely, databases, XML files, flat files, and spreadsheets. A direct implementation would be as tables in a relational database or in a spreadsheet.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.1">Patterns for the TBox Transformation</head><p>These patterns transform the resource content into an ontology schema. The TBox transformation approach tries to impose a formal semantics on the re-engineered 9.3. SUMMARY Table <ref type="table">9</ref>.4: Pattern for re-engineering a lexicon following the relation-based data model into an ontology (continued).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><p>Additional Notes</p><p>• LSynsets, Synonyms are lists that do not allow duplicates.</p><p>• createClass is a function that creates a class from a given term.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given term. • createInstance is a function that creates an instance from a given term.</p><p>• setInstanceOfClass is a function that sets up a given instance of a given class.</p><p>• synonymsOf is a function that returns the synonyms of a given synset.</p><p>• SOE is a pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref> suggested as best practice in the context of this antipattern: the tendency to declare two classes equivalent when in fact their labels simply express synonym.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal Transformation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Lexicon:</p><formula xml:id="formula_26">L = LS, LC Ontology: O = OS, KB Transformation: LS -→ OS : SY -→ C SR -→ R ∪ S LC -→ KB : SI -→ I Lt R -→ t R</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relations to other modelling components</head><p>Use the Architectural Pattern: AP-LW-01 [SFBG + 07]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3">Summary</head><p>This chapter has presented our solution to those aspects related to the re-engineering of lexica for building ontologies. This solution addresses some of the limitations identified in the state of art in this area. First, the chapter reviews the definition of a lexicon, including its components. Then, it provides a formal definition for the lexicon, the identified data models, and implementations for them. Finally, it presents the patterns for re-engineering lexica into ontologies, including those for the TBox and ABox transformation approaches. The time complexity of the TBox transformation algorithm is polynomial O(n 2 ), whereas that of the ABox transformation algorithm is linear O(n). This set of patterns are used within the method presented in Chapter 6.</p><p>The solutions here presented cover contribution C9, which partially addresses objective O3 (see Chapter 3). This contribution is evaluated in Sections 11.1.1 and 11.2.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Chapter 10 TECHNOLOGICAL SUPPORT</head><p>Our technological support consists in the implementation of (i) NOR 2 O, a software library that implements the transformation process suggested by the patterns, and (ii) a PR-NOR pattern library that includes the set of patterns for re-engineering non-ontological resources. Our pattern library is available at the ODP portal. In this section we start by presenting the software library (section 10.1) followed by the re-engineering patterns library (section 10.2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.1">NOR 2 O</head><p>This section presents NOR 2 O, a Java library that implements the transformation process suggested by the Patterns for Re-engineering Non-ontological Resources (PR-NOR), which are described in Chapters 7, 8 and 9. The library performs the ETL process<ref type="foot" target="#foot_93">1</ref> for transforming the non-ontological resource components into ontology terms. A high level conceptual architecture diagram of the modules involved is shown in Figure <ref type="figure" target="#fig_60">10</ref>.1.</p><p>Figure <ref type="figure" target="#fig_60">10</ref>.1 depicts the modules of the PR-NOR software library: NOR Connector, Transformer, Semantic Relation Disambiguator, External Resource Service, and OR Connector. In the following sections these modules are described in detail. For illustrating the modules, the example of the transformation of the ASFA thesaurus<ref type="foot" target="#foot_94">2</ref> into an ontology schema<ref type="foot" target="#foot_95">3</ref> is provided.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.1.1">NOR Connector</head><p>The NOR Connector loads classification schemes, thesauri, and lexicons modelled with their corresponding data models, and implemented in databases, XML, flat files and spreadsheets.  Listing 10.1: NOR Connector configuration file example &lt;Nor t y p e =" C l a s s i f i c a t i o n Scheme " name=" c e p a 9 4 "&gt; &lt;Schema&gt; &lt;S c h e m a E n t i t i e s&gt; &lt;S c h e m a E n t i t y name=" CSItem "&gt; &lt; A t t r i b u t e name=" C S I d e n t i f i e r " v a l u e F r o m =" c e p a . CodeNumber " t y p e =" s t r i n g " /&gt; &lt; A t t r i b u t e name="CSName" v a l u e F r o m =" c e p a . D e s c r i p t i o n E n g l i s h " t y p e =" s t r i n g " /&gt; &lt;R e l a t i o n name=" subType " u s i n g =" P a t h E n u m e r a t i o n " d e s t i n a t i o n =" CSItem " /&gt; &lt;R e l a t i o n name=" s u p e r T y p e " u s i n g =" P a t h E n u m e r a t i o n " d e s t i n a t i o n =" CSItem " /&gt; &lt;/ S c h e m a E n t i t y&gt; &lt;/ S c h e m a E n t i t i e s&gt;  The Transformer also utilizes an XML configuration file, called prnor.xml, for describing the transformation between the NOR elements and the ontology elements. This XML configuration file has only one section, PRNOR, which includes the description of the transformation from the NOR schema components (e.g., schema entities, attributes and relations) into the ontology elements (e.g., classes, objectproperties, dataproperties and individuals). Additionally, it indicates the transformation approach, e.g., TBox, ABox or Population.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Semantic Relation Disambiguator</head><p>This module is in charge of obtaining the semantic relation between two NOR elements. Basically, the module receives two NOR elements from the Transformer module and returns the semantic relation between them. First the module verifies whether it can obtain the subClassOf relation by identifying attribute adjetives <ref type="foot" target="#foot_96">4</ref> within the two given elements of the resource. If this is not the case, then the module connects the external resource through the External Resource Service module to get the relation.</p><p>The TBox transformation approach converts the resource content into an ontology schema. To this end, each NOR term is mapped to a class, and then the semantics of the relations among those entities is made explicit. Thus, patterns that follow the TBox transformation approach must make explicit the semantics of the relations among the NOR terms. To perform this task we rely on WordNet, which organizes the lexical information into meanings (senses) and synsets.</p><p>Algorithm 1, presented in Section 6.4, describes how to make explicit the semantics of the relations in the NOR terms.</p><p>It is worth mentioning that, when asserting the partOf relation the algorithm takes advantage of the use of the PartOf content pattern<ref type="foot" target="#foot_97">5</ref> to guarantee that the OWL code generated follows common practices in Ontological Engineering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.1.4">External Resource Service</head><p>The External Resource Service is in charge of interacting with external resources for obtaining the semantic relations between two NOR elements. At this CHAPTER 10. TECHNOLOGICAL SUPPORT moment the module interacts with WordNet. We are now implementing the access to DBpedia<ref type="foot" target="#foot_98">6</ref> because of the reasons explained in Section 6.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.1.5">OR Connector</head><p>The Ontological Resource (OR) Connector generates the ontology in OWL Lite. To this end, this module relies on the OWL API <ref type="foot" target="#foot_99">7</ref> . It also utilizes an XML configuration file for describing the ontology to be generated. Figure <ref type="figure" target="#fig_60">10</ref>.4 shows the graphical representation of the OR connector XSD file. The XML configuration file has only one section, OR, which includes the descriptions of the name, the URI, the file, and the implementation language of the ontology. Additionally, and in the case we want to populate an available ontology, this section indicates if the ontology already exists. Finally, this module includes the provenance information of the non-ontological resource and uses the NoRMV metadata vocabulary, described in Section 5.2. An example of the XML configuration file is shown in Listing 10.4. The Figure indicates that the ontology generated will be stored in the asfa.owl file, that its name will be asfa ontology, and that it will be implemented in OWL.</p><p>Listing 10.4: OR Connector configuration file example &lt;Or name=" a s f a o n t o l o g y " o n t o l o g y U R I =" h t t p : / / m c c a r t h y . d i a . f i . upm . e s / o n t o l o g i e s / a s f a . owl " o n t o l o g y F i l e =" a s f a . owl " i m p l e m e n t a t i o n ="OWL" a l r e a d y E x i s t =" no " s e p a r a t o r =" # "&gt; &lt;/ Or&gt; Finally, to conclude the description of the software library, it is worth mentioning that the implementation of this library follows a modular approach; therefore, it is possible to extend it and include other types of NORs, data models, and implementations in a simple way, as well as to exploit other external resources for making explicit the hidden semantics in the relations of the NOR terms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.2.">PR-NOR LIBRARY AT THE ODP PORTAL</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.2">PR-NOR Library at the ODP Portal</head><p>Ontologydesignpatterns.org (hereafter ODP Portal) is a Semantic Web portal dedicated to ontology design best practices for the Semantic Web, with a particular focus on ODPs. The ODP Portal software is based on Media Wiki<ref type="foot" target="#foot_100">8</ref> , Semantic Media Wiki (SMW) <ref type="foot" target="#foot_101">9</ref> , Semantic Forms (SF) <ref type="foot" target="#foot_102">10</ref> , and other extensions <ref type="foot" target="#foot_103">11</ref> . This portal is maintained by the Semantic Technology Laboratory <ref type="foot" target="#foot_104">12</ref> at the Consiglio Nazionale delle Ricerche, in Rome, Italy. The ODP Portal is targeted at users interested in best practices for ontology design and ontology engineering. ODPs encode ontology engineering best practices to design high-quality ontologies. Currently the ODP portal supports the lifecycle of the following ODP types: Content ODPs, Re-engineering ODPs, Alignment ODPs, Logical ODPs, Architectural ODPs, and Lexico-syntatic ODPs.</p><p>The PR-NORs proposed in this thesis fit in the Re-engineering ODPs category available in the ODP Portal. Figure <ref type="figure" target="#fig_60">10</ref>.5 shows a screenshot of the list of Reengineering ODPs included in the ODP Portal. Also included in the portal are the overall set of patterns described in Chapters 7, 8, and 9. One of the goals of the PR-NOR Library is to become a community-accepted re-engineering pattern library for transforming resources into ontologies. Table <ref type="table">10</ref>.1 shows the total number of access to the three most visited patterns during a period of 12 months starting in October 2009.</p><p>The most visited patterns are (1) the pattern for re-engineering a classification scheme following the adjacency list data model into an ontology schema (PR-NOR-CLTX-02); (2) the pattern for re-engineering a thesaurus following the recordbased data model into an ontology schema (PR-NOR-TSTX-01); and (3) the pattern for re-engineering a classification scheme following the path enumeration data model into an ontology schema (PR-NOR-CLTX-01).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.3">Summary</head><p>This chapter has presented the solution we provide for the aspects related to the technologial support for re-engineering non-ontological resources into ontologies. It has also addressesed some of the limitations identified in the state of art in this area.</p><p>Regarding the goals and contributions presented in Section 3.1 and Section 3.2 respectively, Section 10.1 presents the NOR 2 O (part of contribution C10, which addresses objective O4) and section 10.2 presents the PR-NOR library included in the ODP portal (part of contributions C7,C8, and C9, which address objective O3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.">EVALUATION OF THE METHODOLOGICAL GUIDELINES</head><p>• The "Ontologies and Semantic Web" course within the "Athens Programme", delivered at the Facultad de Informática (UPM). Fourteen international participants attended the course.</p><p>• The "Ontologies and Semantic Web" course within the "Information Technology" Master, delivered at the Facultad de Informática (UPM). Twenty Spanish participants attended the Master course.</p><p>The participants had to build manually a conceptual model from a particular resource, analysing the methodological guidelines and the set of patterns. They had 30 minutes for generating the conceptual model and had to work on an excerpt of twenty terms of the ETT thesaurus<ref type="foot" target="#foot_107">3</ref> .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.1.2">Execution</head><p>The experiment was executed in four phases:</p><p>1. The participants were provided with the proposed guidelines.</p><p>2. The participants were organized in groups of two.</p><p>3. The groups analysed the methodological guidelines and the set of patterns in order to carry out the NOR re-engineering process. They generated manually a conceptual model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head><p>The participants filled in a questionnaire.</p><p>Next, we show the tasks performed within Phase 3 to generate the conceptual model from the excerpt of the resource.</p><p>NOR Reverse Engineering. Within this activity the student groups gathered documentation about the thesaurus from the ETT web site. From this documentation they extracted the schema of the thesaurus. Since the data model was not available in the documentation, they extracted it for the resource implementation itself. The groups soon found out that they were dealing with a thesaurus modelled following the record-based data model and implemented in XML.</p><p>NOR Transformation. Within this activity the groups searched the ODP portal for a suitable PR-NOR, taking into account the following criteria: (1) the resource type: thesaurus; (2) the resource data model: record-based model; and (3) the selected transformation approach: the TBox transformation. Then thet chose as the most appropriate pattern the PR-NOR-TSTX-01, selected by all the participants. Finally, all the groups followed the procedure suggested by the pattern for creating the conceptual model manually. Each thesaurus term was mapped to a class. For making explicit the semantics of the BT, NT relations among thesaurus terms, the participants checked whether they could get the subClassOf relation by identifying attribute adjetives <ref type="foot" target="#foot_108">4</ref> . If they could not, they searched the WordNet web site. When In order to evaluate the understandability, applicability and usability of the methodological contributions related to the reuse and re-engineering of NORS in a complex ontology engineering setting, we conducted an experiment in a real case scenario within the SEEMP Project.</p><p>The main objective of this project was to develop an interoperable architecture for public e-Employment services (PES). The resultant architecture consisted of (1) a Reference Ontology, the core component of the system, that acts as a common "language" in the form of a set of controlled vocabularies that describes the details of a job posting; (2) a set of Local Ontologies, each PES uses its own Local Ontology, which describes the employment market in its own terms; (3) a set of mappings between each Local Ontology and the Reference Ontology; and (4) a set of mappings between the PES schema sources and the Local Ontologies.</p><p>In the following sections we describe the application of our methodological guidelines for reusing and re-engineering non-ontological resources when building an occupation ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.2.1">Reusing non-ontological resources</head><p>This section presents the application of the Method for Reusing Non-Ontological Resources within the SEEMP project. It shows the process we followed for selecting the non-ontological resources to be reused when building the occupation domain ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 1. Search non-ontological resources</head><p>Following the suggestions of some domain experts, we searched for the occupation classifications at (1) the Ramon Eurostat Portal<ref type="foot" target="#foot_109">5</ref> , (2) the ONET Web site<ref type="foot" target="#foot_110">6</ref> , and (3) the companies the project partners. Thus, we found the following classifications:</p><p>• Standard Occupational Classification System (SOC).</p><p>• International Standard Classification of Occupations (ISCO-88).</p><p>• International Standard Classification of Occupations, for European Union purposes, ISCO-88 (COM).</p><p>• Occupational Information Network (ONET).</p><p>• EURES<ref type="foot" target="#foot_111">7</ref> proprietary occupation classification. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 2. Non-ontological resource transformation</head><p>Within this activity we carried out the following tasks:</p><p>1. We identified the transformation approach, the TBox transformation, i.e., transforming the resource content into an ontology schema.</p><p>2. Then, we searched our local pattern repository for a suitable pattern to reengineer NORs, taking into account the transformation approach (TBox transformation), the non-ontological resource type (classification scheme), and the data model (snowflake data model) of the resource.</p><p>3. The most appropriate pattern found for this case was the PR-NOR-CLTX-03 pattern. This pattern takes as input a classification scheme modelled with a snowflake data model and produces an ontology schema.</p><p>Activity 3. Ontology forward engineering WSML 8 is the ontology implementation language used in the SEEMP project. Because of the number of occupations of the EURES classification, it was not ence Ontology is available at http://oeg-upm.net/index.php/en/ontologies/ 99-hrmontology. In order to illustrate the dimension of the ontology and the ontological engineers' efforts required to build it, some statistical data are shown in Table <ref type="table" target="#tab_34">11</ref>.6. Our experience in SEEMP has served us to demonstrate that the approach of building ontologies by reusing and re-engineering non-ontological resources already agreed upon allows building ontologies faster, with less resources, and with an immediate consensus. This approach permits making explicit the knowledge implicitly coded in organization models and standards. By building ontologies in this fashion, we facilitate that ontologies become reference ontologies in their respective domains.</p><p>With respect to the application of the Method for Reuse and Re-engineering, this was especially useful for guiding the steps of the ontological engineers in-11.1. EVALUATION OF THE METHODOLOGICAL GUIDELINES volved since this method provides detailed and sufficient guidelines. In addition, the existence of a well-defined and structured process for building the ontology network in the e-employment domain eased the planning, coordination and communication with other non-Semantic Web members of the development team, which in turn helped to convey reliability to the final result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.3">Understandability, Applicability and Usability of the Method within the mIO! Project</head><p>The evaluation of the understandability, applicability and usability of the methodological contributions for reusing and re-engineering NORs, including the PR-NOR library, were also validated in an experiment in a real case scenario within the context of the mIO! Spanish project <ref type="foot" target="#foot_113">9</ref> .</p><p>The main objective of the mIO! project is to develop ubiquitous services in an intelligent environment, adapted to every user and its context by means of mobile interfaces. The project relies on ontologies for modelling the knowledge.</p><p>The following sections describe the application of our methodological guidelines for reusing and re-engineering non-ontological resources when building a geographical ontology, which includes continents, countries, and regions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.3.1">Reusing non-ontological resources</head><p>This section describes the activities carried out for reusing non-ontological resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 1. Search non-ontological resources</head><p>Following some of the suggestions made by the domain experts, we searched geographical location resources on highly reliable Websites. Next, we list the geographic location classifications:</p><p>• ISO 3166 <ref type="foot" target="#foot_114">10</ref> Maintenance agency (ISO 3166/MA) ISO's focal point for country codes.</p><p>• Guide to regions of the World  </p><formula xml:id="formula_27">• ISO3166 = 195∩K K = 195 K • Guidetoregionsof theW orld = 102∩K K = 102 K • Regionsof theW orld = 110∩K K = 110 K Task 2.</formula><p>4 Evaluate the consensus It was important for the project that resources focused on the current worldwide reality, because the outcoming prototype will be validated by users. Thus, domain experts evaluated whether the resource was built with the consensus of the worldwide community or not. They confirmed that ISO 3166 has the full consensus of the community, whereas the other resources have not.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Task 2.5 Evaluate the quality</head><p>In this case, domain experts evaluated whether the resource was built with an acceptable level of quality. They confirmed that ISO 3166 has an acceptable level of quality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.">EVALUATION OF THE METHODOLOGICAL GUIDELINES</head><p>Task 2.6 Build the assessment table <ref type="table" target="#tab_42">Table 11</ref>.7 summarizes all the information related to each non-ontological resource. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.3.2">Re-engineering non-ontological resources</head><p>This section presents the application of the Method for Re-engineering Non-Ontological Resources within the mIO! project. Once we have the non-ontological resource selected, the ISO 3166, we had to transform it into an ontology. Next, we describe the process of generating a Geographical Location Ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 1. Non-ontological resource reverse engineering</head><p>In this activity we gathered documentation about ISO 3166 from its website. From this documentation we extracted the schema of the classification scheme, which consists of one entity ISO 31661 Entry. Since the data model was not available in the documentation, it was necessary to extract it for the resource implementation itself. ISO 3166 is modelled following the snowflake data model and implemented in XML.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 2. Non-ontological resource transformation</head><p>In this activity we carried out the following tasks:</p><p>1. We identified the transformation approach, the ABox transformation, i.e., the transformation of the resource schema into an ontology schema, and the resource content into ontology instances.</p><p>2. Then we searched our local pattern repository for a suitable pattern to reengineer NORs, taking into account the transformation approach (ABox transformation), the non-ontological resource type (classification scheme), and the data model (snowflake data model) of the resource.</p><p>3. The most appropriate pattern for this case is the PR-NOR-CLAX-12 pattern. This pattern takes as input a classification scheme modelled with a snowflake data model.</p><p>4. Finally, we followed the procedure defined by the pattern selected for transforming the resource components into ontology elements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 3. Ontology forward engineering</head><p>In this activity we formalized and implemented the ontology in OWL. The ontology is available at http://mccarthy.dia.fi.upm.es/ontologies/.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.3.3">Analysis of the applicability of the method</head><p>The network of ontologies of the mIO! project was developed following the NeOn Methodology <ref type="bibr" target="#b138">[SF10]</ref>. This ontology is composed of eleven modular ontologies: Provider, Service, Source, Geographical Location, Environment, Time, Device, User, Network, Interface, and Role. Only the geographical location ontology was built according to the method for reusing and re-engineering non-ontological resources. The other ontologies were built by reusing available ontologies or modules.</p><p>Figure <ref type="figure" target="#fig_1">11</ref>.2 presents the mIO! ontology network and includes the location subontology. The ontology network is available at http://oeg-upm.net/index. php/en/ontologies/82-mio-ontologies</p><p>In order to illustrate the dimension of the ontology and the efforts required by the ontological engineers to build it, we outline some data in Table <ref type="table" target="#tab_34">11</ref>.8. Our experience in mIO! has served us to demonstrate that the approach of building ontologies by reuse and re-engineering non-ontological resources already agreed-upon allows building ontologies faster, with less resources, and with consensus. With respect to the application of the Method for Reuse and Re-engineering, this was especially useful for guiding the steps of the ontological engineers involved since the method provides detailed and sufficient guidelines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.4">Summary</head><p>As a conclusion of this section we can state that the experiment (Section 11.1.1), and the application of the methodological guidelines within the SEEMP and mIO! projects (Sections 11.1.2 and 11.1.3) verify hypothesis H1, that is, the reuse of non-ontologi-cal resources that have reached some degree of consensus in a community permits the development of ontologies in an easier and quicker fashion; hypothesis H2, that is possible to define a unified method for transforming nonontological resources into ontologies independently (1) of the type, data model, or implementation of the resource, and (2) of the target ontology to be generated, i.e., ontology schema (TBox), ontology (TBox+ABox), or ontology instances (ABox); and hypothesis H4, that the set of patterns for re-engineering are independent of the domain of the resources, that is, the patterns can be used to build ontologies in different domains. Furthermore, this method is really valuable for guiding engineers that do not have any previous experience in building a huge ontology network, especially if the network needs to be solidly grounded in NORs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2">Evaluation of the Technological Support</head><p>This section presents three experiments. The first one was conducted with the objective of evaluating the quality of the PR-NOR patterns and the NOR 2 O software library by measuring the similarity of the ontologies generated against gold standard ontologies. The second experiment was carried out for evaluating the usability of the software library. Finally, the third experiment was presented in a real case scenario within the GeoLinkedData Project<ref type="foot" target="#foot_118">14</ref> , in which the applicability and usability of the software library is evaluated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.1">Quality Evaluation of the Patterns and NOR 2 O</head><p>The goal of this study is to evaluate the quality of the re-engineering patterns and NOR 2 O software library by measuring the similarity of the ontologies generated against gold standard ontologies. The ontology generated is compared against a reference ontology (or gold standard) built manually by external ontology experts not involved in the experiment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.1.1">Settings</head><p>For this experiment, two ontology engineering experts built five excerpts of ontologies in OWL from available NORs (two classification schemes, two thesauri and one lexicon) of different domains. One expert built two ontologies and the other built three ontologies. Then, the experts exchanged their ontologies in order to evaluate them. Later, the experts refined the ontologies by following the comments provided in the review. At the end of the process we had five "gold standard" ontologies<ref type="foot" target="#foot_119">15</ref> . It is worth mentioning that the ontologies cover an excerpt of the resources. Table <ref type="table" target="#tab_34">11</ref>.9 shows the resources utilized in this experiment: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.1.2">Execution</head><p>The experiment was executed in the three phases:</p><p>1. Each NOR was transformed automatically with the following patterns:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.">EVALUATION OF THE TECHNOLOGICAL SUPPORT</head><p>• ASFA, with the PR-NOR-TSTX-01 pattern.</p><p>• ETT, with the PR-NOR-TSTX-01 pattern.</p><p>• ACM, with the PR-NOR-CLTX-02 pattern.</p><p>• FOET, with the PR-NOR-CLTX-01 pattern.</p><p>• BioLexicon, with the PR-NOR-LXTX-02 pattern.</p><p>2. For disambiguating the relations between entities of a particular resource we executed the disambiguation algorithm with WordNet.</p><p>3. In order to assess the quality of the ontologies generated, we compared the "gold standard" ontologies with the excerpts of the five ontologies generated automatically by means of similarity measures based on (1) the Cider System <ref type="bibr" target="#b98">[Gra09]</ref>, which considers the structure of the ontologies, that is, classes, object properties and datatype properties; and (2) the StrucSubsDistAlignment measure taken from the Ontology Alignment Evaluation Initiative<ref type="foot" target="#foot_120">16</ref> , which contemplates the structure of the ontologies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.1.3">Collecting results</head><p>We built a table for comparing, by means of the similarity measures, each of the "Gold Standard" ontologies with the ontologies generated. Table <ref type="table" target="#tab_34">11</ref>.10 presents the similarity values of every ontology generated. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.1.4">Finding and observations</head><p>We can state that the ontologies generated have an acceptable similarity degree when compared to the gold standard ones.</p><p>Based on the results obtained, we can say that the main strength of the NOR 2 O software library and patterns is that they generate ontologies with an acceptable level of quality, meaning by quality the similarity of the ontologies to the gold standard ones.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.2">Usability Evaluation of the Software Library</head><p>This reported study refers to the evaluation of the usability of the NOR 2 O software library in the context of the development of ontologies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.2.1">Settings</head><p>We performed this user study with the same participants involved in the Master Course (see Section 11.1.1). For the study we employed a classification scheme and a thesaurus.</p><p>User study 1: Usability of NOR 2 O for building an ontology with a classification scheme. The classification scheme of this experiment was the Classification of Environmental Protection Activities (CEPA-94<ref type="foot" target="#foot_121">17</ref> ), which has 72 terms and is implemented in a database. For this study we extracted an excerpt of 15 terms<ref type="foot" target="#foot_122">18</ref> .</p><p>User study 2: Usability of NOR 2 O for building an ontology with a thesaurus. The resource used was the ETT thesaurus, which has 2522 terms and is implemented in an XML file. In this study we extracted an excerpt of 21 terms <ref type="foot" target="#foot_123">19</ref> .</p><p>Thus, we conducted two experiments following the Software Usability Measurement Inventory (SUMI) method <ref type="bibr" target="#b119">[KC93]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.2.2">Execution</head><p>The investigators met with all the participants for 10 minutes and explained the purpose of the evaluation session; then they presented the methodology of SUMI evaluation. Then, the participants had 20 minutes to test the NOR 2 O software library, and 10 minutes to fill in the SUMI questionnaire on user-interaction satisfaction. During these two phases the participants were not allowed to ask questions to the investigators. The questionnaire was designed to measure the affect, efficiency, learnability, helpfulness and control <ref type="bibr" target="#b79">[DR93]</ref>. SUMI is also mentioned in the ISO 9241 standard as a recognized method for testing user satisfaction [(IS98].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.2.3">Collecting results</head><p>The SUMI questionnaire includes 50 items with three responses each ("agree", "undecided", "disagree") and the user had to select one of the three responses for each item.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.2.4">Findings and observations</head><p>As a general conclusion we can say that the results of the evaluation were positive. The analysis of the results of the experiment conducted reveals some very positive features of the NOR 2 O software library; it also points out some issues that  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Efficiency</head><p>This dimension obtained the higher value; therefore, we believe that the evaluation of the efficiency of the NOR 2 O software library is satisfactory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Affect</head><p>The affect dimension measures the user's general emotional reaction to the software and may be glossed as Likeability. The item regarding this dimension that most contributed to 10.5% of disagreement in the user's general reaction to the software was: "I feel safer if I use only a few familiar commands or operations". This is one of the aspects of the NOR 2 O software library we should improve, if we want all the funcionalities to be perceived with the same degree of positiveness by the users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Helpfulness</head><p>Fifty-five and one half percent of the users believe that the software is selfexplanatory (helpful). Moreover, we found that the item that more contributed to 32.5% of indecision was: "This software is awkward when I want to do something not standard". This means that the majority of the users did not need to find alternative options to perform the actions available in the software library.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Control</head><p>The global control was calculated as the average of the 10 SUMI questions for this dimension. We consider that the evaluation of this dimension is satisfactory, because we only obtained 9.5% of disagreement. In the same sense, 33.5% of indecision corresponds to aspects that did not appear in the software, such as "The software allows the user to be economic of keystrokes", which is positive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Learnability</head><p>This dimension obtained the lowest value; therefore, we should improve this aspect of the NOR 2 O software library if we want to increase the speed and facility with which the users learn how to use new features when necessary.</p><p>Considering the comments obtained in the experiment, we can state that its main strength is that the majority of students found NOR 2 O useful and understandable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.3">Applicability and Usability of NOR 2 O within the GeoLinked-Data Project</head><p>In order to evaluate the applicability and usability of the NOR 2 O software library, we conducted an experiment in a real case scenario within the GeoLinkedData Project<ref type="foot" target="#foot_124">20</ref> .</p><p>GeoLinkedData is an open initiative whose aim is to enrich the Web of Data <ref type="bibr" target="#b64">[Biz09]</ref> with Spanish geospatial data. This initiative started off by publishing diverse information sources belonging to the National Geographic Institute of Spain. Such sources are made available as RDF (Resource Description Framework) knowledge bases according to the Linked Data principles <ref type="bibr" target="#b64">[Biz09]</ref>. Within this project we have searched for open government information in two institutions (1) the National Geographic Institute of Spain (IGN), and (2) the National Statistics Institute of Spain (INE). The datasets selected from the INE are available as Excel spreadsheets and these were the following: Population, Unemployment, Building Trade, Dwelling, and Industry.</p><p>In the process of linked data generation from the INE datasets, we had to create RDF instances of the Statistical Core Vocabulary (SCOVO) [HHR + 09]. Thus, basically we had to perform a Population from the INE datasets of the SCOVO vocabulary. This vocabulary provides an expressive modelling framework for statistical information, and has been used in a variety of applications that requires the representation of statistical information. The vocabulary is currently defined in RDF(S).</p><p>In the following sections we describe how to apply NOR 2 O for generating RDF instances of SCOVO vocabulary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.3.1">Performing a Population of RDF instances of SCOVO vocabulary</head><p>Once we had the INE datasets selected, we had to transform them into ontology instances. Next, we describe the process of generating RDF instances of SCOVO 11.2. EVALUATION OF THE TECHNOLOGICAL SUPPORT vocabulary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 1. Non-ontological resource reverse engineering</head><p>In this activity we gathered documentation about the INE datasets. From this documentation we realized that resources are a set of bi-dimensional tables in which we have (1) the location in one dimension, (2) the time line in the other, and (3) the set of values of a particular variable. Finally, we realized that INE datasets are stored in Excel spreadsheets. <ref type="bibr">Figure 11.4</ref> shows an example of the Industry Production Index.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 2. Non-ontological resource transformation</head><p>In this activity we carried out the following tasks:</p><p>1. We identified the transformation approach, Population, i.e., transforming the resource content into ontology instances.</p><p>2. Then, we searched our local pattern repository for a suitable pattern to reengineer NORs, taking into account the transformation approach (Population) and the non-ontological resource type (bi-dimensional tables).</p><p>3. As we did not find any suitable pattern for the INE datasets; we had to perform an ad-hoc transformation. Thanks to the modular approach of NOR 2 O, it was easy to extend the software library and include the new non-ontological resource.</p><p>4. After the enhancement of the library, we performed the transformation of the INE datasets automatically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 3. Ontology forward engineering</head><p>We relied on the NOR 2 O software library for generating the ontology instances automatically.</p><p>Figure <ref type="figure" target="#fig_1">11</ref>.4 illustrates the transformation process from the Excel spreadsheet data to the RDF instances. On the left side we can see the spreadsheet and data that represents the Industry Production Index of Spanish provinces over the years. On the right side we have the nor.xml configuration file that describes the information stored in the spreadsheets. The configuration file describes the information from the spreadsheet: province, year, and the industry production index. Then, the NOR 2 O software library, with all this information, generates the RDF instances.</p><p>Our experience in GeoLinkedData has served us to demonstrate that</p><p>• The method for re-engineering can be applied even though we did not find a suitable pattern for the transformation.</p><p>• The re-engineering patterns are extensible to other types of resources, and subsequently NOR 2 O can be extended as well.</p><p>• The NOR 2 O software library is easy to use in other projects. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.2.4">Summary</head><p>As a conclusion we can state that the set of experiments carried out in this section, verifies (1) hypothesis H5, the re-engineering patterns proposed can be implemented in a software library that facilitates the work of ontology engineers when developing ontologies; (2) hypothesis H3, the method for re-engineering nonontological resources is extensible and adaptable to other types of resources. The method can be applied to any kind of non-ontological resource independently of its type, data model or implementation; and (3) hypothesis H4, it is possible to create patterns for re-engineering that allow generating ontologies from available nonontological resources; these re-engineering patterns are extensible to other types of resources besides classification schemes, thesauri or lexica.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.3">Evaluation Summary</head><p>This chapter has presented the evaluation of this thesis contributions through a set of experiments. The evaluation of the method proposed, and its technological support, provides positive evidence of the set of hypotheses introduced in Section 3. Chapter 12</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONCLUSIONS AND FUTURE WORK</head><p>This thesis is focused on the reuse and possible subsequent re-engineering of knowledge resources, as opposed to the custom-building of new ontologies from scratch.</p><p>A deep analysis of the state of the art has revealed that there are some methods and tools for transforming non-ontological resources into ontologies, but that they have some limitations, namely,</p><p>• Most of the methods presented are based on ad-hoc transformations for the resource type and the resource implementation.</p><p>• Only a few methods take advantage of the resource data model, an important artefact for the re-engineering process <ref type="bibr" target="#b89">[GGPSFVT08]</ref>.</p><p>• No integrated framework, method or corresponding tool considers the resources types, data models and implementations identified in a unified way.</p><p>• With regard to the transformation approach, most of the methods perform a TBox transformation, some perform an ABox transformation and just a few perform a population. However, no method includes the possibility to perform the three transformations.</p><p>• Regarding the degree of automation, almost all the methods perform a semiautomatic transformation of the resource.</p><p>• Regarding to the explicitation of the hidden semantics in the relations of the resource components, we can state that the methods that perform a TBox transformation make explicit the semantics of the relations of the resource components. Most of the methods identify subClassOf relations, others identify ad-hoc relations, and some identify partOf relations. However, only a few methods make explicit the three types of relations.</p><p>• With respect to how the methods make explicit the hidden semantics in the relations of the resource terms, we can say that three methods rely on the domain expert for making explicit the semantics, and two rely on an external resource, e.g., DOLCE ontology. Moreover, there are two methods that rely on external resources but not for making explicit the hidden semantics, but for finding out a proper ontology for populating it.</p><p>• As for to the provision of the methodological guidelines, almost all the methods provide methodological guidelines for the transformation. However these guidelines are not finely detailed; for instance, they do not provide information about who is in charge of performing a particular activity/task, nor when that activity/task has to be carried out.</p><p>• With regard to the techniques employed, most of the methods do not mention them at all. Only a few methods specify techniques as transformation rules, lexico-syntactic patterns, mapping rules and natural language techniques.</p><p>In this thesis we have provided a method and its technological support that rely on re-engineering patterns in order to speed up the ontology development process by reusing and re-engineering as much as possible available non-ontological resources. To achieve this overall goal, we have decomposed it in the following objectives: (1) the definition of methodological aspects related to the reuse of nonontolo-gical resources for building ontologies; (2) the definition of methodological aspects related to the re-engineering of non-ontological resources for building ontologies; (3) the creation of a library of patterns for re-engineering non-ontological resources into ontologies; and (4) the development of a software library that implements the suggestions provided by the re-engineering patterns.</p><p>Having in mind these goals, in this chapter we present how the open research problems identified in Chapter 2 are solved. Then, we discuss the verification of our hypotheses, and finally we provide an outlook for the future lines of work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="12.1">Review of the Contributions</head><p>This section reviews the main contributions of this thesis and how we solved the open research problems.</p><p>• Up to the writing of this thesis no definition of non-ontological resources could be found. Moreover, an analysis of the literature has revealed that there are different ways of categorizing NORs, though an accepted and agreed upon typology of NORs does not exist yet. To address the previous limitations, we have introduced the definition of non-ontological resource and proposed a categorization of them according to three different features: type of non-ontological resource, data model and implementation. This categorization is neither exhaustive nor complete. Currently, we are enriching it by CHAPTER 12. CONCLUSIONS AND FUTURE WORK abstraction levels that define the activities in ontology engineering: specification, conceptualization, formalization, and implementation.</p><p>• The methods available for converting non-ontological resources into ontologies do not provide detailed guidelines for the transformation. Thus, to address this limitation we have proposed a method for re-engineering non-ontological resources by means of patterns. Our method tries to solve the problem of not having detailed guidelines on how to transform nonontological resources into ontologies. The method, presented in Chapter 6, relies on the use of patterns guiding the transformation, although, the software library can also be used for generating the ontology automatically.</p><p>• The methods for the conversion of non-ontological resources into ontologies do not provide the techniques employed nor do they reuse good practices for the transformation. To overcome this limitation, we propose a set of patterns. These patterns for transforming non-ontological resources into ontologies has several advantages: (1) they include expertise in how to guide a re-engineering process, (2) they improve the efficiency of the re-engineering process, and (3) they make the transformation process easier for ontology engineers.</p><p>According to the NOR categorization presented in Chapter 5, in this thesis we propose patterns for re-engineering classification schemes (Chapter 7), thesauri (Chapter 8), and lexicons (Chapter 9). The set of patterns are included in the the ODP Portal<ref type="foot" target="#foot_127">3</ref> as a PR-NOR library. One of the goals of the PR-NOR library is to become a community-accepted re-engineering pattern library for transforming resources into ontologies. The PR-NOR library includes the three transformation approaches (TBox, ABox and Population). Moreover, the patterns that perform the TBox transformation approach make explicit the hidden semantics in the relations of the NOR terms, by means of external resources, e.g., WordNet.</p><p>• The tools that transform non-ontological resources into ontologies do not cover the three transformation approaches (TBox, ABox, and Population) nor the non-ontological resource types identified, among other features. Within this thesis we have developed a software library, NOR 2 O, that implements the transformation suggested by the patterns. This software library tries to solve the lack of technological support for an integrated method that takes into account the different types of NORs and their internal data models and implementations in an uniform way. The NOR 2 O software library, presented in Chapter 10, is a Java library that performs an ETL process <ref type="foot" target="#foot_128">4</ref> for transforming the non-ontological resource terms into ontology elements. The implementation of NOR 2 O follows a modular approach; therefore, it is possible With respect to the transformation of the resources (see Table <ref type="table" target="#tab_44">12</ref>.3), our method (1) performs the three transformation approaches (TBox, ABox and population);</p><p>(2) considers the syntactic and semantic transformation aspects; (3) contemplates the generation subClassOf and partOf relations; (4) relies on WordNet as external resource for discovering the hidden semantics of the NOR terms; (5) depends on re-engineering patterns for generating ontologies from the resources; and (6) is supported by the NOR 2 O software library.</p><p>As for the ontologies generated (see Table <ref type="table" target="#tab_44">12</ref>.4), our method generates (1) classes, attributes, relations, and instances; and (2) single ontologies implemented in OWL Lite/RDF. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="12.2.">HYPOTHESES VERIFICATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="12.2">Hypotheses Verification</head><p>We have verified the hypotheses of this thesis by different means:</p><p>• Within the evaluation of the methodological guidelines, an analysis of the results of the experiments, described in Sections 11.1, 11.1.2, and 11.1.3 some very positive features. For example, -The results of the understandability, applicability and usability of the methodological guidelines indicate that the method is specially useful for guiding the ontological engineers. Moreover, the method allows building ontologies faster and with fewer resources (hypothesis H1). -It is possible to define a unified method for transforming non-ontological resources into ontologies independently (1) of the type, data model or implementation of the resource, and (1) of the target ontology, TBox, TBox+ABox, or ABox (hypothesis H2). -The set of re-engineering patterns are independent of the domain of the resources; in other words, the patterns can be used to develop ontologies in different domains, e.g., occupation, geographical location, education and training (hypothesis H4).</p><p>• Within the evaluation of the technological support, the analysis of the results of the experiments, described in Sections 11.2.1, 11.2.2, and 11.2.3 shows also very positive features. For example, -The method for re-engineering non-ontological resources is extensible and adaptable to other types of resources, e.g., bidimensional tables (hypothesis H3). -Re-engineering patterns generate ontologies from available non-ontological resources independently of (1) how they have been implemented</p><p>(databases, XML); (2) the target ontology to be generated (TBox, TBox+ABox, or ABox); (3) the domain of the resource (statistical, occupation, eduaction, etc.); and (4) its being extended to other type of resources (hypothesis H4).</p><p>-NOR 2 O, the software library that implements the suggestions given by the patterns, facilitates the work of ontology engineers (hypothesis H5).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="12.3">Future Work</head><p>In this thesis we have tackled many open research problems within the context of the reuse and re-engineering of non-ontological resources for building ontologies but there are still open issues to resolve or extensions to implement in the near future. We would like to mention some of the most important from our perspective:</p><p>• The improvement of the process of reusing non-ontological resources with the creation of a registry of non-ontological resources that have reached some consensus in a community. The NORs would be annotated by means of NoRMV, described in Chapter 5, thus it would be easy to identify, find and reuse NORs effectively and efficiently.</p><p>• Regarding the process of re-engineering non-ontological resources, important features are -The building of richer ontologies by extending the taxonomic structures with disjoint knowledge.</p><p>-The inclusion in the re-engineering patterns of the support for transforming excerpts of the resource, and not the whole resource.</p><p>-The inclusion of the support of more non-ontological resource types, data models and implementations, as well as additional external resources like DBpedia for making explicit the semantics on the relations of the NOR terms.</p><p>-The generation of GoodRelations-compliant ontologies for product types and product features. GoodRelations<ref type="foot" target="#foot_129">5</ref> is a standardized vocabulary for product, price and company data that (1) can be embedded into existing static and dynamic Web pages and (2) can be processed by other computers.</p><p>• The consideration of multilingual non-ontological resources for building multilingual ontologies. This would require the identification of how the multilingual information is represented in the non-ontological resources and the definition of a linguistic model for expressing the multilingual information 12.3. FUTURE WORK of the ontologies. Moreover, this feature would also imply that the patterns have to rely on additional knowledge resources, i.e., multilingual, monolingual resources, and background-knowledge resources.</p><p>• The consideration of the integration of different knowledge resources. It would be interesting to investigate on methodological guidelines for selecting, comparing and combining non-ontological resources, ontological resources, and ontology design patterns with the aim of building ontology networks.</p><p>• The evolution of the non-ontological resources. It would be good to analyse how to transform non-ontological resources that change along the time, and to identify how the frequency of changes affects the ontologization of that resource, and to propose incremental transformations.</p><p>• Linked Data has been recently suggested as one of the best alternatives for creating shared information spaces <ref type="bibr" target="#b64">[Biz09]</ref>. In the context of Linked Data the RDF language is used to describe resources in the form of triples. One extension of the work presented in this thesis is the generation of RDF data following the Linked Data principles. The NOR 2 O software library can be used for this purpose since the library already generates RDF instances. Some of the features to consider are -To include the generation of links from the RDF instances generated into RDF resources of RDF datasets presented in the LOD cloud<ref type="foot" target="#foot_130">6</ref> , -To follow best practices in the URI generation; for example, the Cool URI for the Semantic Web<ref type="foot" target="#foot_131">7</ref> ,</p><p>-To suggest available vocabularies to reuse, when modelling the ontology, taking into account the domain of the resources and using semantic web search engines, such as Sindice <ref type="foot" target="#foot_132">8</ref> .</p><p>The general goal of this thesis, i.e., the reuse and re-engineering of non-ontological resources for speeding up the ontology development process, is a core requirement for supporting and promoting the new paradigm of the reuse-based approach in ontology development. Thus, our results represent a step forward in the achievement of such a goal.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Comparison of the methods according to the NOR features . . . . 2.2 Comparison of the methods according to the reuse process features 2.3 Comparison of the methods according to the transformation process features . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.4 Comparison of the methods according to the ontology features . . 2.5 Comparison of the tools according to the NOR features . . . . . . 2.6 Comparison of the tools according to the transformation process features . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.7 Comparison of the tools according to the ontology features . . . . 3.1 Mapping between objectives and contributions with associated assumptions, hypotheses and restrictions . . . . . . . . . . . . . . . 5.1 Assessment table for the NORs . . . . . . . . . . . . . . . . . . . 6.1 Template of pattern for re-engineering non-ontological resource . 6.2 Set of patterns for re-engineering NORs . . . . . . . . . . . . . .7.1 Pattern for re-engineering a classification scheme following the path enumeration data model into an ontology schema. . . . . . . 7.2 Pattern for re-engineering a classification scheme following the adjacency list data model into an ontology schema . . . . . . . . . . 7.3 Pattern for re-engineering a classification scheme following the snowflake data model into an ontology schema. . . . . . . . . . . 7.4 Pattern for re-engineering a classification scheme following the flattened data model into an ontology schema. . . . . . . . . . . . 7.5 Pattern for re-engineering a classification scheme following the path enumeration data model into an ontology. . . . . . . . . . . . 7.6 Pattern for re-engineering a classification scheme following the adjacency list data model into an ontology. . . . . . . . . . . . . . . 7.7 Pattern for re-engineering a classification scheme following the snowflake data model into an ontology. . . . . . . . . . . . . . . . 7.8 Pattern for re-engineering a classification scheme following the flattened data model into an ontology. . . . . . . . . . . . . . . .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1</head><label>1</label><figDesc>Figure 1.1: Scenarios for building ontologies and ontology networks [SF10]</figDesc><graphic coords="27,93.92,127.26,384.00,288.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>B</head><label></label><figDesc>. Villazón-Terrazas, M. C. Suárez-Figueroa, and A. Gómez Pérez. "A Pattern-Based Method for Re-engineering Non-Ontological Resources into Ontologies". International Journal on Semantic Web and Information Systems (IJSWIS). Amit Sheth (Ed.) (Kno.e.sis Center, Wright State University, USA) Volume 7 (2010).Our contribution presented in Chapter 5 has been partially published in:• A. Gómez-Pérez, J.Ramírez and B. Villazón-Terrazas. "Reusing Human Resources Management Standards for Employment Services". Proceedings of the Workshop on First Industrial Results of Semantic Technologies, colocated with ISWC 2007 + ASWC 2007, Busan, Korea, November 11th, 2007. • A. Gómez-Pérez, J. Ramírez and B. Villazón-Terrazas "An Ontology for Modelling Human Resources Management based on standards". In: 11th International Conference on Knowledge-Based Intelligent Information &amp; Engineering Systems, 12-14 September, 2007, Vietri sul Mare, Italy. • A. Gómez-Pérez, J. Ramírez and B. Villazón-Terrazas. "Methodology for Reusing Human Resources Management Standards". In: 19th International Conference on Software Engineering and Knowledge Engineering, 9-11 July, 2007, Boston, USA. Some of the contributions of Chapters 6, 7, 8, 9, and 10 have been published in: • A. Garcia-Silva, A. Gómez-Pérez, M.C. Suárez-Figueroa, B. Villazón-Terrazas (2008). "A Pattern Based Approach for Reengineering Non-ontological Resources into Ontologies". In ASWC 08: Proceedings of the 3rd Asian Semantic Web Conference on the Semantic Web (pp. 167181). Berlin, Heidelberg : Springer-Verlag. Contributions of Chapter 10 have been published in: • B. Villazón-Terrazas, A. Gómez Pérez, and J.P. Calbimonte. " NOR 2 O: a Library for Transforming Non-Ontological Resources to Ontologies ". Extended Semantic Web Conference, ESWC 2010, Greece.• B. Villazón-Terrazas, M. C. Suárez-Figueroa, and A. Gómez Pérez. "Pattern for Re-engineering a Term-based Thesaurus, which Follows the Recordbased model, to a Lightweight Ontology". Workshop on Ontology Patterns 1.3. DISSEMINATION OF RESULTS (WOP 2009). International Semantic Web Conference (ISWC 2009). Washington D.C. USA. • B. Villazón-Terrazas, M. C. Suárez-Figueroa, and A. Gómez Pérez. "Pattern for Re-engineering a Classification Scheme, which Follows the Path Enumeration Data Model, to a Taxonomy". Workshop on Ontology Patterns (WOP 2009). International Semantic Web Conference (ISWC 2009). Washington D.C. USA. • B. Villazón-Terrazas, M. C. Suárez-Figueroa, and A. Gómez Pérez. "Pattern for Re-engineering a Classification Scheme, which Follows the Adjacency List Data Model, to a Taxonomy". Workshop on Ontology Patterns (WOP 2009). International Semantic Web Conference (ISWC 2009). Washington D.C. USA. Part of the contribution presented in Chapter 11 has been partially published in: • B. Villazón-Terrazas, J. Ramírez, M. C. Suárez-Figueroa, and A. Gómez Pérez. "A Network of Ontology Networks for building e-Employment Advanced Systems". International Journal on Expert Systems with Applications (ESWA). J. Liebowitz (Ed.) ELSEVIER. (2011). • A. de León, V. Saquicela, L.M. Vilches, B. Villazón-Terrazas, F. Priyatna, and O. Corcho. "Geographical linked data: a Spanish use case". In Proceedings of the 6th international Conference on Semantic Systems (Graz, Austria, September 01 -03, 2010). A. Paschke, N. Henze, and T. Pellegrini, Eds. I-SEMANTICS '10. ACM, New York, NY, 1-3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>2.1.1.1 Features of the non-ontological resourceIn this thesis we propose a categorization of non-ontological resources, according to three different features presented in Figure2.1: (1) the type, which refers to the kind of inner organization of the information; (2) the data model, that is, the design data model used to represent the knowledge encoded by the resource; and (3) the resource implementation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2.1: Non-ontological resources categorization</figDesc><graphic coords="34,143.67,279.05,354.80,215.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 2 . 2 :</head><label>22</label><figDesc>Figure 2.2: Transformation approaches</figDesc><graphic coords="36,243.13,253.25,155.88,354.78" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>The two main methods for transforming folksonomies are T-ORG [ASC07], developed by Abbasi et al., and the one developed by Maala et al. [MDA07].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>(a) the conversion should fully transform WordNet into RDF/OWL; (b) the conversion should be convenient to carry out; (c) the conversion should reflect as much as possible the original structure of WordNet; and (d) the conversion should provide OWL semantics while still being interpretable by pure RDF(S) tools.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>Abbasi et al.<ref type="bibr" target="#b58">[ASC07]</ref> </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>CHAPTER 2 .</head><label>2</label><figDesc>Figure 2.3: Software levels of abstraction [Byr92]</figDesc><graphic coords="66,201.54,138.77,239.05,155.05" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 2 . 4 :</head><label>24</label><figDesc>Figure 2.4: General model for software re-engineering [Byr92]</figDesc><graphic coords="68,141.74,253.88,361.60,138.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>CHAPTER 2 .</head><label>2</label><figDesc>STATE OF THE ART Design Pattern Library 39 , the Portland Pattern Repository 40 , the Design Patterns Study Group of New York City 41 , and the Architecture &amp; Design Patterns 42 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head></head><label></label><figDesc>et al. distinguish different types of Ontology Design Patterns by grouping them into six families (see first level in Figure 2.5). Each family addresses different kind of problems and can be represented with different levels of formality. Next we briefly describe each family of patterns.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2.5: Ontology Design Pattern categorization [GP08]</figDesc><graphic coords="71,93.92,320.13,399.36,118.08" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>CHAPTER 3 .</head><label>3</label><figDesc>Figure 3.1: Thesis main contributions</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head></head><label></label><figDesc>Objectives O3. The creation of a library of patterns for re-engineering non-ontological resources into ontologies. These patterns transform classification schemes, thesauri, and lexica. The re-engineering patterns follow the best practices of ontology engineering and use Logical and Content Ontology Design Patterns for generating OWL Lite ontologies or RDF instances. Moreover, the patterns rely on external resources for discovering the relationships among the non-ontological resource terms.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head></head><label></label><figDesc>CHAPTER 3. OBJECTIVES AND CONTRIBUTIONS Table 3.1: Mapping between objectives and contributions with associated assumptions, hypotheses and restrictions Objective Contribution ([Assumptions],[Hypotheses],[Restrictions]) O1. Methodological aspects related to C1. Definition of non-ontological resources. ([A3,A4], [], [R1]) the reuse of non-ontological resources for building ontologies. C2. A three level categorization of non-ontological resources. ([A3,A4], [], [R1]) C3. NoRMV, a metadata vocabulary for non-ontological resources. ([A3], [H1], [R1,R2]) C4. Method for reusing non-ontological re-sources when building ontologies. ([A2,A3,A4], [H1], [R3,R11]) O2. Methodological aspects related to C5. Re-engineering model for non-ontologi-([A3,A4], [H3,H4], []) the re-engineering of non-ontological recal resources. sources for building ontologies. C6. Method for re-engineering non-ontolo-([A1,A3,A4], [H1,H2,H3], [R4,R5,R11]) gical resources when building ontologies. O3. Set of patterns for re-engineering non-ontological resources into ontologies. C7. Set of patterns for re-engineering classi-fication schemes into ontologies. ([A1,A3,A4], [H4], [R6,R9,R10,R11]) C8. Set of patterns for re-engineering the-sauri into ontologies. ([A1,A3,A4], [H4], [R6,R9,R10,R11]) C9. Set of patterns for re-engineering lexica into ontologies. ([A1,A3,A4], [H4], [R6,R9,R10,R11]) O4. Software library that implements the suggestions made by the re-engineering patterns. C10. A software library, NOR 2 O, that im-plements the transformations made by the re-engineering patterns.Chapter 4</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Figure 4 . 1 :</head><label>41</label><figDesc>Figure 4.1: Inputs considered when developing the method for reusing nonontological resources</figDesc><graphic coords="84,199.27,408.35,243.60,112.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Figure 4 . 2 :</head><label>42</label><figDesc>Figure 4.2: Inputs considered when developing the method that allows reengineering non-ontological resources</figDesc><graphic coords="85,151.44,312.15,243.60,112.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>Figure 4 . 3 :</head><label>43</label><figDesc>Figure 4.3: Inputs considered to obtain the patterns for re-engineering nonontological resources</figDesc><graphic coords="86,199.27,383.54,243.60,112.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head>CHAPTER 5 .</head><label>5</label><figDesc>REUSING NON-ONTOLOGICAL RESOURCES vocabulary used, information browse/search, decrease of the knowledge acquisition bottleneck, and reuse, among others. As already stated in Section 1.1.1, an accepted and agreed upon typology of NORs does not exist. Therefore, one of the contributions of this thesis is the categorization of NORs, according to the following three features presented in Figures 5.1: (1) type of NOR, which refers to the type of inner organization of the information; (2) data model, that is, the design data model used to represent the knowledge encoded by the resource; and (3) resource implementation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>Figure 5</head><label>5</label><figDesc>Figure 5.1: Non-ontological resource categorization</figDesc><graphic coords="92,174.18,259.35,293.76,216.32" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head></head><label></label><figDesc>.2-a). This classification schema is modelled following a path enumeration model (Figure 5.2-b)), an adjacency list model (Figure 5.2-c)), a snow-flake model (Figure 5.2-d)), and a flattened model (Figure 5.2-e)). Figure 5.2-f) presents an XML implementation of the adjacency list model and Figure 5.2-g) presents a spreadsheet implementation of the path enumeration model of the same classification scheme.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_24"><head></head><label></label><figDesc>is a very large, multi-purpose, multilingual thesaurus that contains information about biomedical and health related concepts. It is modelled with the record-based model and stored in a flat file. • MeSh 13 , the Medical Subject Headings, is a classification scheme, modelled with the path enumeration data model. • The Art and Architecture Thesaurus 14 is modelled with the record-based data model and implemented in XML. • The ISCO-08 International Standard Classification of Occupations 15 is a classification scheme modelled with the path enumeration data model and implemented in a database and spreadsheet. a) Excerpt of the Water Area classification scheme. b) Path Enumeration data model c) Adjacency List data model d) Snowflake data model e) Flattened data model f) XML implementation for the g) Spreadsheet implementation for the Adjacency List data model. Path Enumeration data model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_25"><head>Figure 5 . 2 :</head><label>52</label><figDesc>Figure 5.2: Example of classification scheme</figDesc><graphic coords="96,141.74,550.84,430.00,105.35" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_26"><head>Figure 5</head><label>5</label><figDesc>Figure 5.3: NoRMV: A metadata vocabulary for non-ontological resources</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_27"><head></head><label></label><figDesc>&lt;n o r m v : C l a s s i f i c a t i o n S c h e m e r d f : a b o u t =" # W a t e r A r e a s "&gt; &lt;normv:name&gt;Water A r e a s C l a s s i f i c a t i o n Scheme&lt;/ normv:name&gt; &lt;normv:URL&gt; h t t p : / / www. f a o . o r g / f i g i s / s e r v l e t / R e f S e r v l e t&lt;/ normv:URL&gt; &lt;n o r m v : a c r o n y m&gt;FAO WAC&lt;/ n o r m v : a c r o n y m&gt; &lt;n o r m v : h a s D a t a m o d e l r d f : r e s o u r c e ="&amp;normv ; P a t h E n u m e r a t i o n " /&gt; &lt;n o r m v : h a s I m p l e m e n t a t i o n r d f : r e s o u r c e ="&amp;normv ; D a t a b a s e " /&gt; &lt;n o r m v : h a s C r e a t o r r d f : r e s o u r c e =" #FAO" /&gt; &lt;/ n o r m v : C l a s s i f i c a t i o n S c h e m e&gt; &lt;n o r m v : O r g a n i s a t i o n r d f : a b o u t =" #FAO"&gt; &lt;normv:name&gt; Food and A g r i c u l t u r e O r g a n i z a t i o n o f t h e U n i t e d N a t i o n s &lt;/ normv:name&gt; &lt;n o r m v : a c r o n y m&gt;FAO&lt;/ acronym&gt; &lt;/ n o r m v : O r g a n i s a t i o n&gt;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_28"><head>CHAPTER 5 .</head><label>5</label><figDesc>Figure 5.4: Non-ontological resource reuse filling card</figDesc><graphic coords="100,200.92,138.77,240.30,266.85" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_29"><head>Figure 6</head><label>6</label><figDesc>Figure 6.1: Re-engineering model for non-ontological resources</figDesc><graphic coords="108,168.42,138.78,305.28,169.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_30"><head>4 : 9 :</head><label>49</label><figDesc>relation ← ti.subClassOf.tj 5: else if contains(tj,ti) then 6: relation ← tj.subClassOf.ti 7: else 8: wordnetRelation ← W ordN et(ti, tj) if wordnetRelation == hyponym then 10: relation ← ti.subClassOf.tj 11: else if wordnetRelation == hypernym then 12: relation ← tj.subClassOf.ti 13: else if wordnetRelation == meronym then 14: relation ← ti.partOf.tj 15: else if wordnetRelation == holonym then 16: relation ← tj.partOf.ti if 21: return relationThe main parts of algorithm 1 are explained next • (Line 1) Take two related terms from the NOR. • (Line 2) For the userDefinedRelation one recommendation is to use the sub-ClassOf relation by default. However, we recommend considering the type of non-ontological resource and the source relation. For instance, if the input CHAPTER 6. PATTERN BASED RE-ENGINEERING METHOD terms come from a classification scheme from the classification scheme item relation, we recommend using the subClassOf relation by default. If the input terms come from a thesaurus (1) from the BT/NT relation, we recommend using the subClassOf relation by default, and (2) from the RT relation, we recommend using the relatedTerm relation by default.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_31"><head>Line 8 )</head><label>8</label><figDesc>Search in WordNet for a relation between those two terms. * (Line 9-10) the hyponym in the relation is interpreted as subClas-sOf * (Line 11-12) the hypernym in the relation is interpreted as super-Class * (Line 13-14) the member meronym in the relation is interpreted as Part * (Line 15-16) the member holonym in the relation is interpreted as Whole • (Line 18) if WordNet gives an empty result, relate the two terms by means of the default relation, which was set by the user (Line 1).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_32"><head>CHAPTER 6 .</head><label>6</label><figDesc>Figure 6.2: Non-ontological resource re-engineering filling card</figDesc><graphic coords="116,194.62,138.77,252.90,258.30" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_33"><head>Figure 6</head><label>6</label><figDesc>Figure 6.3: Re-engineering process for non-ontological resources</figDesc><graphic coords="117,121.27,138.77,303.96,359.38" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_34"><head>Figure 7 . 1 :</head><label>71</label><figDesc>Figure 7.1: Main components of the UML representation of the classification scheme [ISO04]</figDesc><graphic coords="122,252.59,327.41,136.95,185.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_35"><head></head><label></label><figDesc>Figure 5.2-f) presents an XML implementation of the adjacency list model of the water area classification, and Figure 5.2-g) presents a spreadsheet implementation of the path enumeration model of the same classification scheme.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_36"><head>Figure 7 .</head><label>7</label><figDesc>Figure 7.2 shows a classification scheme modelled following a path enumeration model. In this case, the classification scheme is implemented in a database and in an XML file.Figure 7.2 depicts the resource in our three level categorization of NORs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_37"><head>Figure 7 .</head><label>7</label><figDesc>Figure 7.2 shows a classification scheme modelled following a path enumeration model. In this case, the classification scheme is implemented in a database and in an XML file.Figure 7.2 depicts the resource in our three level categorization of NORs.</figDesc><graphic coords="124,141.74,434.12,367.46,256.12" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_38"><head>Figure 7 . 2 :•</head><label>72</label><figDesc>Figure 7.2: Classification scheme categorization</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_39"><head></head><label></label><figDesc>widely used on data warehouses to build hierarchical classifications on structures known as dimensions. Some examples of dimension are Time, Product Category, Geography, Occupations, etc. In this pattern the example is an occupation hierarchical classification hold on four different tables, one for each level (PROFESSIONI 0, PROFESSIONI 1, PROFESSIONI 2, PROFESSIONI 3). will be based on the taxonomy architectural pattern (AP-TX-01) [SFBG + 07]. Each term in the classification scheme is mapped to a class, and the semantics of the relationship between children and parent terms are made explicit by using an external resource.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_40"><head></head><label></label><figDesc>-engineering a Classification Scheme following the Path Enumeration Data model into an Ontology Schema. Identifier PR-NOR-CLAX-10 Continued on next page 7.2. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES INTO ONTOLOGIES Table 7.5: Pattern for re-engineering a classification scheme following the path enumeration data model into an ontology (continued).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_41"><head></head><label></label><figDesc>to Re-engineer General 1: entityN ame ← name of the entity that contains the c.s. terms 2: mainClass ← createClass(entityN ame) 3: relation ← subClassOf 4: relate(relation,mainClass,mainClass) 5: csT erms ← classification scheme terms 6: for csi ∈ csT erms do 7: Ii ← createInstance(csi) 8: setInstanceOfClass(Ii,mainClass) 9: end for Example 2: mainClass ← createClass(Occupation) 3: relation ← subClassOf 4: relate(relation,mainClass,mainClass) 5: csT erms ← [Legislators, senior officials and managers;Legislators and senior officials;Corporate managers;Professionals] 7: I1 ← createInstance(Legislators, senior officials and managers) 8: setInstanceOfClass(I1,mainClass) 7: I2 ← createInstance(Legislators and senior officials) 8: setInstanceOfClass(I2,mainClass) 7: I3 ← createInstance(Corporate managers) 8: setInstanceOfClass(I3,mainClass) 7: I4 ← createInstance(Professionals) 8: setInstanceOfClass(I4,mainClass) Time Complexity O(n)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_42"><head></head><label></label><figDesc>Information Name Pattern for Re-engineering a Classification Scheme following the Adjacency List Data model into an Ontology Identifier PR-NOR-CLAX-11 Type of Component Pattern for Re-engineering Non-ontological Resource (PR-NOR) Use Case General Re-engineering a classification scheme following the adjacency list model, to design an ontology.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_43"><head></head><label></label><figDesc>will be based on the taxonomy architectural pattern (AP-TX-01) [SFBG + 07]. The classification scheme item will be transformed into a class. The classification scheme item relationship will be transformed into a subClassOf relation. Finally, the content of the classification scheme will be transformed into ontology instances. Continued on next page CHAPTER 7. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES Table 7.6: Pattern for re-engineering a classification scheme following the adjacency list data model into an ontology (continued).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_44"><head></head><label></label><figDesc>to Re-engineer General 1: entityN ame ← name of the entity that contains the c.s. terms 2: mainClass ← createClass(entityN ame) 3: relation ← subClassOf 4: relate(relation,mainClass,mainClass) 5: csT erms ← classification scheme terms 6: for csi ∈ csT erms do 7: Ii ← createInstance(csi) 8: setInstanceOfClass(Ii,mainClass) 9: end for Continued on next page</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_45"><head></head><label></label><figDesc>-engineering a Classification Scheme following the Snowflake Data model into an Ontology Identifier PR-NOR-CLAX-12 Type of Component Pattern for Re-engineering Non-ontological Resource (PR-NOR)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_46"><head></head><label></label><figDesc>Figure 8.1, taken from [Lab07], depicts the thesaurus standards evolution. The ISO 2788:1986 standard is the seed of the rest of the standards. The ISO 5964:1985 extends the scope of the ISO 2788:1986 adding a multilingual context. The ANSI/NISO Z39.19-2003 adds management guidelines to the principles of monolingual thesauri. The ANSI/NISO Z39.19-2003 was superseded by ANSI/NISO Z39.19-2005. The BS 8723-1:2005 and BS 8723-2:2005 are the British version of the ISO 2788.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_47"><head>Figure 8 . 1 :</head><label>81</label><figDesc>Figure 8.1: Thesaurus standards evolution [Lab07]</figDesc><graphic coords="158,141.74,138.77,369.27,209.22" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_48"><head></head><label></label><figDesc>function called thesaurus term instantiation • A T t A : T A → T I function called thesaurus attribute instantiation 8.1. THESAURUS • A T t B : T B → T I 2 function called thesaurus broader term relation instantiation • A T t N : T N → T I 2 function called thesaurus narrower term relation instantiation • A T t R : T R → T I 2 function called thesaurus related term relation instantiation 8.1.3 Thesaurus Data Models As mentioned in Section 5.1 there are different ways of representing the knowledge encoded by a particular resource. This section presents the data models we found for thesauri. Soergel [Soe95] identifies two ways of representing the knowledge encoded by the thesauri: (1) the record-based model, and (2) the relation-based model. In order to exemplify the data models for thesauri, we use an excerpt from the FAO Thesaurus, AGROVOC 1 shown in Figure 8.3. This Figure shows the terms: Oryza and Rice. Next, we describe the data models for thesauri.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_49"><head>Figure 8 . 3 :</head><label>83</label><figDesc>Figure 8.3: Excerpt of the AGROVOC thesaurus</figDesc><graphic coords="161,153.10,381.12,240.30,234.45" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_50"><head>Figure 8 . 4 :</head><label>84</label><figDesc>Figure 8.4: AGROVOC thesaurus modelled with the record-based model</figDesc><graphic coords="162,192.09,203.49,257.95,103.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_51"><head>Figure 8 .</head><label>8</label><figDesc>Figure 8.5: AGROVOC thesaurus modelled with the relation-based model</figDesc><graphic coords="162,141.74,507.26,363.55,82.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_52"><head>Figure 8 .</head><label>8</label><figDesc>Figure 8.6: AGROVOC thesaurus, spreadsheet implementation for the recordbased model</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_53"><head>Figure 8 . 7 :</head><label>87</label><figDesc>Figure 8.7: AGROVOC thesaurus, XML implementation for the record-based model</figDesc><graphic coords="163,163.74,371.39,219.00,183.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_54"><head></head><label></label><figDesc>Use the Architectural Pattern: AP-LW-01 [SFBG + 07] 8.2.1.2 Pattern for re-engineering a thesaurus following the relation-based data model into an ontology schema</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_55"><head></head><label></label><figDesc>Relations to other modelling componentsUse the Architectural Pattern: AP-LW-01 [SFBG + 07] 8.2.2.2 Pattern for re-engineering a thesaurus following the relation-based data model into an ontology.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_56"><head>Figure 9</head><label>9</label><figDesc>Figure 9.1: UML representation of the lexicon main components [FGC + 06]</figDesc><graphic coords="185,93.92,200.54,388.08,274.56" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_57"><head>Figure 9 .</head><label>9</label><figDesc>5 presents a database implementation of the relation-based model of WordNet, specifically the linktype table.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_58"><head>Figure 9 . 5 :</head><label>95</label><figDesc>Figure 9.5: Excerpt of a WordNet database implementation</figDesc><graphic coords="189,210.28,309.71,125.93,81.34" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_59"><head>Figure 9 .•</head><label>9</label><figDesc>Figure 9.6: Lexicon categorization</figDesc><graphic coords="190,141.74,138.77,365.56,253.46" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_60"><head>CHAPTER 10 .</head><label>10</label><figDesc>Figure 10.1: Modules of the NOR 2 O software library.</figDesc><graphic coords="210,160.82,138.77,320.50,211.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_61"><head>Figure 10 . 2 :</head><label>102</label><figDesc>Figure 10.2: Graphical representation of the NOR Connector XSD file.</figDesc><graphic coords="210,160.42,536.68,321.30,160.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_62"><head></head><label></label><figDesc>This module performs the transformation suggested by the patterns by implementing the sequence of activities included in the patterns. The module transforms the NOR elements, loaded by the NOR Connector module, into internal model representation elements. It also interacts with the Semantic Relation Disambiguator module for obtaining the suggested semantic relations of the NOR elements.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_63"><head>Figure 10 .</head><label>10</label><figDesc>3 shows the graphical representation of the PRNOR XSD file. Two examples of the XML configuration file are shown in Listings 10.2 and 10.3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_64"><head>Figure 10 . 3 :</head><label>103</label><figDesc>Figure 10.3: Graphical representation of the PRNOR XSD file.</figDesc><graphic coords="212,195.74,246.36,250.65,192.15" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_65"><head>Figure 10 . 4 :</head><label>104</label><figDesc>Figure 10.4: Graphical representation of the OR XSD file.</figDesc><graphic coords="214,263.32,363.09,115.50,88.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_66"><head>Figure 10 .</head><label>10</label><figDesc>Figure 10.5: Re-engineering ODPs at the ODP Portal</figDesc><graphic coords="215,93.92,389.01,384.80,226.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_67"><head></head><label></label><figDesc>11.1. EVALUATION OF THE METHODOLOGICAL GUIDELINES 11.1.2 Understandability, Applicability and Usability of the Method for Reuse and Re-engineering within the SEEMP Project</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_68"><head>Figure 11 . 2 :</head><label>112</label><figDesc>Figure 11.2: mIO! Ontology Network</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_69"><head>11. 2 .</head><label>2</label><figDesc>EVALUATION OF THE TECHNOLOGICAL SUPPORTshould be improved in future works. Figure11.3 depicts the results of the SUMI questionnaires.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_70"><head>Figure 11 . 3 :</head><label>113</label><figDesc>Figure 11.3: The results of SUMI questionnaires for the NOR 2 O Software Library</figDesc><graphic coords="235,100.39,177.83,345.72,170.08" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_71"><head>Figure 11 . 4 :</head><label>114</label><figDesc>Figure 11.4: Generation of RDF instances from the excel spreadsheet data.</figDesc><graphic coords="238,153.94,138.78,334.25,230.65" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_72"><head>CHAPTER 12 .Features</head><label>12</label><figDesc>CONCLUSIONS AND FUTURE WORK transformed; and (2) keeps track of the provenance of the resource. Table 12.3: A comparative analysis of the three most representative methods and the pattern-based method. Transformation features</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="101,177.25,138.77,192.00,351.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="159,102.75,335.63,341.00,216.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="164,141.74,138.77,365.20,261.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="188,141.74,138.77,409.50,162.23" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Registro de la Propiedad Intelectual "Comunidad de Madrid". Reference M-404/2009.</figDesc><table><row><cell>CHAPTER 1. INTRODUCTION</cell></row><row><cell>as a patent in the Chapter 2</cell></row><row><cell>Web Method-</cell></row><row><cell>ologies for E-Business Applications: Ontologies, Processes and Manage-</cell></row><row><cell>ment Practices, (IDEA Group Publishing), 2008.</cell></row><row><cell>The ontology built within the SEEMP project 14 by applying the methodological</cell></row><row><cell>guidelines introduced in this thesis, which appears in Chapter 11, was registered</cell></row></table><note><p>• I. Celino, D. Cerizza, M. Cesarini, E. Della Valle, F. De Paoli, J. Estublier, M. Grazia Fugini, A. Gómez Pérez, M. Kerrigan, P. Guarrera, M. Mezzanzanica, J. Ramirez, B. Villazón-Terrazas, and G. Zhao. "SEEMP: A Networked Marketplace for Employment Services". In Vassilios Peristeras, Tomas Vitvar, and Konstantinos Tarabanis (eds.) Semantic Technologies for E-Government, Springer, 2009. • E. Della Valle, D. Cerizza, I. Celino, M. Grazia Fugini, J. Estublier, G. Vega, M. Kerrigan, A. Gómez Pérez, J. Ramírez, B. Villazón-Terrazas, G. Zhao, M. Cesarini, and F. De Paoli. "The SEEMP Approach to Semantic Interoperability for e-Employment". In Robeto García (ed.): Semantic</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>•</head><label></label><figDesc>Hakkarainen et al. [HHST06]  present a study of the semantic relationship between the ISO 15926-2 2 and OWL DL. The ISO 15926 is a standard for integrating, sharing, exchanging, and handing-over data between computer systems. The ISO 15926-2 is built on EXPRESS 3 and stored in a flat file.</figDesc><table /><note><p>This standard consists of 201 entity data types; the top level entity data type is thing, with its subtypes of a possible individual and abstract object. All other entities are subtypes of them.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>•</head><label></label><figDesc>Wielinga et al. [WSWS01]  present a method for transforming the Art and Architecture Thesaurus (AAT) into an RDF(S) ontology. The AAT is the most elaborate and standardized body of knowledge concerning classifications of art objects. AAT is published via a searchable online Web interface15  </figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 2</head><label>2</label><figDesc></figDesc><table><row><cell></cell><cell cols="7">.1: Comparison of the methods according to the NOR features</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Type of</cell><cell></cell><cell>Data</cell><cell>Resource</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>model</cell></row><row><cell cols="2">Research work</cell><cell></cell><cell></cell><cell>resource</cell><cell></cell><cell>is known</cell><cell>implemented in</cell></row><row><cell cols="3">Hepp et al. [HdB07]</cell><cell></cell><cell cols="2">Classification</cell><cell>No</cell><cell>Database</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>scheme,</cell><cell>the-</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>sauri</cell><cell></cell><cell></cell></row><row><cell cols="2">Hakkarainen</cell><cell>et</cell><cell>al.</cell><cell cols="2">Classification</cell><cell>Yes</cell><cell>Flat file</cell></row><row><cell cols="2">[HHST06]</cell><cell></cell><cell></cell><cell>scheme</cell><cell></cell><cell></cell></row><row><cell cols="3">Abbasi et al. [ASC07]</cell><cell></cell><cell cols="2">Folksonomy</cell><cell>No</cell><cell>Not mentioned</cell></row><row><cell cols="3">Maala et al. [MDA07]</cell><cell></cell><cell cols="2">Folksonomy</cell><cell>No</cell><cell>Not mentioned</cell></row><row><cell>Van</cell><cell>Assem</cell><cell>et</cell><cell>al.</cell><cell>Lexica</cell><cell></cell><cell>Yes</cell><cell>Prolog</cell></row><row><cell cols="2">[vAGS06]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">Gangemi et al. [GNV03,</cell><cell>Lexica</cell><cell></cell><cell>Yes</cell><cell>Database</cell></row><row><cell cols="2">GGMO03]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">Hahn et al. [Hah03, HS03] Thesauri</cell><cell></cell><cell>Yes</cell><cell>ASCII files</cell></row><row><cell>Van</cell><cell>Assem</cell><cell>et</cell><cell>al.</cell><cell>Thesauri</cell><cell></cell><cell>No</cell><cell>proprietary text</cell></row><row><cell cols="2">[vAMSW04]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>format, database,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>XML</cell></row><row><cell>Van</cell><cell>Assem</cell><cell>et</cell><cell>al.</cell><cell>Thesauri</cell><cell></cell><cell>No</cell><cell>Not mentioned</cell></row><row><cell cols="2">[vAMMS06]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">Wielinga et al. [WSWS01] Thesauri</cell><cell></cell><cell>Yes</cell><cell>XML</cell></row><row><cell cols="4">Hyvönen et al. [HVTS08]</cell><cell>Thesauri</cell><cell></cell><cell>No</cell><cell>Not mentioned</cell></row><row><cell cols="4">Soergel et al. [SLL + 04,</cell><cell>Thesauri</cell><cell></cell><cell>Yes</cell><cell>Database</cell></row><row><cell>LS06]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">Stojanovic et al. [SSV02]</cell><cell cols="2">Not specified</cell><cell>Yes</cell><cell>Database</cell></row><row><cell cols="4">Barrasa et al. [BCGP04,</cell><cell cols="2">Not specified</cell><cell>Yes</cell><cell>Database</cell></row><row><cell>Bar07]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">García et al. [GC05]</cell><cell></cell><cell cols="2">Not specified</cell><cell>No</cell><cell>XML</cell></row><row><cell cols="2">An et al. [AM05]</cell><cell></cell><cell></cell><cell cols="2">Not specified</cell><cell>No</cell><cell>XML</cell></row><row><cell cols="3">Cruz et al. [CXH04]</cell><cell></cell><cell cols="2">Not specified</cell><cell>No</cell><cell>XML</cell></row><row><cell cols="3">Foxvog et al. [FB06]</cell><cell></cell><cell cols="2">Not specified</cell><cell>No</cell><cell>Flat file</cell></row><row><cell cols="8">2.1.3.1 Tools centred on the non-ontological resource type</cell></row><row><cell cols="8">This section presents some of the tools we have found in the literature related to</cell></row><row><cell cols="8">the building of ontologies by re-engineering non-ontological resources. Such tools</cell></row><row><cell cols="8">transform classification schemes, folksonomies, lexica and thesauri into ontolo-</cell></row><row><cell>gies.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="8">A tool for transforming classification schemes into ontologies</cell></row><row><cell cols="8">SKOS2GenTax 26 is an online tool that converts hierarchical classifications, avail-</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 2 .</head><label>2</label><figDesc>3: Comparison of the methods according to the transformation process features</figDesc><table><row><cell>Hakkarainen et al.</cell><cell>Hepp et al. [HdB07]</cell><cell></cell><cell></cell><cell></cell><cell>Research work</cell></row><row><cell></cell><cell>TBox</cell><cell></cell><cell></cell><cell>Approach</cell><cell>Transformation</cell></row><row><cell>semantic</cell><cell>syntactic,</cell><cell></cell><cell></cell><cell>Aspects</cell><cell>Transformation</cell></row><row><cell>ad-hoc relation</cell><cell>subClassOf,</cell><cell></cell><cell></cell><cell>NOR relations</cell><cell>Semantics of</cell></row><row><cell></cell><cell>No</cell><cell>Expert</cell><cell>Domain</cell><cell>Resources /</cell><cell>Additional</cell></row><row><cell></cell><cell>Semi-automatic</cell><cell>Manual</cell><cell>automatic /</cell><cell>Semi-</cell><cell>Automatic /</cell></row><row><cell></cell><cell>Yes</cell><cell></cell><cell></cell><cell>Guidelines</cell><cell>Methodological</cell></row><row><cell></cell><cell>Not mentioned</cell><cell></cell><cell></cell><cell></cell><cell>Technique</cell></row><row><cell></cell><cell>SKOS2GenTax</cell><cell></cell><cell></cell><cell></cell><cell>Tool support</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 2 . 4 :</head><label>24</label><figDesc>Comparison of the methods according to the ontology features</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell cols="2">Lightweight/ Components</cell><cell cols="2">Implementation Single/</cell></row><row><cell cols="2">Research Work</cell><cell></cell><cell>Heavyweight</cell><cell></cell><cell>language</cell><cell>Several</cell></row><row><cell cols="2">Hepp et al. [HdB07]</cell><cell></cell><cell>Lightweight</cell><cell>classes, relations</cell><cell>RDF(S) / OWL</cell><cell>Single</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>DLP</cell><cell></cell></row><row><cell>Hakkarainen</cell><cell>et</cell><cell>al.</cell><cell>Lightweight</cell><cell>classes, attributes,</cell><cell>OWL DL</cell><cell>Single</cell></row><row><cell>[HHST06]</cell><cell></cell><cell></cell><cell></cell><cell>relations</cell><cell></cell><cell></cell></row><row><cell cols="2">Abbasi et al. [ASC07]</cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell>Not mentioned</cell><cell>Several</cell></row><row><cell cols="2">Maala et al. [MDA07]</cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Single</cell></row><row><cell cols="3">Van Assem et al.</cell><cell>Lightweight</cell><cell>classes, attributes,</cell><cell>RDF(S) / OWL</cell><cell>Single</cell></row><row><cell>[vAGS06]</cell><cell></cell><cell></cell><cell></cell><cell>relations, instances</cell><cell>Full</cell><cell></cell></row><row><cell cols="3">Gangemi et al. [GNV03,</cell><cell>Lightweight</cell><cell>classes, attributes,</cell><cell>DAML+OIL</cell><cell>Single</cell></row><row><cell>GGMO03]</cell><cell></cell><cell></cell><cell></cell><cell>relations</cell><cell></cell><cell></cell></row><row><cell>Hahn et al.</cell><cell cols="2">[Hah03,</cell><cell cols="2">Heavyweight classes, relations</cell><cell>LOOM / ALC</cell><cell>Single</cell></row><row><cell>HS03]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">Van Assem et al.</cell><cell>Lightweight</cell><cell>classes, attributes,</cell><cell>RDF(S) / OWL</cell><cell>Single</cell></row><row><cell>[vAMSW04]</cell><cell></cell><cell></cell><cell></cell><cell>relations</cell><cell>Full</cell><cell></cell></row><row><cell cols="3">Van Assem et al.</cell><cell>Lightweight</cell><cell>instances</cell><cell>SKOS RDF</cell><cell>Single</cell></row><row><cell>[vAMMS06]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Wielinga</cell><cell>et</cell><cell>al.</cell><cell>Lightweight</cell><cell>classes, attributes,</cell><cell>RDF(S)</cell><cell>Single</cell></row><row><cell>[WSWS01]</cell><cell></cell><cell></cell><cell></cell><cell>relations</cell><cell></cell><cell></cell></row><row><cell>Hyvönen</cell><cell>et</cell><cell>al.</cell><cell cols="2">Heavyweight classes, attributes,</cell><cell>RDF(S)</cell><cell>Single</cell></row><row><cell>[HVTS08]</cell><cell></cell><cell></cell><cell></cell><cell>relations</cell><cell></cell><cell></cell></row><row><cell cols="3">Soergel et al. [SLL + 04,</cell><cell cols="2">Heavyweight classes, attributes,</cell><cell>OWL DL</cell><cell>Single</cell></row><row><cell>LS06]</cell><cell></cell><cell></cell><cell></cell><cell>relations</cell><cell></cell><cell></cell></row><row><cell>Stojanovic</cell><cell>et</cell><cell>al.</cell><cell>Lightweight</cell><cell>instances</cell><cell>F-Logic / RDF</cell><cell>Single</cell></row><row><cell>[SSV02]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">Barrasa et al. [BCGP04,</cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Single</cell></row><row><cell>Bar07]</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">García et al. [GC05]</cell><cell></cell><cell>Lightweight</cell><cell>classes, attributes,</cell><cell cols="2">OWL Full/ RDF Single</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>relations, instances</cell><cell></cell><cell></cell></row><row><cell cols="2">An et al. [AM05]</cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Single</cell></row><row><cell cols="2">Cruz et al. [CXH04]</cell><cell></cell><cell>Lightweight</cell><cell>classes, attributes,</cell><cell>RDF(S)</cell><cell>Single</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>relations, instances</cell><cell></cell><cell></cell></row><row><cell cols="2">Foxvog et al. [FB06]</cell><cell></cell><cell>Lightweight</cell><cell>classes, attributes,</cell><cell>CycL / OWL</cell><cell>Several</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>relations, instances</cell><cell>Full / WSML</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 2 .</head><label>2</label><figDesc>5: Comparison of the tools according to the NOR features</figDesc><table><row><cell></cell><cell>Type of</cell><cell cols="2">Data model</cell><cell>Resource</cell></row><row><cell>Tool</cell><cell>resource</cell><cell>model</cell><cell>is</cell><cell cols="2">implemented in</cell></row><row><cell></cell><cell></cell><cell>known</cell><cell></cell><cell></cell></row><row><cell>SKOS2GenTax</cell><cell>Classification</cell><cell>No</cell><cell></cell><cell>SKOS RDF</cell></row><row><cell></cell><cell>schemes,</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>thesauri</cell><cell></cell><cell></cell><cell></cell></row><row><cell>T-ORG</cell><cell>Folksonomy</cell><cell>No</cell><cell></cell><cell cols="2">Not mentioned</cell></row><row><cell>KAON-</cell><cell>Not specified</cell><cell>Yes</cell><cell></cell><cell>Database</cell></row><row><cell>REVERSE</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>ODEMapster</cell><cell>Not specified</cell><cell>Yes</cell><cell></cell><cell>Database</cell></row><row><cell>D2R Server</cell><cell>Not specified</cell><cell>No</cell><cell></cell><cell>Database</cell></row><row><cell>TopBraid Com-</cell><cell>Not specified</cell><cell>No</cell><cell></cell><cell cols="2">Database, XML,</cell></row><row><cell>poser</cell><cell></cell><cell></cell><cell></cell><cell cols="2">Flat file, Spread-</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>sheet</cell></row><row><cell>XSD2OWL and</cell><cell>Not specified</cell><cell>No</cell><cell></cell><cell>XML</cell></row><row><cell>XML2RDF</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>ConvertToRdf</cell><cell>Not specified</cell><cell>No</cell><cell></cell><cell>Delimited</cell><cell>text</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>data file</cell></row><row><cell>flat2rdf</cell><cell>Not specified</cell><cell>No</cell><cell></cell><cell>Flat file</cell></row><row><cell>Java BibTeX-To-</cell><cell>Not specified</cell><cell>No</cell><cell></cell><cell>Flat file</cell></row><row><cell>RDF Converter</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Excel2rdf</cell><cell>Not specified</cell><cell>No</cell><cell></cell><cell>Spreadsheet</cell></row><row><cell>RDF123</cell><cell>Not specified</cell><cell>No</cell><cell></cell><cell>Spreadsheet</cell></row><row><cell>XLWrap</cell><cell>Not specified</cell><cell>No</cell><cell></cell><cell>Spreadsheet</cell></row></table><note><p><p><p><p>2.1.4.1 Results according to non-ontological resource</p>Table</p>2</p>.1 and table 2.5 summarize the methods and tools presented according to the characteristics of the non-ontological resource: type of resource, knowledge about the data model, and resource implementation.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 2 .</head><label>2</label><figDesc></figDesc><table /><note><p>6: Comparison of the tools according to the transformation process features</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Table 2 .</head><label>2</label><figDesc>7: Comparison of the tools according to the ontology features</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell cols="4">Lightweight/ Components Implementation</cell><cell>Single/</cell></row><row><cell>Tool</cell><cell></cell><cell></cell><cell>Heavyweight</cell><cell></cell><cell>language</cell><cell>Several</cell></row><row><cell cols="2">SKOS2GenTax</cell><cell></cell><cell>Lightweight</cell><cell>classes,</cell><cell>OWL</cell><cell>DLP/</cell><cell>Single</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>attributes,</cell><cell>RDF(S)</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>relations</cell><cell></cell></row><row><cell>T-ORG</cell><cell></cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell cols="2">Not mentioned</cell><cell>Several</cell></row><row><cell cols="3">KAON-REVERSE</cell><cell>Lightweight</cell><cell>classes,</cell><cell cols="2">F-Logic / RDF</cell><cell>Single</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>attributes,</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>relations,</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>instances</cell><cell></cell></row><row><cell cols="2">ODEMapster</cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Single</cell></row><row><cell cols="2">D2R Server</cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Single</cell></row><row><cell cols="4">TopBraid Composer Lightweight</cell><cell>classes,</cell><cell cols="2">RDF/OWL (Full,</cell><cell>Single</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>attributes,</cell><cell>DL or Lite)</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>relations,</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>instances</cell><cell></cell></row><row><cell cols="2">XSD2OWL</cell><cell>and</cell><cell>Lightweight</cell><cell>classes,</cell><cell cols="2">OWL Full/ RDF</cell><cell>Single</cell></row><row><cell cols="2">XML2RDF</cell><cell></cell><cell></cell><cell>attributes,</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>relations,</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>instances</cell><cell></cell></row><row><cell cols="2">ConvertToRdf</cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Single</cell></row><row><cell>flat2rdf</cell><cell></cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Single</cell></row><row><cell>Java</cell><cell cols="2">BibTeX-To-</cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Single</cell></row><row><cell cols="2">RDF Converter</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">Excel2rdf</cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Single</cell></row><row><cell cols="2">RDF123</cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Several</cell></row><row><cell cols="2">XLWrap</cell><cell></cell><cell>Lightweight</cell><cell>instances</cell><cell>RDF</cell><cell>Several</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>•</head><label></label><figDesc>Semantic Web Best Practices and Deployment Working Group 43 , which aims to provide hands-on support for developers of Semantic Web applications.</figDesc><table><row><cell>39 http://hillside.net/patterns</cell></row><row><cell>40 http://c2.com/ppr/index.html</cell></row></table><note><p>41 http://industriallogic.com/patterns/ 42 http://www.cetus-links.org/oo_patterns.html 43 http://www.w3.org/2001/sw/BestPractices/OEP/</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head></head><label></label><figDesc>Correspondence ODPs are templates to represent alignments between models. They include Schema Re-engineering ODPs, Re-engineering ODPs and Alignment ODPs. Re-engineering ODPs are transformation rules applied to create a new ontology starting from elements of a source model; Refactoring ODPs provide designers with rules for transforming an existing OWL-DL "source" ontology into a new OWL-DL "target" ontology.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head></head><label></label><figDesc>Some of the most representative are Hepp et al. [HdB07], van Assem et al. [vAGS06], Gangemi et al. [GNV03, GGMO03], van Assem et al. [vAMMS06], and Soergel et al. [SLL + 04].</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13"><head></head><label></label><figDesc>Snowflake<ref type="bibr" target="#b131">[MZ06]</ref>: An snowflake model is a normalized structure for hierarchy representations. For each hierarchy level a table is created. In this model each hierarchy node has a column linked to its parent node. Figure5.2-d) shows this model. • Flattened [MZ06]: A flattened model is a denormalized structure for hierarchy representations. The hierarchy is represented by a table where each hierarchy level is stored in a different column. Figure 5.2-e) shows this model.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_15"><head>Table 5</head><label>5</label><figDesc></figDesc><table><row><cell></cell><cell cols="3">.1: Assessment table for the NORs</cell><cell></cell></row><row><cell>NOR</cell><cell>Precision</cell><cell>Coverage</cell><cell>Consensus</cell><cell>Quality</cell></row><row><cell>NOR 1</cell><cell>NOR 1 Preci-</cell><cell>NOR 1 Coverage</cell><cell>(Yes/No)</cell><cell>(Yes/No)</cell></row><row><cell></cell><cell>sion value</cell><cell>value</cell><cell></cell><cell></cell></row><row><cell>NOR 2</cell><cell>NOR 2 Preci-</cell><cell>NOR 2 Coverage</cell><cell>(Yes/No)</cell><cell>(Yes/No)</cell></row><row><cell></cell><cell>sion value</cell><cell>value</cell><cell></cell><cell></cell></row><row><cell>NOR 3</cell><cell>NOR 3 Preci-</cell><cell>NOR 3 Coverage</cell><cell>(Yes/No)</cell><cell>(Yes/No)</cell></row><row><cell></cell><cell>sion value</cell><cell>value</cell><cell></cell><cell></cell></row><row><cell cols="5">software developers and ontology practitioners, taking as input the non-ontological</cell></row><row><cell cols="5">resource assessment table. The selection is performed manually and we recom-</cell></row><row><cell cols="3">mend looking for resources with</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_16"><head>Table 7 .</head><label>7</label><figDesc>1: Pattern for re-engineering a classification scheme following the path enumeration data model into an ontology schema (continued).</figDesc><table><row><cell>Slot</cell><cell></cell><cell>Value</cell></row><row><cell></cell><cell cols="2">Require: Identification of the parent/child by using the path enumeration</cell></row><row><cell></cell><cell>model</cell></row><row><cell></cell><cell>1:</cell><cell>noP arentT erms ← [Legislators, senior officials and man-</cell></row><row><cell></cell><cell cols="2">agers;Professionals]</cell></row><row><cell></cell><cell cols="2">2: // noP arentT erms.length=2 &gt; 1</cell></row><row><cell></cell><cell cols="2">3: entityN ame ← Occupation</cell></row><row><cell></cell><cell cols="2">4: rootClass ← createClass(entityN ame)</cell></row><row><cell></cell><cell cols="2">6: R1 ← createClass(Legislators, senior officials and managers)</cell></row><row><cell></cell><cell cols="2">7: relation1 ← ExternalResource.getRelation(rootClass,R1)</cell></row><row><cell></cell><cell cols="2">8: relate(relation1,rootClass,R1)</cell></row><row><cell></cell><cell cols="2">6: R2 ← createClass(Professionals)</cell></row><row><cell></cell><cell cols="2">7: relation2 ← ExternalResource.getRelation(rootClass,R2)</cell></row><row><cell></cell><cell cols="2">8: relate(relation2,rootClass,R2)</cell></row><row><cell></cell><cell cols="2">13: // Legislators, senior officials and managers class, R1, already created</cell></row><row><cell></cell><cell cols="2">16: children ← childrenOf(Legislators, senior officials and managers)</cell></row><row><cell></cell><cell cols="2">16: children ← [Legislators and senior officials;Corporate managers] //</cell></row><row><cell></cell><cell cols="2">using the path enumeration model</cell></row><row><cell>Example</cell><cell cols="2">19: C1 ← createClass(Legislators and senior officials)</cell></row><row><cell></cell><cell cols="2">21: rel1 ← ExternalResource.getRelation(R1,C1)</cell></row><row><cell></cell><cell cols="2">22: relate(rel1,R1,C1)</cell></row><row><cell></cell><cell cols="2">19: C2 ← createClass(Corporate managers)</cell></row><row><cell></cell><cell cols="2">21: rel2 ← ExternalResource.getRelation(R1,C2)</cell></row><row><cell></cell><cell cols="2">22: relate(rel2,R1,C2)</cell></row><row><cell></cell><cell cols="2">24: allChildren ← [Legislators and senior officials;Corporate managers]</cell></row><row><cell></cell><cell cols="2">13: // Professionals, R2, already created</cell></row><row><cell></cell><cell cols="2">16: children ← ∅ ← childrenOf(Professionals)</cell></row><row><cell></cell><cell cols="2">26: noP arentT erms ← [Legislators and senior officials;Corporate man-</cell></row><row><cell></cell><cell>agers]</cell></row><row><cell></cell><cell cols="2">27: removeAllTerms(allChildren)</cell></row><row><cell></cell><cell cols="2">13: // Legislators and senior officials, C1, already created</cell></row><row><cell></cell><cell cols="2">16: children ← ∅ ← childrenOf(Legislators and senior officials)</cell></row><row><cell></cell><cell cols="2">13: // Corporate managers, C2, already created</cell></row><row><cell></cell><cell cols="2">16: children ← ∅ ← childrenOf(Corporate managers)</cell></row><row><cell></cell><cell cols="2">24: allChildren ← ∅</cell></row><row><cell></cell><cell cols="2">26: noP arentT erms ← allChildren ← ∅</cell></row><row><cell>Time Complexity</cell><cell></cell><cell>O(n 2 )</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_17"><head>Table 7 .</head><label>7</label><figDesc>on next page CHAPTER 7. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES 1: Pattern for re-engineering a classification scheme following the path enumeration data model into an ontology schema (continued).</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell></cell><cell>Relationships</cell></row><row><cell>Relations to other modelling</cell><cell>Use the Architectural Pattern: AP-TX-01 [SFBG + 07]</cell></row><row><cell>components</cell><cell></cell></row><row><cell cols="2">7.2.1.2 Pattern for re-engineering a classification scheme following the adja-</cell></row><row><cell cols="2">cency list data model into an ontology schema</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_18"><head>Table 7 .</head><label>7</label><figDesc>2: Pattern for re-engineering a classification scheme following the adjacency list data model into an ontology schema</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell></cell><cell>General Information</cell></row><row><cell></cell><cell>Pattern for Re-engineering a Classification Scheme following the Adjacency</cell></row><row><cell>Name</cell><cell>List data model into an ontology Schema</cell></row><row><cell>Identifier</cell><cell>PR-NOR-CLTX-02</cell></row><row><cell>Type of Component</cell><cell>Pattern for Re-engineering Non-ontological Resource (PR-NOR)</cell></row><row><cell></cell><cell>Use Case</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_19"><head>Table 7 .</head><label>7</label><figDesc>2: Pattern for re-engineering a classification scheme following the adjacency list data model into an ontology schema (continued). Identification of the parent/child by using the adjacency list model 1: noP arentT erms ← classification scheme terms without parent 2: if noP arentT erms.length &gt; 1 then 3: entityN ame ← name of the entity that contains the classification</figDesc><table><row><cell>This classification scheme is available at</cell></row><row><cell>http://www.fao.org/figis/servlet/RefServlet</cell></row><row><cell>Continued on next page</cell></row></table><note><p>repeat 12: for cei ∈ noP arentT erms do 13: if not alreadyCreatedClassFor(cei) then 14: Ci ← createClass(cei) 15: end if 16: children ← childrenOf(cei) 17: for cej ∈ children do 18: if not alreadyCreatedClassFor(cej) then 19:</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_20"><head>Table 7 .</head><label>7</label><figDesc>2: Pattern for re-engineering a classification scheme following the adjacency list data model into an ontology schema (continued).</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell cols="2">Require: Identification of the parent/child by using the adjacency list model</cell></row><row><cell cols="2">1: noP arentT erms ← [Water area]</cell></row><row><cell cols="2">2: // noP arentT erms.length=1 &gt; 1</cell></row><row><cell cols="2">14: C1 ← createClass(Water area)</cell></row><row><cell cols="2">16: children ← childrenOf(Water area) // using the adjacency list model</cell></row><row><cell cols="2">16: children ← [Environmental area; Jurisdiction area; Fishing statistical</cell></row><row><cell>area]</cell><cell></cell></row><row><cell cols="2">19: C2 ← createClass(Environmental area)</cell></row><row><cell cols="2">21: rel1 ← ExternalResource.getRelation(C1,C2)</cell></row><row><cell cols="2">19: C3 ← createClass(Jurisdiction area)</cell></row><row><cell cols="2">21: rel2 ← ExternalResource.getRelation(C1,C3)</cell></row><row><cell cols="2">19: C4 ← createClass(Fishing statistical area)</cell></row><row><cell cols="2">21: rel3 ← ExternalResource.getRelation(C1,C4)</cell></row><row><cell cols="2">26: noP arentT erms ← [Environmental area; Jurisdiction area; Fishing</cell></row><row><cell>statistical area]</cell><cell></cell></row><row><cell>Example</cell><cell></cell></row><row><cell>Time Complexity</cell><cell>O(n 2 )</cell></row></table><note><p>16: children ← childrenOf(Environmental area) // using the adjacency list model 16: children ← [Inland/Marine;Ocean;North/South/Equatorial] 19: C5 ← createClass(Inland/Marine) 21: rel4 ← ExternalResource.getRelation(C2,C5) 19: C6 ← createClass(Ocean) 21: rel5 ← ExternalResource.getRelation(C2,C6) 19: C7 ← createClass(North/South/Equatorial) 21: rel6 ← ExternalResource.getRelation(C2,C7) 16: children ← ∅ ← childrenOf(Jurisdiction area) 16: children ← childrenOf(Fishing statistical area) // using the adjacency list model 16: children ← [FAO Statistical area;Areal grid system] 19: C8 ← createClass(FAO Statistical area) 21: rel7 ← ExternalResource.getRelation(C4,C8) 19: C9 ← createClass(Areal grid system) 21: rel8 ← ExternalResource.getRelation(C4,C9) 26: noP arentT erms ← [Inland/Marine;Ocean;North/South/Equ.;FAO Statistical;Areal grid system] 16: children ← ∅ ← childrenOf(Inland/Marine) 16: children ← ∅ ← childrenOf(Ocean) 16: children ← ∅ ← childrenOf(North/South/Equatorial) 16: children ← ∅ ← childrenOf(FAO Statistical area) 16: children ← ∅ ← childrenOf(Areal grid system) 26: noP arentT erms ← ∅</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_21"><head>Table 7 .</head><label>7</label><figDesc>3: Pattern for re-engineering a classification scheme following the snowflake data model into an ontology schema (continued).</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell cols="2">Require: Identification of the parent/child by using the snowflake model</cell></row><row><cell cols="2">1: noP arentT erms ← [Professioni specialistiche e tecniche;Professioni</cell></row><row><cell cols="2">operative della gestione dimpresa]</cell></row><row><cell cols="2">2: // noP arentT erms.length=2 &gt; 1</cell></row><row><cell cols="2">3: entityN ame ← Professione</cell></row><row><cell cols="2">4: rootClass ← createClass(entityN ame)</cell></row><row><cell cols="2">6: R1 ← createClass(Professioni specialistiche e tecniche)</cell></row><row><cell cols="2">7: relation1 ← ExternalResource.getRelation(rootClass,R1)</cell></row><row><cell cols="2">6: R2 ← createClass(Professioni operative della gestione dimpresa)</cell></row><row><cell cols="2">7: relation2 ← ExternalResource.getRelation(rootClass,R2)</cell></row><row><cell cols="2">16: children ← childrenOf(Professioni specialistiche e tecniche) // using</cell></row><row><cell>the snowflake model</cell><cell></cell></row><row><cell>Example</cell><cell></cell></row><row><cell>Time Complexity</cell><cell>O(n 2 )</cell></row></table><note><p>16: children ← [Specialist e tecnici delle scienze informatiche] 19: C1 ← createClass(Specialist e tecnici delle scienze informatiche) 21: rel1 ← ExternalResource.getRelation(R1,C1) 16: children ← childrenOf(Professioni operative della gestione dimpresa) // using the snowflake model 16: children ← [Specialist e tecnici delle gestione dimpresa] 19: C2 ← createClass(Specialist e tecnici delle gestione dimpresa) 21: rel2 ← ExternalResource.getRelation(R2,C2) 26: noP arentT erms ← [Specialist e tecnici delle scienze informatiche;Specialist e tecnici delle gestione dimpresa] 16: children ← childrenOf(Specialist e tecnici delle scienze informatiche) // using the snowflake model 16: children ← [Tecnici delle scienze informatiche] 19: C3 ← createClass(Tecnici delle scienze informatiche) 21: rel3 ← ExternalResource.getRelation(C1,C3) 16: children ← childrenOf(Specialist e tecnici delle gestione dimpresa) // using the snowflake model 16: children ← [Tecnici delle gestione dimpresa] 19: C4 ← createClass(Tecnici delle gestione dimpresa) 21: rel4 ← ExternalResource.getRelation(C2,C4) 26: noP arentT erms ← [Tecnici delle scienze informatiche;Tecnici delle gestione dimpresa] 16: children ← ∅ ← childrenOf(Tecnici delle scienze informatiche) // using the snowflake model 16: children ← ∅ ← childrenOf(Tecnici delle gestione dimpresa) 26: noP arentT erms ← ∅</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_22"><head>Table 7 .</head><label>7</label><figDesc>4: Pattern for re-engineering a classification scheme following the flattened data model into an ontology schema (continued). Identification of the parent/child by using the flattened model 1: noP arentT erms ← classification scheme terms without parent 2: if noP arentT erms.length &gt; 1 then 3: entityN ame ← name of the entity that contains the classification</figDesc><table><row><cell>Slot</cell><cell></cell><cell>Value</cell></row><row><cell></cell><cell></cell><cell>PROCESS: How to Re-engineer</cell></row><row><cell></cell><cell cols="2">Require: scheme terms</cell></row><row><cell></cell><cell cols="2">4: rootClass ← createClass(entityN ame)</cell></row><row><cell></cell><cell cols="2">5: for ri ∈ noP arentT erms do</cell></row><row><cell></cell><cell cols="2">6: Ri ← createClass(ri)</cell></row><row><cell></cell><cell cols="2">7: relation ← ExternalResource.getRelation(rootClass,Ri)</cell></row><row><cell></cell><cell cols="2">8: relate(relation,rootClass,Ri)</cell></row><row><cell></cell><cell cols="2">9: end for</cell></row><row><cell></cell><cell cols="2">10: end if</cell></row><row><cell>General</cell><cell cols="2">11: Cj ← createClass(cej)</cell></row><row><cell></cell><cell>20:</cell><cell>end if</cell></row><row><cell></cell><cell>21:</cell><cell>relation ← ExternalResource.getRelation(cei,cej)</cell></row><row><cell></cell><cell>22:</cell><cell>relate(relation,cei,cej)</cell></row><row><cell></cell><cell cols="2">23: end for</cell></row><row><cell></cell><cell cols="2">24: add(allChildren,children)</cell></row><row><cell></cell><cell cols="2">25: end for</cell></row><row><cell></cell><cell cols="2">26: noP arentT erms ← allChildren</cell></row><row><cell></cell><cell cols="2">27: removeAllTerms(allchildren)</cell></row><row><cell></cell><cell cols="2">28: until isEmpty(noP arentT erms)</cell></row><row><cell></cell><cell></cell><cell>Continued on next page</cell></row></table><note><p>repeat 12: for cei ∈ noP arentT erms do 13: if not alreadyCreatedClassFor(cei) then 14: Ci ← createClass(cei) 15: end if 16: children ← childrenOf(cei) 17: for cej ∈ children do 18: if not alreadyCreatedClassFor(cej) then 19:</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_23"><head>Table 7 .</head><label>7</label><figDesc>4: Pattern for re-engineering a classification scheme following the flattened data model into an ontology schema (continued).</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell></cell><cell>Require: Identification of the parent/child by using the flattened model</cell></row><row><cell></cell><cell>1: noP arentT erms ← [HigherEducation;Higher SecondaryEducation]</cell></row><row><cell></cell><cell>2: // noP arentT erms.length=2 &gt; 1</cell></row><row><cell></cell><cell>3: entityN ame ← Education Title</cell></row><row><cell></cell><cell>4: rootClass ← createClass(entityN ame)</cell></row><row><cell></cell><cell>6: R1 ← createClass(Higher Education)</cell></row><row><cell></cell><cell>7: relation1 ← ExternalResource.getRelation(rootClass,R1)</cell></row><row><cell></cell><cell>6: R2 ← createClass(Higher Secondary Education)</cell></row><row><cell></cell><cell>7: relation2 ← ExternalResource.getRelation(rootClass,R2)</cell></row><row><cell></cell><cell>16: children ← childrenOf(Higher Education)</cell></row><row><cell></cell><cell>16: children ← [Agricultural Professional Institute]</cell></row><row><cell></cell><cell>19: C1 ← createClass(Agricultural Professional Institute)</cell></row><row><cell></cell><cell>21: rel1 ← ExternalResource.getRelation(R1,C1)</cell></row><row><cell></cell><cell>16: children ← childrenOf(Higher Secondary Education)</cell></row><row><cell></cell><cell>16: children ← [Commercial Professional Institute]</cell></row><row><cell></cell><cell>19: C2 ← createClass(Commercial Professional Institute)</cell></row><row><cell></cell><cell>21: rel2 ← ExternalResource.getRelation(R2,C2)</cell></row><row><cell></cell><cell>26: noP arentT erms ← [Agricultural Professional Institute;Commercial</cell></row><row><cell>Example</cell><cell>Professional Institute] 16: children ← childrenOf(Agricultural Professional Institute)</cell></row><row><cell></cell><cell>16: children ← [Fruit Expert;Olive Expert]</cell></row><row><cell></cell><cell>19: C3 ← createClass(Fruit Expert)</cell></row><row><cell></cell><cell>21: rel3 ← ExternalResource.getRelation(C1,C3)</cell></row><row><cell></cell><cell>19: C4 ← createClass(Olive Expert)</cell></row><row><cell></cell><cell>21: rel4 ← ExternalResource.getRelation(C1,C4)</cell></row><row><cell></cell><cell>16: children ← childrenOf(Commercial Professional Institute)</cell></row><row><cell></cell><cell>16: children ← [Accounting Analyst;Commercial Operator]</cell></row><row><cell></cell><cell>19: C5 ← createClass(Accounting Analyst)</cell></row><row><cell></cell><cell>21: rel5 ← ExternalResource.getRelation(C2,C5)</cell></row><row><cell></cell><cell>19: C6 ← createClass(Commercial Operator)</cell></row><row><cell></cell><cell>21: rel6 ← ExternalResource.getRelation(C2,C6)</cell></row><row><cell></cell><cell>26: noP arentT erms ← [Fruit Expert;Olive Expert;Accounting Ana-</cell></row><row><cell></cell><cell>lyst;Commercial Operator]</cell></row><row><cell></cell><cell>16: children ← ∅ ← childrenOf(Fruit Expert)</cell></row><row><cell></cell><cell>16: children ← ∅ ← childrenOf(Olive Expert)</cell></row><row><cell></cell><cell>16: children ← ∅ ← childrenOf(Accounting Analyst)</cell></row><row><cell></cell><cell>16: children ← ∅ ← childrenOf(Commercial Operator)</cell></row><row><cell></cell><cell>26: noP arentT erms ← ∅</cell></row><row><cell>Time Complexity</cell><cell>O(n 2 )</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_24"><head>Table 7 .</head><label>7</label><figDesc>6: Pattern for re-engineering a classification scheme following the adjacency list data model into an ontology (continued).</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell></cell><cell>2: mainClass ← createClass(WaterArea)</cell></row><row><cell></cell><cell>3: relation ← subClassOf</cell></row><row><cell></cell><cell>4: relate(relation,mainClass,mainClass)</cell></row><row><cell></cell><cell>5: csT erms ← [Environmental area;Jurisdiction area;Fishing Statis-</cell></row><row><cell></cell><cell>tical area;Inland/marine;Ocean;North/South/Equatorial;FAO statistical</cell></row><row><cell></cell><cell>area;Areal grid system]</cell></row><row><cell></cell><cell>7: I1 ← createInstance(Environmental area)</cell></row><row><cell></cell><cell>8: setInstanceOfClass(I1,mainClass)</cell></row><row><cell></cell><cell>7: I2 ← createInstance(Jurisdiction area)</cell></row><row><cell></cell><cell>8: setInstanceOfClass(I2,mainClass)</cell></row><row><cell>Example</cell><cell>7: I3 ← createInstance(Fishing Statistical area) 8: setInstanceOfClass(I3,mainClass)</cell></row><row><cell></cell><cell>7: I4 ← createInstance(Inland/marine)</cell></row><row><cell></cell><cell>8: setInstanceOfClass(I4,mainClass)</cell></row><row><cell></cell><cell>7: I5 ← createInstance(Ocean)</cell></row><row><cell></cell><cell>8: setInstanceOfClass(I5,mainClass)</cell></row><row><cell></cell><cell>7: I6 ← createInstance(North/South/Equatorial)</cell></row><row><cell></cell><cell>8: setInstanceOfClass(I6,mainClass)</cell></row><row><cell></cell><cell>7: I7 ← createInstance(FAO statistical area)</cell></row><row><cell></cell><cell>8: setInstanceOfClass(I7,mainClass)</cell></row></table><note><p>7: I8 ← createInstance(Areal grid system)</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_25"><head>Table 7 .</head><label>7</label><figDesc>7: Pattern for re-engineering a classification scheme following the snowflake data model into an ontology (continued).</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell>(UML) Example</cell><cell></cell></row><row><cell>Solution Ontology</cell><cell></cell></row></table><note><p>PROCESS: How to Re-engineer General 1: entityN ame ← name of the entity that contains the c.s. terms 2: mainClass ← createClass(entityN ame) 3: relation ← subClassOf 4: relate(relation,mainClass,mainClass) 5: csT erms ← classification scheme terms 6: for csi ∈ csT erms do 7: Ii ← createInstance(csi) 8: setInstanceOfClass(Ii,mainClass) 9: end for</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_26"><head>Table 7 .</head><label>7</label><figDesc>8: Pattern for re-engineering a classification scheme following the flattened data model into an ontology.</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell></cell><cell>General Information</cell></row><row><cell></cell><cell>Pattern for Re-engineering a Classification Scheme following the Flattened</cell></row><row><cell>Name</cell><cell>Data model into an Ontology</cell></row><row><cell>Identifier</cell><cell>PR-NOR-CLAX-13</cell></row><row><cell>Type of Component</cell><cell>Pattern for Re-engineering Non-ontological Resource (PR-NOR)</cell></row><row><cell></cell><cell>Use Case</cell></row><row><cell></cell><cell>Re-engineering a classification scheme following the flattened model, to design</cell></row><row><cell>General</cell><cell>an ontology</cell></row><row><cell>Example</cell><cell>Suppose that someone wants to build an ontology based on a classification pub-lished as one table with a column for each classification level.</cell></row><row><cell></cell><cell>Continued on next page</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_27"><head>Table 7 .</head><label>7</label><figDesc>8: Pattern for re-engineering a classification scheme following the flattened data model into an ontology (continued).</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell>(UML) Example</cell><cell></cell></row><row><cell>Solution Ontology</cell><cell></cell></row></table><note><p>PROCESS: How to Re-engineer General 1: entityN ame ← name of the entity that contains the c.s. terms 2: mainClass ← createClass(entityN ame) 3: relation ← subClassOf 4: relate(relation,mainClass,mainClass) 5: csT erms ← classification scheme terms 6: for csi ∈ csT erms do 7: Ii ← createInstance(csi) 8: setInstanceOfClass(Ii,mainClass) 9: end for</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_28"><head>Table 8 .</head><label>8</label><figDesc>2: Pattern for re-engineering a thesaurus following the relation-based model, into an ontology schema.</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell></cell><cell>General Information</cell></row><row><cell></cell><cell>Pattern for Re-engineering a thesaurus following the Relation-based Model,</cell></row><row><cell>Name</cell><cell>into an Ontology Schema</cell></row><row><cell>Identifier</cell><cell>PR-NOR-TSTX-02</cell></row><row><cell></cell><cell>Continued on next page</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_29"><head>Table 8 .</head><label>8</label><figDesc>2: Pattern for re-engineering a thesaurus following the relation-based model, into an ontology schema (continued).</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_30"><head>Table 8 .</head><label>8</label><figDesc>3: Pattern for re-engineering a thesaurus following the record-based data model into an ontology (continued).</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_31"><head>Table 8 .</head><label>8</label><figDesc>4: Pattern for re-engineering a thesaurus following the relation-based model into an ontology (continued).</figDesc><table><row><cell>Slot</cell><cell>Value</cell></row><row><cell></cell><cell>1: entityN ame ← name of the entity that contains the thesaurus terms</cell></row><row><cell></cell><cell>1: entityN ame ← AgrovocTerm</cell></row><row><cell></cell><cell>2: mainClass ← createClass(entityN ame)</cell></row><row><cell></cell><cell>3: relation ← subClassOf</cell></row><row><cell></cell><cell>4: relate(relation,mainClass,mainClass)</cell></row><row><cell></cell><cell>5: relation2 ← relatedClass</cell></row><row><cell></cell><cell>6: relate(relation2,mainClass,mainClass)</cell></row><row><cell></cell><cell>7: T T erms ← thesaurus terms</cell></row><row><cell></cell><cell>7: T T erms ← [Poaceae;Cereals;Rice;Oryza]</cell></row><row><cell></cell><cell>10: I1 ← createInstance(Poaceae)</cell></row><row><cell></cell><cell>11: setInstanceOfClass(I1,mainClass)</cell></row><row><cell>Example</cell><cell>13: U F T erms ← ∅ ← usedForTermOf(Poaceae)</cell></row><row><cell></cell><cell>10: I2 ← createInstance(Cereals)</cell></row><row><cell></cell><cell>11: setInstanceOfClass(I2,mainClass)</cell></row><row><cell></cell><cell>13: U F T erms ← ∅ ← usedForTermOf(Cereals)</cell></row><row><cell></cell><cell>10: I3 ← createInstance(Rice)</cell></row><row><cell></cell><cell>11: setInstanceOfClass(I3,mainClass)</cell></row><row><cell></cell><cell>13: U F T erms ← usedForTermOf(Rice)</cell></row><row><cell></cell><cell>13: U F T erms ← [Paddy] // using the record-based model</cell></row><row><cell></cell><cell>15: SOE(Rice,Paddy)</cell></row><row><cell></cell><cell>10: I4 ← createInstance(Oryza)</cell></row><row><cell></cell><cell>11: setInstanceOfClass(I4,mainClass)</cell></row><row><cell></cell><cell>13: U F T erms ← ∅ ← usedForTermOf(Oryza)</cell></row><row><cell>Time Complexity</cell><cell>O(n)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_34"><head>Table 11 .</head><label>11</label><figDesc>4: Standards, codes and classifications reused</figDesc><table><row><cell>Domain</cell><cell>Candidate Standards/-</cell><cell cols="2">Selected Stan-</cell><cell>Justification</cell><cell></cell></row><row><cell></cell><cell>Classifications</cell><cell cols="2">dards /Classi-</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="2">fications</cell><cell></cell><cell></cell></row><row><cell>Economic Sector</cell><cell>ISIC, NACE, NAICS</cell><cell>NACE</cell><cell></cell><cell cols="3">Best Coverage and European</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>scope</cell><cell></cell></row><row><cell>Education Fields</cell><cell>ISCED 97, FOET</cell><cell>FOET</cell><cell></cell><cell cols="3">Best Coverage and European</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Scope</cell><cell></cell></row><row><cell>Education Levels</cell><cell>ISCED 97</cell><cell cols="2">ISCED 97</cell><cell cols="3">Worldwide scope, widely ac-</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>cepted</cell><cell></cell></row><row><cell>Currency</cell><cell>Pacific Exchange, ISO</cell><cell cols="2">ISO 4217</cell><cell cols="3">Worldwide scope, widely ac-</cell></row><row><cell></cell><cell>4217, WordAtlas</cell><cell></cell><cell></cell><cell>cepted</cell><cell></cell></row><row><cell>Geographic</cell><cell>ISO 3166, Regions of the</cell><cell cols="2">ISO 3166</cell><cell cols="3">Worldwide scope, widely ac-</cell></row><row><cell></cell><cell>World</cell><cell></cell><cell></cell><cell>cepted</cell><cell></cell></row><row><cell>Language</cell><cell>ISO 639</cell><cell cols="2">ISO 639</cell><cell cols="3">Worldwide scope, widely ac-</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>cepted</cell><cell></cell></row><row><cell>Language Levels</cell><cell>CEFR</cell><cell>CEFR</cell><cell></cell><cell cols="3">European scope, widely ac-</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>cepted</cell><cell></cell></row><row><cell>Driving License</cell><cell>EU Driving License</cell><cell>EU</cell><cell>Driving</cell><cell cols="2">European legislation</cell></row><row><cell></cell><cell></cell><cell cols="2">License</cell><cell></cell><cell></cell></row><row><cell>Skills</cell><cell>EURES</cell><cell cols="2">EURES</cell><cell cols="3">Coverage and European scope</cell></row><row><cell>Contract types</cell><cell>LE FOREM proprietary</cell><cell cols="2">Mix of both</cell><cell>Aceptable</cell><cell>Coverage</cell><cell>in</cell></row><row><cell></cell><cell>classification, ARL propri-</cell><cell cols="2">classifications</cell><cell cols="2">SEEMP scope</cell></row><row><cell></cell><cell>etary classification</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Work condition</cell><cell>LE FOREM proprietary</cell><cell cols="2">LE FOREM</cell><cell>Aceptable</cell><cell>Coverage</cell><cell>in</cell></row><row><cell></cell><cell>classification</cell><cell cols="2">proprietary</cell><cell cols="2">SEEMP scope</cell></row><row><cell></cell><cell></cell><cell cols="2">classification</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_35"><head>Labour Regulatory Ontology Skill Ontology Language Ontology Occupation Ontology Geography Ontology Time Ontology Education Ontology Driving License Ontology Compensation Ontology Economic Activity Ontology Job Offer Ontology Job Seeker Ontology</head><label></label><figDesc></figDesc><table><row><cell>EURES</cell><cell>CEF (Languages Levels)</cell></row><row><cell></cell><cell>ISO 6392 (Languages)</cell><cell>EURES</cell></row><row><cell>LE FOREM + BLL + EURES</cell><cell></cell><cell>EURES</cell></row><row><cell></cell><cell></cell><cell>ISO 3166</cell></row><row><cell></cell><cell></cell><cell>DAML Time</cell></row><row><cell></cell><cell></cell><cell>Ontology</cell></row><row><cell>Competence Ontology</cell><cell></cell><cell>has date of birth</cell></row><row><cell>ISO 4217</cell><cell></cell></row><row><cell></cell><cell></cell><cell>FOET (Education Fields)</cell></row><row><cell></cell><cell></cell><cell>ISCED97 (Education Levels)</cell></row><row><cell>European</cell><cell></cell></row><row><cell>Legislation</cell><cell></cell></row><row><cell></cell><cell></cell><cell>Ad hoc wrapper</cell></row><row><cell></cell><cell></cell><cell>External Sources</cell></row><row><cell></cell><cell></cell><cell>NACE Rev. 1.1</cell></row></table><note><p>subClassOf subClassOf Figure 11.1: SEEMP Reference Ontology</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_36"><head>Table 11 .</head><label>11</label><figDesc>6: SEEMP Reference Ontology statistical data</figDesc><table><row><cell>Ontology</cell><cell cols="3">Concepts Attributes Axioms</cell><cell cols="2">Instances Efforts</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(man.months)</cell></row><row><cell cols="2">SEEMP RO 1985</cell><cell>315</cell><cell>1037</cell><cell>1449</cell><cell>6</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_37"><head></head><label></label><figDesc>11   </figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_38"><head>•</head><label></label><figDesc>Regions of the World 12Activity 2. Assess the set of candidate non-ontological resources Once we had the set of candidate non-ontological resources, we needed to assess them according to the following criteria: precision, coverage, consensus, and quality of the resources.Task 2.2 Calculate precisionIt was impossible to cover all the geographic locations in the ORSD. Thus, we used a constant K that represents the complete set of geographical locations. Next, we present the precision for each geographic location classification. Calculate coverage Again, it was impossible to cover all the geographic locations in the ORSD. Thus, we used a constant K that represents the complete set of geographic locations. Next, we present the coverage for each geographic location classification.</figDesc><table><row><cell></cell><cell>CHAPTER 11. EVALUATION</cell></row><row><cell cols="2">Task 2.1 Extract lexical entries</cell></row><row><cell cols="2">Within this task we extracted the lexical entries of the aforementioned geo-</cell></row><row><cell cols="2">graphic location classifications. For this purpose, we used TreeTagger 13 , a syn-</cell></row><row><cell>tactic annotator.</cell><cell></cell></row><row><cell>P recision =</cell><cell>card{{N ORLexicalEntries} ∩ {ORSDT erminology}} card{N ORLexicalEntries}</cell></row><row><cell cols="2">• ISO3166 = 195∩K 200 = 195 200 = 0.975</cell></row><row><cell cols="2">• Guidetoregionsof theW orld = 102∩K 193 = 102 193 = 0.528</cell></row><row><cell cols="2">• Regionsof theW orld = 110∩K 154 = 110 154 = 0.714</cell></row><row><cell>Task 2.3 Coverage =</cell><cell>card{{N ORLexicalEntries} ∩ {ORSDT erminology}} card{ORSDT erminology}</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_39"><head>Table 11 .</head><label>11</label><figDesc>7: Assessment table for the mIO! geographical locations</figDesc><table><row><cell>NOR</cell><cell cols="4">Precision Coverage Consensus Quality</cell></row><row><cell>ISO 3166</cell><cell>0.975</cell><cell>195 / K</cell><cell>yes</cell><cell>yes</cell></row><row><cell>Guide to regions of</cell><cell>0.528</cell><cell>102 / K</cell><cell>no</cell><cell>no</cell></row><row><cell>the World</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Regions of the</cell><cell>0.714</cell><cell>110 / K</cell><cell>no</cell><cell>no</cell></row><row><cell>World</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="5">Activity 3. Select the most appropriate non-ontological resources</cell></row><row><cell cols="5">According to Table 11.7 we selected the following non-ontological resource:</cell></row><row><cell>ISO 3166.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_40"><head>Table 11 .</head><label>11</label><figDesc>8: mIO! Ontology statistical data</figDesc><table><row><cell>Ontology</cell><cell cols="3">Concepts Attributes Axioms</cell><cell cols="2">Instances Efforts</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(man.months)</cell></row><row><cell>mIO!</cell><cell>432</cell><cell>276</cell><cell>154</cell><cell>120</cell><cell>3</cell></row><row><cell>Ontology</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_41"><head>Table 11 .</head><label>11</label><figDesc>9: Resources utilized in the experiment</figDesc><table><row><cell>Name</cell><cell>Type</cell><cell>Data Model</cell><cell cols="2">Implementation N. of</cell><cell>N.</cell><cell>of</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>terms</cell><cell>terms</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">covered</cell></row><row><cell>ASFA</cell><cell>thesaurus</cell><cell>record-based</cell><cell>XML</cell><cell>9882</cell><cell>188</cell></row><row><cell>ETT</cell><cell>thesaurus</cell><cell>record-based</cell><cell>XML</cell><cell>2522</cell><cell>337</cell></row><row><cell>ACM</cell><cell>classification</cell><cell>adjacency list</cell><cell>XML</cell><cell>1606</cell><cell>223</cell></row><row><cell></cell><cell>scheme</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>FOET</cell><cell>classification</cell><cell>path enumeration</cell><cell>spreadsheet</cell><cell>127</cell><cell>112</cell></row><row><cell></cell><cell>scheme</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">BioLexicon lexicon</cell><cell>relation-based</cell><cell>database</cell><cell>53876</cell><cell>150</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_42"><head>Table 11 .</head><label>11</label><figDesc>10: Similarity values of every ontology generated with the Gold Standard ontology.</figDesc><table><row><cell cols="3">Similarity values between ontologies generated with the gold standard</cell></row><row><cell></cell><cell>Cider</cell><cell>StrucSubsDistAlignment</cell></row><row><cell>ASFA</cell><cell>0.754</cell><cell>0.631</cell></row><row><cell>ETT</cell><cell>0.713</cell><cell>0.745</cell></row><row><cell>ACM</cell><cell>0.620</cell><cell>0.870</cell></row><row><cell>FOET</cell><cell>0.621</cell><cell>0.753</cell></row><row><cell>BioLexicon</cell><cell>0.515</cell><cell>0.793</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_43"><head></head><label></label><figDesc>4. This positive evidence is presented in Sections 11.1.4 and 11.2.4. Moreover, based on the comments and results obtained in the experiments, we have demonstrated that the methodological guidelines and technological support proposed are really valuable and useful for guiding engineers with no previous experience in building a huge ontology network, especially, if the network needs to be solidly grounded 11.3. EVALUATION SUMMARY in NORs.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_44"><head>Table 12 .</head><label>12</label><figDesc>4: A comparative analysis of the three most representative methods and the pattern-based method. Ontology features</figDesc><table><row><cell>Features</cell><cell>Heep et al.</cell><cell>Hyvönen et al.</cell><cell>Soerger et al.</cell><cell>Villazón-</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Terrazas</cell></row><row><cell></cell><cell></cell><cell>Ontology</cell><cell></cell><cell></cell></row><row><cell>Components</cell><cell>classes,</cell><cell>classes,</cell><cell>classes,</cell><cell>classes,</cell></row><row><cell></cell><cell>relations</cell><cell>attributes,</cell><cell>attributes,</cell><cell>attributes,</cell></row><row><cell></cell><cell></cell><cell>relations</cell><cell>relations</cell><cell>relations,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>instances</cell></row><row><cell>Language</cell><cell>RDF(S)/OWL-</cell><cell>RDF(S)</cell><cell>OWL-DL</cell><cell>OWL Lite/RDF</cell></row><row><cell></cell><cell>DLP</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Single /</cell><cell>single</cell><cell>single</cell><cell>single</cell><cell>single</cell></row><row><cell>Several</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>http://knowledgeweb.semanticweb.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>http://www.sekt-project.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>http://www.nlm.nih.gov/mesh/umlsforelis.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>http://www.cks.nhs.uk/home</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_4"><p>http://www.neon-project.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_5"><p>http://www.w3.org/2001/sw/BestPractices/OEP/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_6"><p>http://www.gong.manchester.ac.uk/odp/html/index.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_7"><p>http://ontologydesignpatterns.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="13" xml:id="foot_8"><p>http://patterns.dataincubator.org/book/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14" xml:id="foot_9"><p>http://www.seemp.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_10"><p>Provenance focuses on describing and understanding where and how data is produced, actors involved in its production, and processes applied before the arrival of data to the collection from which it is now accessed<ref type="bibr" target="#b93">[GPC08]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_11"><p>http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_ detail.htm?csnumber=29557</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_12"><p>the EXPRESS file is a computer-interpretable of ISO 15926-2 http://www.iso.org/ iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=38047</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_13"><p>http://swoogle.umbc.edu</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_14"><p>http://www.flickr.com/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_15"><p>http://wordnet.princeton.edu/obtain</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_16"><p>http://www.swi-prolog.org/packages/semweb.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_17"><p>http://www.loa-cnr.it/DOLCE.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_18"><p>http://www.nlm.nih.gov/research/umls/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_19"><p>http://www.isi.edu/isd/LOOM/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_20"><p>ALC allows for the construction of concept hierarchies.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_21"><p>Integrated Public Sector Vocabulary http://www.esd.org.uk/standards/ipsv/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="13" xml:id="foot_22"><p>Common Thesaurus for Audiovisual Archives http://informatieprofessional. googlepages.com/gtaa</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14" xml:id="foot_23"><p>Medical Subject Headings http://www.nlm.nih.gov/mesh/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="15" xml:id="foot_24"><p>http://www.getty.edu/research/conducting_research/vocabularies/ aat/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_25"><p>http://vesa.lib.helsinki.fi/ http://www.loa-cnr.it/DOLCE.html http://www.yso.fi/onto/yso</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="19" xml:id="foot_26"><p>http://www.fao.org/aims/ag_intro.htm</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="20" xml:id="foot_27"><p>http://kaon.semanticweb.org/alphaworld/reverse/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="21" xml:id="foot_28"><p>http://flora.sourceforge.net/aboutFlogic.php</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="22" xml:id="foot_29"><p>http://www.w3.org/Submission/2004/SUBM-RDQL-20040109/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="23" xml:id="foot_30"><p>http://www.w3.org/TR/xquery/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="24" xml:id="foot_31"><p>http://www.ifla.org/VI/5/reports/rep4/42.htm#chap2</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="25" xml:id="foot_32"><p>http://www.x12.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="26" xml:id="foot_33"><p>http://www.heppnetz.de/projects/skos2gentax/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="27" xml:id="foot_34"><p>http://www.w3.org/2004/02/skos/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="28" xml:id="foot_35"><p>http://kaon.semanticweb.org/alphaworld/reverse/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="29" xml:id="foot_36"><p>www.oeg-upm.net/index.php/en/downloads/9-r2o-odempaster</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="30" xml:id="foot_37"><p>http://www4.wiwiss.fu-berlin.de/bizer/d2r-server</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="31" xml:id="foot_38"><p>http://www.topbraidcomposer.com/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="32" xml:id="foot_39"><p>http://www4.wiwiss.fu-berlin.de/bizer/d2rq/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="33" xml:id="foot_40"><p>http://rhizomik.net/redefer/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="34" xml:id="foot_41"><p>http://www.mindswap.org/ ˜mhgrove/convert/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="35" xml:id="foot_42"><p>http://simile.mit.edu/repository/RDFizers/flat2rdf/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="36" xml:id="foot_43"><p>http://www.aifb.uni-karlsruhe.de/WBS/pha/bib/index.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="37" xml:id="foot_44"><p>http://ontoware.org/projects/swrc/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="38" xml:id="foot_45"><p>http://www.mindswap.org/ ˜Erreck/excel2rdf.shtml</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="44" xml:id="foot_46"><p>http://www.gong.manchester.ac.uk/odp/html/index.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="45" xml:id="foot_47"><p>http://ontologydesignpatterns.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="46" xml:id="foot_48"><p>http://patterns.dataincubator.org/book/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_49"><p>http://ontologydesignpatterns.org/wiki/Submissions:ReengineeringODPs</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_50"><p>([A2,A4], [H5], [R7,R9,R11])</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_51"><p>http://ontologydesignpatterns.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_52"><p>http://reimdoc.atosorigin.es/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_53"><p>http://knowledgeweb.semanticweb.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_54"><p>http://reimdoc.atosorigin.es/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_55"><p>http://knowledgeweb.semanticweb.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_56"><p>http://www.neon-project.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_57"><p>http://seemp.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_58"><p>Along this thesis we use either NOR or Non-ontological resource without distinction.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_59"><p>http://www.fao.org/fi/glossary/default.asp</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_60"><p>http://wordnet.princeton.edu/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_61"><p>http://www.fao.org/figis/servlet/RefServlet</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_62"><p>http://www.fao.org/agrovoc/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_63"><p>http://www.vanderwal.net/folksonomy.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_64"><p>http://del.icio.us/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_65"><p>http://www.rosettanet.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_66"><p>http://www.edibasics.co.uk/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_67"><p>http://www.unspsc.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_68"><p>http://wordnet.princeton.edu/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_69"><p>http://www.nlm.nih.gov/pubs/factsheets/umlsmeta.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="13" xml:id="foot_70"><p>http://www.nlm.nih.gov/mesh/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14" xml:id="foot_71"><p>http://www.getty.edu/research/tools/vocabularies/aat/index.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="15" xml:id="foot_72"><p>http://www.ilo.org/public/english/bureau/stat/isco/index.htm</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="25" xml:id="foot_73"><p>Please note that not all classes and properties are included. The ontology is available for downloading at http://mccarthy.dia.fi.upm.es/normv</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="26" xml:id="foot_74"><p>This document is the outcome of the Ontology Specification Activity<ref type="bibr" target="#b141">[SFGPVT09]</ref> </p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="27" xml:id="foot_75"><p>A deep analysis of the quality of the resource is out of the scope of this thesis</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_76"><p>http://ontologydesignpatterns.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_77"><p>Ontology Design Patterns are included in the ODP portal. The ODP portal is a Semantic Web portal dedicated to ontology design best practices for the Semantic Web, emphasizing particulary ontology design patterns (OPs)</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_78"><p>http://www.dbpedia.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_79"><p>Attributive adjectives are part of the noun phrase headed by the noun they modify; for example, happy is an attributive adjective in "happy people". In English, attributive adjectives usually precede their nouns in simple phrases but often follow their nouns when the adjective is modified or qualified by a phrase acting as an adverb.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_80"><p>http://ontologydesignpatterns.org/wiki/Submissions:PartOf</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_81"><p>http://ontologydesignpatterns.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_82"><p>http://www.fao.org/figis/servlet/RefServlet</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_83"><p>http://www.fao.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_84"><p>http://www.fao.org/figis/servlet/RefServlet</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_85"><p>http://www.fao.org/agrovoc/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_86"><p>http://www.cl.cam.ac.uk/research/nl/acquilex/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_87"><p>http://www.wtec.org/loyola/kb/c5_s2.htm</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_88"><p>http://www.ilc.cnr.it/EAGLES/home.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_89"><p>http://aune.lpl.univ-aix.fr/projects/multext/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_90"><p>http://www.elda.fr/catalogue/en/text/doc/parole.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_91"><p>http://www.ub.edu/gilcub/SIMPLE/simple.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_92"><p>http://www.ilc.cnr.it/EAGLES96/isle/ISLE_Home_Page.htm</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_93"><p>Extract, transform, and load (ETL) of legacy data sources, is a process that involves: (1) extracting data from the outside resources, (2) transforming data to fit operational needs, and (3) loading data into the end target resources<ref type="bibr" target="#b120">[KC04]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_94"><p>2 http://www4.fao.org/asfa/asfa.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_95"><p>htm 3 http://mccarthy.dia.fi.upm.es/ontologies/asfa.owl</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_96"><p>Attributive adjectives are part of the noun phrase headed by the noun they modify; for example, happy is an attributive adjective in "happy people". In English, the attributive adjective usually precedes the noun in simple phrases, but often follows the noun when the adjective is modified or qualified by a phrase acting as an adverb.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_97"><p>http://ontologydesignpatterns.org/wiki/Submissions:PartOf</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_98"><p>http://dbpedia.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_99"><p>http://owlapi.sourceforge.net/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_100"><p>http://www.mediawiki.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_101"><p>http://www.semantic-mediawiki.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_102"><p>http://www.mediawiki.org/Extension:SemanticForm</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_103"><p>The full list of the extensions can be found at http://ontologydesignpatterns.org/ wiki/Special:Version</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_104"><p>http://stlab.istc.cnr.it/stlab/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_105"><p>http://www.seemp.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_106"><p>http://www.cenitmio.es/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_107"><p>http://mccarthy.dia.fi.upm.es/master/rd/homework/resources/ett.xml</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_108"><p>Attributive adjectives are part of the noun phrase headed by the noun they modify; for example, happy is an attributive adjective in "happy people". In English, attributive adjectives usually precede their nouns in simple phrases, but often follow their nouns when the adjective is modified or qualified by a phrase acting as an adverb.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_109"><p>http://ec.europa.eu/eurostat/ramon/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_110"><p>http://online.onetcenter.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_111"><p>http://www.eurodyn.com/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_112"><p>http://www.wsmo.org/wsml/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_113"><p>http://www.cenitmio.es/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_114"><p>http://www.iso.org/iso/en/prods-services/iso3166ma/index.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_115"><p>http://www.countriesandcities.com/regions/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_116"><p>http://park.org/Regions/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="13" xml:id="foot_117"><p>http://www.ims.uni-stuttgart.de/projekte/corplex/TreeTagger/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14" xml:id="foot_118"><p>http://geo.linkeddata.es/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="15" xml:id="foot_119"><p>The ontologies are available at http://mccarthy.dia.fi.upm.es/ontologies</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="16" xml:id="foot_120"><p>http://oaei.ontologymatching.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="17" xml:id="foot_121"><p>Available at http://ec.europa.eu/eurostat/ramon/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="18" xml:id="foot_122"><p>http://mccarthy.dia.fi.upm.es/master/it/homework/cepa.zip</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="19" xml:id="foot_123"><p>http://mccarthy.dia.fi.upm.es/master/it/homework/ett.zip</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="20" xml:id="foot_124"><p>http://geo.linkeddata.es/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_125"><p>http://www.rosettanet.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_126"><p>http://www.edibasics.co.uk/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_127"><p>http://ontologydesignpatterns.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_128"><p>Extract, transform, and load (ETL) of legacy data sources, is a process that involves: (1) extracting data from the outside resources, (2) transforming it to fit operational needs, and (3) loading into the end target resources<ref type="bibr" target="#b120">[KC04]</ref>.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_129"><p>http://www.heppnetz.de/projects/goodrelations/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_130"><p>http://richard.cyganiak.de/2007/10/lod/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_131"><p>http://www.w3.org/TR/cooluris/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_132"><p>http://sindice.com/</p></note>
		</body>
		<back>

			
			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head></div>
			</div>


			<div type="funding">
<div><p>I want to mention that most of this work was performed in the context of two European Projects: the <rs type="projectName">NeOn Project</rs> (<rs type="grantNumber">FP6-027595</rs>), and the <rs type="projectName">SEEMP</rs> Project (<rs type="grantNumber">FP6-027347</rs>). <rs type="projectName">Methodological Tool Provenance Research work Guidelines Support Hepp et al. [HdB07] No No No Hakkarainen et al. [HHST06] No No No Abbasi et al</rs>. [ASC07] No No <rs type="person">No Maala</rs> et al. [MDA07] No No No <rs type="person">Van Assem</rs> et al. [vAGS06] No No <rs type="person">Yes Gangemi</rs> et al. [GNV03, GGMO03] No No <rs type="person">No Hahn</rs> et al. [Hah03, HS03] No No No <rs type="person">Van Assem</rs> et al. [vAMSW04] No No No <rs type="person">Van Assem</rs> et al. [vAMMS06] No No <rs type="person">No Wielinga</rs> et al. [WSWS01] No No <rs type="person">No Hyvönen</rs> et al. [HVTS08] No No No Soergel et al. [SLL + <rs type="grantNumber">04</rs>, <rs type="grantNumber">LS06</rs>] No No <rs type="person">No Stojanovic</rs> et al. [SSV02] No No <rs type="person">No Barrasa</rs> et al. [<rs type="grantNumber">BCGP04</rs>, <rs type="person">Bar07] No No No García</rs> et al. [GC05] No No No An et al. [AM05] No No <rs type="person">No Cruz</rs> et al. [CXH04] No No <rs type="person">No Foxvog</rs> et al. [FB06] No No No</p></div>
			</div>
			<listOrg type="funding">
				<org type="funded-project" xml:id="_9kfhpHC">
					<idno type="grant-number">FP6-027595</idno>
					<orgName type="project" subtype="full">NeOn Project</orgName>
				</org>
				<org type="funded-project" xml:id="_b9sypXW">
					<idno type="grant-number">FP6-027347</idno>
					<orgName type="project" subtype="full">SEEMP</orgName>
				</org>
				<org type="funded-project" xml:id="_n6TZtEf">
					<idno type="grant-number">04</idno>
					<orgName type="project" subtype="full">Methodological Tool Provenance Research work Guidelines Support Hepp et al. [HdB07] No No No Hakkarainen et al. [HHST06] No No No Abbasi et al</orgName>
				</org>
				<org type="funding" xml:id="_GHMuRKt">
					<idno type="grant-number">LS06</idno>
				</org>
				<org type="funding" xml:id="_esfpjzp">
					<idno type="grant-number">BCGP04</idno>
				</org>
			</listOrg>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>CHAPTER 5. REUSING NON-ONTOLOGICAL RESOURCES</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.">PATTERNS FOR RE-ENGINEERING NON-ONTOLOGICAL RESOURCES</head><p>• %% represents the transformation approach: TX for TBox, AX for ABox.</p><p>• ## represents a non-negative integer for numerating the patterns. It starts with 1 for TBox transformation and 10 for ABox transformation. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Use Case</head><p>General Description in natural language of the re-engineering problem addressed by the pattern for re-engineering non-ontological resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Description in natural language of an example of the re-engineering problem.</p><p>Pattern for Re-engineering Non-Ontological Resource INPUT: Resource to be Re-engineered</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Description in natural language of the non-ontological resource.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Description in natural language of an example of the non-ontological resource.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graphical Representation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Graphical representation of the non-ontological resource.</p><p>Example Graphical representation of the example of non-ontological resource.</p><p>OUTPUT: Designed Ontology General Description in natural language of the ontology created after applying the pattern for re-engineering the non-ontological resource.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graphical Representation (UML) General Solution Ontology</head><p>Graphical representation, using the UML profile <ref type="bibr" target="#b63">[BH06]</ref>, of the ontology created for the non-ontological resource being re-engineered.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(UML) Example Solution Ontology</head><p>A graphical representation example, which uses the UML profile <ref type="bibr" target="#b63">[BH06]</ref>, of the ontology created for the non-ontological resource being used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PROCESS: How to Re-engineer</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Algorithm for the re-engineering process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Application of the algorithm to the non-ontological resource example.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Time Complexity</head><p>The time complexity of the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Additional Notes</head><p>Additional notes of the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal Transformation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Formal description of the transformation made with the formal definitions of the resources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships (Optional)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relations to other modelling components</head><p>Description of any relation to other PR-NOR patterns or other ontology design patterns.</p><p>CHAPTER 6. PATTERN BASED RE-ENGINEERING METHOD </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Semantics of the Relations among the NOR Terms</head><p>The TBox transformation approach converts the resource content into an ontology schema. TBox transformation tries to impose a formal semantics on the resource by making explicit the semantics hidden in the relations of the NOR terms. To this end, each NOR term is mapped to a class, and then, the semantics of the relations Use Case</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Re-engineering a classification scheme following the path enumeration model, to design an ontology schema.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Suppose that someone wants to build an ontology based on the International Standard Classification of Occupations (for European Union purposes) ISCO-88 (COM). This classification scheme follows the path enumeration data model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pattern for Re-engineering Non-ontological Resource</head><p>INPUT: Resource to be Re-engineered</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>A non-ontological resource holds a classification scheme that follows the path enumeration model. A classification scheme is a rooted tree of terms, in which each term groups entities by some particular degree of similarity. The semantics of the hierarchical relation between parents and children terms may vary depending on the context. The path enumeration data model <ref type="bibr" target="#b67">[Bra05]</ref>, for classification schemes, takes advantage of the fact that there is one and only one path from the root to every item in the classification. The path enumeration model stores that path as a string by concatenating either the edges or the keys of the classification scheme items in the path.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>The    The pattern for re-engineering non-ontological resource, shown in Table <ref type="table">7</ref>.3, provides a guide to transform a classification scheme into an ontology schema. The classification scheme is modelled with a snowflake data model. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Use Case</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Re-engineering a classification scheme following the snowflake model, to design an ontology schema.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Suppose that someone wants to build an ontology based on an occupation hierarchical classification following the snowflake data model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pattern for Re-engineering Non-ontological Resource</head><p>INPUT: Resource to be Re-engineered</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>A non-ontological resource holds a classification scheme that follows the snowflake model. A classification scheme is a rooted tree of terms, in which each term groups entities by some particular degree of similarity. The semantics of the hierarchical relation between parent and children terms may vary depending on the context. The snowflake data model <ref type="bibr" target="#b131">[MZ06]</ref> is a normalized structure for hierarchy representations. In this case, the classification scheme items are grouped by levels or entities. There are as many groups as levels the classification scheme has. Continued on next page CHAPTER 7. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES  The pattern for re-engineering non-ontological resource, shown in Table <ref type="table">7</ref>.4, provides a guide to transform a classification scheme into an ontology schema. The classification scheme is modelled with a flattened data model. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>The ontology generated will be based on the taxonomy architectural pattern (AP-TX-01) [SFBG + 07]. The classification scheme entity will be transformed into a class. The classification scheme item relationship will be transformed either to a subClassOf relation. Finally, the content of the classification scheme will be transformed into ontology instances.</p><p>Continued on next page </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>The ontology generated will be based on the taxonomy architectural pattern (AP-TX-01) [SFBG + 07]. The classification scheme entity will be transformed into a class. The classification scheme item relationship will be transformed into a subClassOf relation. Finally, the content of the classification scheme will be transformed into ontology instances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graphical Representation (UML) General Solution Ontology</head><p>Continued on next page CHAPTER 7. PATTERNS FOR RE-ENGINEERING CLASSIFICATION SCHEMES Therefore each row has the complete path from the root to a leaf node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>The Classification of Italian Education Titles published by the National Institute of Statistics (ISTAT) is represented following a flattened model. The first level of the classification (level code) is related to the education title level which comprises values as elementary, media, university, master, etc. The second level of the classification is the type of school or institute which offers the education title. The last level is the education title itself; it has a specific specialization code and also a code which is the concatenation of the previous code levels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graphical Representation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Example OUTPUT: Designed Ontology</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>The ontology generated will be based on the taxonomy architectural pattern (AP-TX-01) [SFBG + 07]. The classification scheme entity will be transformed into a class. The classification scheme item relationship will be transformed into a subClassOf relation. Finally, the content of the classification scheme will be transformed into ontology instances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graphical Representation (UML) General Solution Ontology</head><p>Continued on next page 8.1. THESAURUS 8723 series. It provides an excellent glossary for terminology relating to the use of thesauri for indexing and retrieval. The British Standard BS 8723-2 provides guidelines for the construction and maintenance of thesauri that are intended as retrieval tools. Guidance is also given for designers of software supporting the creation and maintenance process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1.1">Components of a Thesaurus</head><p>A thesaurus is a collection of terms, and terms are the only type of entity considered in a thesaurus. Terms may be related to other terms traditionally using relationships, such as Broader Term (BT), Narrower Term (NT), Related Term (RT), Use For (UF), and Use (U/USE) <ref type="bibr" target="#b144">[Soe95]</ref>. The ISO 2788:1986 [ISO86] standard proposes a thesaurus structure and identifies the thesaurus components, presented in Figure <ref type="figure">8</ref>.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 8.2: UML representation of the thesaurus components [ISO86]</head><p>• A PreferredTerm, also known as descriptor, is used consistently to represent concepts when indexing documents. It has the following elements: (1) LexicalValue, and (2) identifier.</p><p>• A Term, which is not assigned to documents when indexing but provided as user's entry point. It has the following elements: (1) LexicalValue, and (2) identifier.</p><p>• A ScopeNote, which is a note following a term explaining its coverage, specialized usage, or rules for assigning it. The ScopeNote has a lexicalValue element. -PR-NOR-TSAX-11. The pattern for re-engineering a thesaurus following the relation-based data model into an ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.">PATTERNS FOR RE-ENGINEERING THESAURI INTO ONTOLOGIES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.1">Patterns for the TBox Transformation</head><p>These patterns transform the resource content into an ontology schema. The TBox transformation approach tries to enforce a formal semantics to the re-engineered resources, even at the cost of changing their structure [SAd + 07]. For making explicit the semantics of the BT, NT and RT relations among thesaurus terms, the patterns rely on an external resource, WordNet, as we described in Section 6.4.</p><p>For the UF/USE relations we use the logical pattern, SOE, proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref> and suggested as best practice in the context of this antipattern: the tendency to declare two classes equivalent when in fact their labels simply express synonym.</p><p>The time complexity of the algorithms described in the Section PROCESS: How to Re-engineering is polynomial O(n 2 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.1.1">Pattern for re-engineering a thesaurus following the record-based data model into an ontology schema</head><p>The pattern for re-engineering thesaurus, shown in Table <ref type="table">8</ref>.1, provides a guide to transform a thesaurus into an ontology schema. The thesaurus is modelled with a record-based data model.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>The AGROVOC Thesaurus is an structured and controlled vocabulary designed to cover the terminology of all subject fields in agriculture, forestry, fisheries, food and related domains. This thesaurus is available at http://www.fao.org/agrovoc/.  The pattern for re-engineering thesaurus, shown in Table <ref type="table">8</ref>.3, provides a guide to transform a thesaurus following the record-based data model into an ontology. The pattern transforms the resource schema into an ontology schema, and the resource content, into ontology instances.  The ontology generated will be based on the lightweight ontology architectural pattern (AP-LW-01)[SFBG + 07]. The thesaurus Term, schema component, will be transformed to a class, the hierarchical relationship will be transformed either to a subClassOf relation, the associative relationship will be transformed to an ad-hoc relation, and equivalent terms, the ones from the USE relationships, will be transformed to labels, by using the logical pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref>. Finally, the content of the thesaurus will be transformed into ontology instances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graphical Representation</head><note type="other">General</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graphical Representation (UML) General Solution Ontology (UML) Example Solution Ontology</head><p>Continued on next page  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2.">PATTERNS FOR RE-ENGINEERING THESAURI INTO ONTOLOGIES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>The AGROVOC Thesaurus is an structured and controlled vocabulary designed to cover the terminology of all subject fields in agriculture, forestry, fisheries, food and related domains. This thesaurus is available at http://www.fao.org/agrovoc/. T S -→ OS :</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graphical Representation</head><note type="other">General</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relations to other modelling components</head><p>Use the Architectural Pattern: AP-LW-01 [SFBG + 07]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3">Summary</head><p>This chapter has presented our solution for the aspects related to the re-engineering of thesauri for building ontologies. Our solution addresses some of the limitations identified in the state of art in this area. First, we review the definition of a thesaurus, including its components. Then, we provide a formal definition for the thesauri and the identified data models as well as implementations for them. Finally, we present the patterns for reengineering thesauri into ontologies, including those for the TBox and ABox transformation approaches. The time complexity of the TBox transformation algorithm is polynomial O(n 2 ), whereas that of the ABox transformation algorithm is linear O(n). This set of patterns are used within the method presented in Chapter 6.</p><p>The solutions presented in this chapter cover contribution C8, which partially addresses objective O3 (see Chapter 3). This contribution is evaluated in Sections 11.1.1 and 11.2.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.">LEXICON</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.2">Lexicon Formal Definition</head><p>We formally define a lexicon as the following tuple:</p><p>Where LS represents the schema of the lexicon, and LC represents the content of the lexicon.</p><p>The schema of the lexicon, LS, is defined as</p><p>where:</p><p>• LE = {le 1 , ..., le n }, a set of lexical entries.</p><p>• SY = {sy i , ..., sy n }, a set of synsets, where sy i ⊆ LE m .</p><p>• SR = {sr i , ..., sr n }, a set of synset relations, where sy i ⊆ SY x SY .</p><p>The content of the lexicon, LC, is defined as</p><p>which consists of:</p><p>• The three LE, SY and SR sets, as defined before.</p><p>• A LI = {li 1 , ..., li n } set whose elements are called lexical entry identifiers.</p><p>• A SI = {syi 1 , ..., syi n } set whose elements are called synset identifiers.</p><p>• A Lt L : LE → LI function called lexical entry instantiation.</p><p>• A Lt S : SY → SI function called synset instantiation.</p><p>• A Lt R : SR → SI 2 function called synset relation instantiation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.3">Lexicon Data Models</head><p>As mentioned in Section 5.1 there are different ways of representing the knowledge encoded by a particular resource. After analysing several data models for lexicons, we have identified the same data models already identified for thesauri. In this section we present these data models, which are independent of the standards described in the previous section. In order to exemplify the data models for lexicons, we use an excerpt of WordNet, shown in Figure <ref type="figure">9</ref>.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1.3.1">Record-based model</head><p>The record-based model <ref type="bibr" target="#b144">[Soe95]</ref>, which is a denormalized structure, uses a record for every element of the lexicon with information about the element, such as antonyms, hypernyms, hyponym, etc. In this model, the information is stored in large packages, and to access or change any piece of information we must get into the appropriate package. Figure <ref type="figure">9</ref>.3 depicts this data model. Information is stored in individual pieces that can be arranged in different ways. Relationship types are not defined as fields in a record, but they are simply data values in a relationship record; thus new relationship types can be introduced with ease. In this case, Figure <ref type="figure">9</ref>.4 shows there are three entities: (1) an element entity, The patterns rely on an external resource, WordNet, for making explicit the semantics of the relations among lexicon terms, as described in section 6.4. For the relations of synonyms we use the logical pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref> and suggested as best practice in the context of this antipattern: The tendency to declare two classes equivalent when in fact their labels simply express synonym.</p><p>The time complexity of the algorithms described in the SectionPROCESS: How to Re-engineering is polynomial O(n 2 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.1.1">Pattern for re-engineering a lexicon following the record-based data model into an ontology schema</head><p>The pattern for re-engineering lexicon, shown in Table <ref type="table">9</ref>.1, provides a guide to transform a lexicon into an ontology schema. The lexicon is modelled with the record-based data model.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Suppose that someone wants to build an ontology based on the BioLexicon.</p><p>The BioLexicon, and one of its variants is modelled with the record-based data model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pattern for Re-engineering Non-ontological Resources</head><p>INPUT: Resource to be Re-engineered</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>A non-ontological resource holds a lexicon that follows the record-based data model.</p><p>A lexicon is a list of words in a language along with some knowledge of how to use each word. A lexicon may be general or domain-specific; we might have, for example, a lexicon of several thousand common words of English or German, or a lexicon of the technical terms of dentistry in some language.</p><p>The record-based model <ref type="bibr" target="#b144">[Soe95]</ref> is a denormalized structure, uses a record for every element of the lexicon with the information about the element, such as antonyms, hypernyms, hyponym, etc.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Additional Notes</head><p>• Synsets, Hyponyms, Hypernyms, M eronyms, Holonyms, Synonyms are lists that do not allow duplicates. • createClass is a function that creates a class from a given synset.</p><p>• getRelation is the algorithm 1 defined in section 6.4.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given synset. • hyponymOf is a function that returns the hyponyms of a given synset.</p><p>• hypernymOf is a function that returns the hypernyms of a given synset.</p><p>• meronymOf is a function that returns the meronyms of a given synset.</p><p>• holonymOf is a function that returns the holonyms of a given synset.</p><p>• synonymOf is a function that returns the synonyms of a given synset.</p><p>• relatedSynsetOf is a function that returns the synsets related to a given synset. • remove is a function that removes a given synset from a given list.</p><p>• removeAllTerms is a function that removes all the elements of a given list.</p><p>• isEmpty checks if a list has elements or not.</p><p>• add is a function that adds the elements of a list into another list.</p><p>• SOE is a pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref> suggested as best practice in the context of this antipattern: the tendency to declare two classes equivalent when in fact their labels simply express synonym.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal Transformation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Lexicon: The pattern for re-engineering a lexicon, shown in Table <ref type="table">9</ref>.2, provides a guide to transform a lexicon into an ontology schema. The lexicon is modelled with the relation-based data model.  A lexicon is a list of words in a language along with some knowledge of how to use each word. A lexicon may be general or domain-specific; we might have, for example, a lexicon of several thousand common words of English or German, or a lexicon of the technical terms of dentistry in some language.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head><p>The relation-based data model <ref type="bibr" target="#b144">[Soe95]</ref> is a normalized structure, in which relationship types are not defined as fields in a record, but they are simply data values in a relationship record, thus new relationship types can be introduced with ease.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>The Princeton WordNet is the best known computational lexicon of English. This lexicon is available at http://wordnet.princeton.edu/.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Continued on next page</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value Additional Notes</head><p>• Synsets, Hyponyms, Hypernyms, M eronyms, Holonyms, Synonyms are lists that do not allow duplicates. • createClass is a function that creates a class from a given synset.</p><p>• getRelation is the algorithm 1 defined in section 6.4.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is an already class created for a given synset. • hyponymOf is a function that returns the hyponyms of a given synset.</p><p>• hypernymOf is a function that returns the hypernyms of a given synset.</p><p>• meronymOf is a function that returns the meronyms of a given synset.</p><p>• holonymOf is a function that returns the holonyms of a given synset.</p><p>• synonymOf is a function that returns the synonyms of a given synset.</p><p>• relatedSynsetOf is a function that returns the synsets related to a given synset.</p><p>• remove is a function that removes a given synset from a given list.</p><p>• removeAllTerms is a function that removes all the elements of a given list.</p><p>• isEmpty checks if a list has elements or not.</p><p>• add is a function that adds the elements of a list into another list.</p><p>• SOE is a pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref> suggested as best practice in the context of this antipattern: the tendency to declare two classes equivalent when in fact their labels simply express synonym.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal Transformation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Lexicon:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relations to other modelling components</head><p>Use the Architectural Pattern: AP-LW-01 [SFBG + 07]</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.2">Patterns for the ABox Transformation</head><p>These patterns transform the resource schema into an ontology schema, and the resource content, into ontology instances. The ABox transformation approach leaves the informal semantics of the re-engineered resources mostly untouched</p><p>As mentioned in Section 9.1, the schema of a lexica has the following main components: (1) a synset, which will be transformed to a class, (2) hyponymy/hypernym relations, which are mapped to subClassOf/superClassOf relations, (3) member meronym/holonym relations, which are mapped to partOf/hasPart, (4) synonym relations, which are mapped to labels by using the logical pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref>; and the content of the lexicon, which will be transformed into ontology instances.</p><p>The time complexity of the algorithms described in the Section PROCESS: How to Re-engineering is linear O(n). The pattern for re-engineering lexicon, shown in Table <ref type="table">9</ref>.3, provides a guide to transform a lexicon into an ontology. The lexicon is modelled with the recordbased data model. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>Suppose that someone wants to build an ontology based on the BioLexicon.</p><p>The BioLexicon, and one of its variants is modelled with the record-based data model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pattern for Re-engineering Non-ontological Resources</head><p>INPUT: Resource to be Re-engineered</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>A non-ontological resource holds a lexicon that follows the record-based data model.</p><p>A lexicon contains a list of words in a language along with some knowledge of how to use each word. A lexicon may be general or domain-specific; we might have, for example, a lexicon of several thousand common words of English or German, or a lexicon of the technical terms of dentistry in some language.</p><p>The record-based model <ref type="bibr" target="#b144">[Soe95]</ref> is a denormalized structure that uses a record for every element of the lexicon with information about the element, such as antonyms, hypernyms, hyponym, etc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example</head><p>The BioLexicon is a large-scale terminological resource that has been developed to address the needs emerging in text mining efforts within the biomedical domain. This lexicon is available at http://www.ebi.ac. uk/Rebholz-srv/BioLexicon/biolexicon.html Graphical Representation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Continued on next page  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Slot Value</head><p>Additional Notes</p><p>• LSynsets, Synonyms are lists that do not allow duplicates.</p><p>• createClass is a function that creates a class from a given term.</p><p>• relate is a function that relates two given classes by a given relation.</p><p>• alreadyCreatedClassFor checks if there is a class already created for a given term.</p><p>• createInstance is a function that creates an instance from a given term.</p><p>• setInstanceOfClass is a function that sets up a given instance of a given class.</p><p>• synonymsOf is a function that returns the synonyms of a given synset.</p><p>• SOE is a pattern proposed by Corcho et al. <ref type="bibr" target="#b76">[CR09]</ref> suggested as best practice in the context of the following antipattern: The tendency to declare two classes equivalent when in fact their labels simply express synonym.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Formal Transformation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General</head><p>Lexicon: The pattern for re-engineering lexicon, shown in Table <ref type="table">9</ref>.4, provides a guide to transform a lexicon into an ontology. The lexicon is modelled with the relationbased data model.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relationships</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>EVALUATION</head><p>This chapter presents the evaluation of the contributions of this thesis. The main contributions are (1) a set of methodological guidelines for reusing non-ontological resources when building ontologies, and (2) technological support for re-engineering, i.e., the PR-NOR pattern library and NOR 2 O. Therefore, the evaluation covers both the methodological and the technological aspects.</p><p>Regarding the methodological guidelines, we evaluate with the following criteria: understandability, applicability, and usability of the guidelines.</p><p>As for the technological support, we evaluate with the following criterion: quality of the software library and patterns. Thus, quality is assessed by calculating the similarity of the ontologies generated against gold standard ontologies, as well as the applicability and usability of the technology.</p><p>Table <ref type="table">11</ref>.1 gathers the aforementioned criteria used for evaluating the contributions through the set of experiments.</p><p>The evaluation is divided into two parts. First, Section 11.1 describes the evaluation of the methodological aspects related to the reuse and re-engineering of non-ontological resources for building ontologies. Then, Section 11.2 presents the evaluation of the technological support focused on the PR-NOR pattern library and the NOR 2 O software library. CHAPTER 11. EVALUATION This example refers to the manual transformation of an excerpt from a thesaurus following the guidelines and the proposed set of patterns. The purpose is to assess the understandability, applicability and usability of the methodological guidelines of the re-engineering process and of the set of patterns for carrying out the NOR Re-engineering into an OWL ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.1.1">Settings</head><p>The evaluation was carried out with participants whose background included databases, software engineering, AI, and had some experience in ontology engineering. The participants came from CHAPTER 11. EVALUATION the query results were empty, they related the terms to the default relation (see Algorithm 1 in Section 6.4). When they had to deal with a thesaurus, for the BT/NT relation, we recommended using the subClassOf relation by default. Ontology Forward Engineering. Since the goal was to create a conceptual model, the participants did not have to perform this activity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.1.3">Collecting results</head><p>We proposed the following questionnaire to the participants for collecting some empirical data. Q1. Are the guidelines proposed well explained? Q2. Do the guidelines need to be more detailed? If so, please elaborate on your comments.</p><p>Q3. Do you think that more techniques and patterns should be provided?</p><p>Q4. How can we improve the guidelines proposed? And in which tasks?</p><p>Q5. Do you find these guidelines useful?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.1.4">Findings and observations</head><p>Table <ref type="table">11</ref>.2 presents the 34 answers to the questionnaire. As a general conclusion we can state that the participants did not seem to find any problems regarding the use and understanding of each of the activities and tasks identified in the methodological guidelines. Ninety-seven percent of the participants indicated that the guidelines were well explained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Q2.</head><p>Eighty-eight percent of the participants considered that the guidelines need no more details; however twelve percent explained that they would welcome the improvement in the explanations of i) how to search for a suitable pattern (task 2.1 in the guidelines), and ii) how to perform the ontology formalization (activity 3 in the guidelines).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Q3.</head><p>One hundred percent of the participants thought that the techniques and patterns to execute each activity of the guidelines were sufficient.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Q4.</head><p>Eighty-five percent of the participants suggested including more examples of how to use the proposed guidelines and what results were expected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Q5.</head><p>One hundred percent of the participants thought that the guidelines were useful and also necessary.</p><p>From the comments received on this experiment, we can conclude that the methodological guidelines seem to be useful and understandable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 2. Assess the set of candidate non-ontological resources</head><p>The goal of this activity was to assess the set of candidate non-ontological resources. Experts of the occupation domain, software developers and ontology practitioners carried out this activity taking as input the set of candidate non-ontological resources.</p><p>Task 1. Extract lexical entries Within this task we extracted the lexical entries of the aforementioned occupation classifications. We developed an ad-hoc extraction tool for performing automatically the extraction task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Task 2. Calculate precision</head><p>Since we were dealing with occupations related to the IT domain, it was impossible to cover all the IT domain occupations already identified in the Ontology Requirements Specification Document. Thus, we used a constant K that represents the complete set of IT domain occupations. Next, we present the precision for each occupation classification. Task 3. Calculate coverage Again, since we were dealing with the occupations related to the IT domain, it was impossible to cover all the IT domain occupations in the ORSD. Thus, we used a constant K that represents the complete set of IT domain occupations. Next, we present the coverage for each occupation classification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Coverage =</head><p>card{{N ORLexicalEntries} ∩ {ORSDT erminology}} card{ORSDT erminology}</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>EVALUATION OF THE METHODOLOGICAL GUIDELINES</head><p>Task 4. Evaluate the Consensus It was important for the project that resources focused on the current European reality, because the user partners involved in SEEMP are European, and the outcoming prototype has to be validated in European scenarios. Thus, domain experts confirmed whether the resources were built with the consensus of the European community or not. They also explained that ISCO-88(COM) and EURES proprietary occupation classification contains terminology that had already reached a consensus.</p><p>Table <ref type="table">11</ref>.3 summarizes all the information of each non-ontological resource.  <ref type="table">11</ref>.3 we selected a non-ontological resource, the EURES proprietary occupation classification.</p><p>We followed the same process for selecting the non-ontological resources when building the remaining ontologies. We provide a table (see Table <ref type="table">11</ref>.4) that summarizes the selection of standards, codes, and classification accomplished for building every domain ontology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.2.2">Re-engineering non-ontological resources</head><p>In this section we present the application of the Method for Re-engineering Non-Ontological Resources within the SEEMP project. Once we select the non-ontological resource, we have to transform it into an ontology. Next, we describe the process of generating an Occupation Ontology from the EURES proprietary occupation classification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activity 1. Non-ontological resource reverse engineering</head><p>In this activity we gathered documentation on the EURES occupation classification from the European Dynamics SEEMP user partner. From this documentation we extracted the schema of the classification scheme, which consists of two tables, CVO OCCGROUP and CVO OCCUGROUP NAME. Since the data model was not available in the documentation, it was necessary to extract it for the resource implementation itself. The EURES occupation classification is modelled following the snowflake data model and is implemented in a MS Access database.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11.1.">EVALUATION OF THE METHODOLOGICAL GUIDELINES</head><p>practical to create the ontology manually. Therefore, we created an ad-hoc wrapper, implemented in Java, that reads the data from the resource implementation and automatically creates the corresponding classes and relations of the new ontology following the suggestions given by the pattern for re-engineering NORs and the conceptual model.</p><p>We followed this process for all the resources identified, being the patterns used those presented in Table <ref type="table">11</ref>.5. The SEEMP Reference Ontology (SEEMP RO) was developed following the method for reusing and re-engineering non-ontological resources. It is composed of thirteen modular ontologies: Competence, Compensation, Driving License, Economic Activity, Education, Geography, Job Offer, Job Seeker, Labour Regulatory, Language, Occupation, Skill, and Time. The main subontologies are the Job Offer and Job Seeker, which are intended to represent the structure of a job posting and a CV respectively. While these main two subontologies were built taking as a starting point some HR-XML recommendations, the others derived from some available international standards (like NACE, ISCO-88 (COM), FOET, etc.), Employment Services classifications and international codes (like ISO 3166, ISO 6392, etc.) that best fitted the European requirements. Figure <ref type="figure">11</ref>.1 presents these thirteen modular ontologies (each ontology is represented by a triangle), ten of which were obtained after re-engineering the standard/classification. The SEEMP Refer-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="12.1.">REVIEW OF THE CONTRIBUTIONS</head><p>adding examples taken from RosettaNet 1 and Electronic Data Interchange, EDI 2 .</p><p>We have presented the categorization in Chapter 5. According to the type of NOR we have classified them into classification schemes, thesauri, lexicons, folksonomies and glossaries. The identified datamodels for classifications schemes are path enumeration, adjacency list, snowflake, and flattened; for thesauri and lexica we have record-based and relation-based.</p><p>• Nowadays, most of the NORs exist in pure form without any additional information, e.g., a domain of interest or authorship information, such as that provided by Dublin Core for text documents or by OMV for ontologies. Therefore, it is difficult for academia and industry to identify, find and reuse NORs effectively and efficiently. As consequence, the reuse of NORs for building ontologies is at present a very hard task if not impossible. Thus, in order to address the previous limitations, we have introduced a metadata standard reflecting the most relevant properties of NORs for supporting their reuse, the so-called Non-ontological Resource Metadata Vocabulary (NoRMV). This vocabulary allows (1) describing the non-ontological resources available, and (2) including the provenance information in the ontology generated by extending the Ontology Metadata Vocabulary (OMV).</p><p>• Previous efforts towards the reuse and subsequent transformation of available resources for building ontologies had assumed that the non-ontological resources were already selected for their transformation; therefore, they did not provide methodological guidelines for the selection of the resource. To overcome this limitation, we have presented a set of methodological guidelines on how to find the most suitable non-ontological resources for the development of ontologies. The methodological guidelines include the definition, goal, inputs, outputs, a set of the activities involved, performer of the activities, and execution time of the activities.</p><p>• Some methods and tools for transforming non-ontological resources into ontologies perform ad-hoc conversions. In order to cope with the categorization of non-ontological resources proposed in this thesis, we provide a re-engineering model for non-ontological resources. The model tries to solve the lack of a model for re-engineering non-ontological resources into ontologies. This model opens the foundations of the re-engineering process of NORs for building ontologies. The model, presented in Chapter 6, is based on the software re-engineering model introduced in Chapter 2. It describes the four software abstraction levels that define each activity in software development: conceptual, requirements, design, and implementation levels. Moreover, this re-engineering model introduces the four ontology</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="12.1.">REVIEW OF THE CONTRIBUTIONS</head><p>to extend it and include other types of NORs, data models, and implementations in a simple way, as well as to exploit other external resources for making explicit the hidden semantics in the relations of the NOR terms.</p><p>To conclude we present the comparison of our method with the three most representative methods in this area: Heep et al. <ref type="bibr" target="#b102">[HdB07]</ref>, Hyvönen et al. <ref type="bibr" target="#b112">[HVTS08]</ref> and Soergel et al. [SLL + 04] (see Tables 12.1, 12.2, 12.3, and 12.4). The comparison is made according to the following features: non-ontological resources, reuse of NORs, transformation, and ontologies generated, which were analysed in the chapter dealing with the state of the art. With respect to the non-ontological resources (see Table <ref type="table">12</ref>.1), our method (1) deals with classification schemes, thesauri and lexica; (2) considers the internal data model; and (3) tackles NORs implemented in databases, XML files, spreadsheets, and flat files. </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">Thesaurus Implementations . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">2 Patterns for Re-engineering Thesauri into Ontologies . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Patterns for the TBox</title>
		<author>
			<orgName type="collaboration">Transformation . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">2 Patterns for the ABox Transformation . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">3 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">PATTERNS FOR RE-ENGINEERING LEXICA 9.1 Lexicon . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">1 Components of a Lexicon . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">2 Lexicon Formal Definition . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">1.3 Lexicon Data Models . . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">Lexicon Implementations . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">2 Patterns for Re-engineering Lexica into Ontologies . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Patterns for the TBox</title>
		<author>
			<orgName type="collaboration">Transformation . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">2 Patterns for the ABox Transformation . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">3 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">TECHNOLOGICAL SUPPORT 10.1 NOR 2 O . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10.1.1 NOR Connector . . . . . . . . . . . . . . . . . . . . . . 10.1.2 Transformer . . . . . . . . . . . . . . . . . . . . . . . . . 10.1.3 Semantic Relation Disambiguator . . . . . . . . . . . . . 10.1.4 External Resource Service . . . . . . . . . . . . . . . . . 10.1.5 OR Connector . . . . . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">2 PR-NOR Library at the ODP Portal . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">3 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 EVALUATION 11.1 Evaluation of the Methodological Guidelines . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Applicability and Usability of the Methodological Aspects of Re-engineering within a</title>
		<author>
			<persName><surname>Understandability</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Master Course</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Applicability and Usability of the Method for Reuse and Re-engineering within the SEEMP Project</title>
		<author>
			<persName><surname>Understandability</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Applicability and Usability of the Method within the mIO</title>
		<author>
			<persName><surname>Understandability</surname></persName>
			<affiliation>
				<orgName type="collaboration">! Project . . . . . . . . . . . . . . . . . .</orgName>
			</affiliation>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">Summary . . . . . . . . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">11.2.1 Quality Evaluation of the Patterns and NOR</title>
		<author>
			<orgName type="collaboration">2 Evaluation of the Technological Support . . . . . . . . . . . . . . ; 2 O . . . . . . 11.2.2 Usability Evaluation of the Software Library . . . . . . . 11.2.3 Applicability and Usability of NOR 2 O within the GeoLinked-Data Project . . . . . . . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">2.4 Summary . . . . . . . . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">3 Evaluation Summary . . . . . . . . . . . . . . . . . . . . . . . . xv</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">1 PR-NOR Library web accesses . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">1 Evaluation criteria . . . . . . . . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">2 Answers to the proposed questionnaire . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">3 Assessment table for SEEMP Occupation Standards . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title/>
		<author>
			<persName><surname>Standards</surname></persName>
			<affiliation>
				<orgName type="collaboration">codes and classifications reused . . . . . . . . . . . .</orgName>
			</affiliation>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">5 Resources transformed in the SEEMP project . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">SEEMP Reference Ontology statistical data . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">8 mIO! Ontology statistical data . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">11.10Similarity values of every ontology generated with the</title>
		<author>
			<orgName type="collaboration">9 Resources utilized in the experiment . . . . . . . . . . . . . . . . ; Gold Standard ontology. . . . . . . . . . . . . . . . . . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">A comparative analysis of the three most representative methods and the pattern-based method</title>
		<author>
			<orgName type="collaboration">NOR features . . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">A comparative analysis of the three most representative methods and the pattern-based method</title>
		<author>
			<orgName type="collaboration">Reuse features . . . . . . . . . .</orgName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">A comparative analysis of the three most representative methods and the pattern-based method</title>
		<imprint/>
	</monogr>
	<note>Transformation features . . . . .</note>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A comparative analysis of the three most representative methods and the pattern-based method</title>
	</analytic>
	<monogr>
		<title level="j">Ontology features . . . . . . . . . xx xxi 1: noBT erms ←</title>
		<imprint/>
	</monogr>
	<note>learning; personal development] 5: C1 ← createClass(learning</note>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title/>
		<author>
			<persName><surname>Narrowertermof</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">using the record-based model 12: C11 ← createClass(competence) 14: rel1 ← ExternalResource.getRelation(C1,C11) 15: relate(rel1,C1,C11) 17: RT erms ← ∅ ← relatedTermOf(learning) 27: U F T erms ← ∅ ← usedForTermOf(learning)</title>
		<author>
			<persName><forename type="first">N T</forename><surname>Erms</surname></persName>
		</author>
		<imprint>
			<biblScope unit="volume">31</biblScope>
		</imprint>
	</monogr>
	<note>restOf T erms ← [competence] 5: C2 ← createClass. personal development</note>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title/>
		<author>
			<persName><surname>Narrowertermof</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>personal development</note>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">/ using the record-based model 12: C21 ← createClass(performance) 14: rel2 ← ExternalResource.getRelation(C2,C21) 15: relate(rel2,C2,C21) 17: RT erms ← ∅ ← relatedTermOf(personal development) 27: U F T erms ← ∅ ← usedForTermOf</title>
		<author>
			<persName><forename type="first">N T</forename><surname>Erms</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>personal development) 31: restOf T erms ← [competence;performance] 34: noBT erms ← restOf T erms ← [competence;performance] 35: removeAllTerms(restOf T erms</note>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">RT erms ← relatedTermOf(competence) 17: RT erms ← [performance] // using the record-based model 20: remove(RT erms,performance) // performance class, C21, already created 24: rel3 ← ExternalResource.getRelation(C11,C21) 25: relate(rel3,C11,C21) 27: U F T erms ← ∅ ← usedForTermOf(competence) 31: restOf T erms ← ∅ 4: // performance class, C21</title>
		<author>
			<persName><surname>N T Erms ← ∅ ← Narrowertermof</surname></persName>
		</author>
		<imprint>
			<biblScope unit="volume">17</biblScope>
		</imprint>
	</monogr>
	<note>T erms ← ∅ ← narrowerTermOf(performance) 17: RT erms ← ∅ ← relatedTermOf(performance) 27: U F T erms ← usedForTermOf(performance</note>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<author>
			<persName><forename type="first">U F T</forename><surname>Erms</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SOE(performance,achievement) 31: restOf T erms ← ∅ 34: noBT erms ← ∅ ← restOf T erms</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
		</imprint>
	</monogr>
	<note>removeAllTerms(restOf T erms</note>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Slot Value Example Require: Identification of the BT/NT/RT/UF relations by using the relationbased model 1: noBT erms ← [Poaceae; Cereals] 5: C1 ← createClass(Poaceae) 7: N T erms ← narrowerTermOf(Poaceae) 7: N T erms ← [Oryza] // using the relation-based model 12: C11 ← createClass(Oryza) 14: rel1 ← ExternalResource.getRelation(C1,C11) 15: relate(rel1,C1,C11</title>
		<idno>PATTERNS FOR RE-ENGINEERING THESAURI INTO ONTOLOGIES Table 8.2</idno>
	</analytic>
	<monogr>
		<title level="m">RT erms ← ∅ ← relatedTermOf(Poaceae) 27: U F T erms ← ∅ ← usedForTermOf</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
		</imprint>
	</monogr>
	<note>: Pattern for re-engineering a thesaurus following the relation-based model, into an ontology schema (continued). Poaceae) 31: restOf T erms ← [Oryza] 5: C2 ← createClass(Cereals) 7: N T erms ← narrowerTermOf(Cereals</note>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">// Oryza class, C11, already created 7: N T erms ← ∅ ← narrowerTermOf(Oryza) 17: RT erms ← relatedTermOf(Oryza) 17: RT erms ← [Rice] // using the relation-based model 20: remove(RT erms,Rice) // Rice class, C21, already created 24: rel3 ← ExternalResource.getRelation(C11,C21) 25: relate(rel3,C11,C21) 27: U F T erms ← ∅ ← usedForTermOf(Oryza) 31: restOf T erms</title>
		<author>
			<persName><forename type="first">N T</forename><surname>Erms</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RT erms ← ∅ ← relatedTermOf(Cereals) 27: U F T erms ← ∅ ← usedForTermOf(Cereals) 31: restOf T erms</title>
		<editor>
			<persName><surname>N T Erms ← ∅ ← Narrowertermof</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">15</biblScope>
		</imprint>
	</monogr>
	<note>RT erms ← ∅ ← relatedTermOf(Rice) 27: U F T erms ← usedForTermOf. Rice) 27: U F T erms ← [Paddy] // using the relation-based model 29: SOE(Rice,Paddy) 31: restOf T erms ← ∅ 34: noBT erms ← ∅ ← restOf T erms 35: removeAllTerms(restOf T erms</note>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Continued on next page 1: entityN ame ← name of the entity that contains the thesaurus terms 1: entityN ame ← Vocational education 2: mainClass ← createClass</title>
	</analytic>
	<monogr>
		<title level="j">Time Complexity</title>
		<imprint/>
	</monogr>
	<note>entityN ame) 3: relation ← subClassOf 4: relate(relation,mainClass,mainClass) 5: relation2 ← relatedClass 6: relate(relation2,mainClass,mainClass</note>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m">T T erms ← thesaurus terms</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title level="m" type="main">10: I1 ← createInstance(competence) 11: setInstanceOfClass(I1,mainClass) 13: U F T erms ← ∅ ← usedForTermOf(competence) 10: I2 ← createInstance(learning) 11: setInstanceOfClass(I2,mainClass) 13: U F T erms ← ∅ ← usedForTermOf(learning) 10: I3 ← createInstance(performance) 11: setInstanceOfClass(I3,mainClass) 13: U F T erms ← usedForTermOf(performance) 13: U F T erms</title>
		<author>
			<persName><forename type="first">T T</forename><surname>Erms</surname></persName>
		</author>
		<imprint>
			<publisher>SOE</publisher>
			<biblScope unit="volume">15</biblScope>
		</imprint>
	</monogr>
	<note>competence;learning;performance; personal development. performance,achievement) 10: I4 ← createInstance(personal development) 11: setInstanceOfClass(I4,mainClass</note>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Hyponyms do 6: if not alreadyCreatedClassFor(sj) then Cj ← createClass(sj) endif 7: relate(subClassOf,Ci,Cj) 8: end for 9: Hypernyms ← hypernymOf(si) 10: for sk ∈ Hypernyms do 11: if not alreadyCreatedClassFor(sk) then Ck ← createClass(sk) endif 12: relate(subClassOf,Ck,Ci) 13: end for 14: M eronyms ← meronymOf(si) 15: for sl ∈ M eronyms do 16: if not alreadyCreatedClassFor(sl) then Cl ← createClass(sl) endif 17: relate(partOf,Ci,Cl) 18: end for 19: Holonyms ← holonymOf(si) 20: for sm ∈ Holonyms do 21: if not alreadyCreatedClassFor(sm) then Cm ← createClass(sm) enif 22: relate(partOf,Cm,Ci) 23: end for 24: Synonyms ← synonymOf(si) 25: for sn ∈ Synonyms do 26: CorchoEtAlPattern(si,tn) // Corcho et al. [CR09]. Logical Pattern 27: end for 28: RelatedSynsets ← relatedSynsetOf(si) 29: for so ∈ RelatedSynsets do 30: if not alreadyCreatedClassFor(so) then Co ← createClass(so) endif 31: relation ← ExternalResource.getRelation(Ci,Co) 32: relate(relation,Ci,Co) 33: end for 34: end for Continued on next page 1: Synsets ← all the synsets of the lexicon 2: for si ∈ Synsets do 3: if not alreadyCreatedClassFor(si) then Ci ← createClass(si) endif 4: Hyponyms ← hyponymOf(si) 5: for sj ∈ Hyponyms do 6: if not alreadyCreatedClassFor(sj) then Cj ← createClass(sj) endif 7: relate(subClassOf,Ci,Cj) 8: end for 9: Hypernyms ← hypernymOf(si) 10: for sk ∈ Hypernyms do 11: if not alreadyCreatedClassFor(sk) then Ck ← createClass(sk) endif 12: relate(subClassOf,Ck,Ci) 13: end for 14: M eronyms ← meronymOf(si) 15: for sl ∈ M eronyms do 16: if not alreadyCreatedClassFor(sl) then Cl ← createClass(sl) endif 17: relate(partOf,Ci,Cl) 18: end for 19: Holonyms ← holonymOf(si) 20: for sm ∈ Holonyms do 21: if not alreadyCreatedClassFor(sm) then Cm ← createClass(sm) enif 22: relate(partOf,Cm,Ci) 23: end for 24: Synonyms ← synonymOf(si) 25: for sn ∈ Synonyms do 26: CorchoEtAlPattern(si,tn) // Corcho et al. [CR09]. Logical Pattern 27: end for 28: RelatedSynsets ← relatedSynsetOf(si) 29: for so ∈ RelatedSynsets do 30: if not alreadyCreatedClassFor(so) then Co ← createClass(so) endif 31: relation ← ExternalResource</title>
		<author>
			<persName><surname>U F T Erms ← ∅ ← Usedfortermof</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">for Example Require: Identification of the relations by using the relation-based model 1: Synsets ← [river;rapid;stream] 3: C1 ← createClass(river) 4: Hyponyms ← ∅ ← hyponymOf(river) 9: Hypernyms ← hypernymOf(river) // using the relation-based model 9: Hypernyms ← [stream] 11: C2 ← createClass(stream)</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
		</imprint>
	</monogr>
	<note>next page 1: Synsets ← all the synsets of the lexicon 2: for si ∈ Synsets do 3: if not alreadyCreatedClassFor(si) then Ci ← createClass(si) endif 4: Hyponyms ← hyponymOf(si) 5: for sj. relate(relation,Ci,Co. relate(subClassOf,C1,C3) 14: M eronyms ← meronymOf(river) 14: M eronyms ← [rapid] // using the relation-based model 16: C3 ← createClass(rapid. relate(partOf,C3,C1) 19: Holonyms ← ∅ ← holonymOf(river) 24: Synonyms ← ∅ ← synonymOf(river) 28: RelatedSynsets ← ∅ ← relatedSynsetOf(river) Time Complexity O(n 2 ) Continued on next page 1: entityN ame ← name of the entity that contains the synsets 2: mainClass ← createClass(entityN ame) 3: relation ← subClassOf 4: relate(relation,mainClass,mainClass) 5: relation1 ← partOf 6: relate(relation1,mainClass,mainClass</note>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">Ii ← createInstance(si) 11: setInstanceOfClass(Ii,mainClass) 12: end if 13: Synonyms ← synonymsOf(si) 14: for sq ∈ Synonyms do 15: SOE(si,sq) 16: end for 17: end for Example Require: Identification of the relations by using the record-based model 1: entityN ame ← name of the entity that contains the synsets 1: entityN ame ← BioLexicon 2: mainClass ← createClass(entityN ame) 3: relation ← subClassOf 4: relate(relation,mainClass,mainClass) 5: relation2 ← partOf 6: relate(relation2,mainClass,mainClass) 7: LSynsets ← lexicon synsets 7: LSynsets ← [animal cell;cell part;cell;CESP:C16C10.8] 10: I1 ← createInstance(animal cell) 11: setInstanceOfClass(I1,mainClass) 13: Synonyms ← ∅ ← synonymsOf(animal cell) 10: I2 ← createInstance(cell part) 11: setInstanceOfClass(I2,mainClass) 13: Synonyms ← ∅ ← usedForTermOf</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
		</imprint>
	</monogr>
	<note>LSynsets ← lexicon synsets 8: for si ∈ LSynsets do 9: if not alreadyCreatedInstanceFor(si) then. cell part. I3 ← createInstance(cell) 11: setInstanceOfClass(I3,mainClass) 13: Synonyms ← synonymsOf(cell) 13: Synonyms ← [CESP:C16C10.8] // using the record-based model 15: SOE(cell,CESP:C16C10.8</note>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">on next page 1: entityN ame ← name of the entity that contains the synsets 2: mainClass ← createClass</title>
	</analytic>
	<monogr>
		<title level="j">Time Complexity</title>
		<imprint/>
	</monogr>
	<note>entityN ame) 3: relation ← subClassOf 4: relate(relation,mainClass,mainClass) 5: relation1 ← partOf 6: relate(relation1,mainClass,mainClass</note>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title level="m" type="main">Ii ← createInstance(si) 11: setInstanceOfClass(Ii,mainClass) 12: end if 13: Synonyms ← synonymsOf(si) 14: for sq ∈ Synonyms do 15: SOE(si,sq) 16: end for 17: end for Example Require: Identification of the relations by using the relation-based model 1: entityN ame ← name of the entity that contains the synsets 1: entityN ame ← BioLexicon 2: mainClass ← createClass(entityN ame) 3: relation ← subClassOf 4: relate(relation,mainClass,mainClass) 5: relation2 ← partOf 6: relate(relation2,mainClass,mainClass) 7: LSynsets ← lexicon synsets 7: LSynsets ← [animal cell;cell part;cell;CESP:C16C10.8] 10: I1 ← createInstance(animal cell) 11: setInstanceOfClass(I1,mainClass) 13: Synonyms ← ∅ ← synonymsOf(animal cell) 10: I2 ← createInstance(cell part) 11: setInstanceOfClass(I2,mainClass) 13: Synonyms ← ∅ ← usedForTermOf</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
		</imprint>
	</monogr>
	<note>LSynsets ← lexicon synsets 8: for si ∈ LSynsets do 9: if not alreadyCreatedInstanceFor(si) then. cell part. I3 ← createInstance(cell) 11: setInstanceOfClass(I3,mainClass) 13: Synonyms ← synonymsOf(cell) 13: Synonyms ← [CESP:C16C10.8] // using the record-based model 15: SOE(cell,CESP:C16C10.8</note>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Continued on next page Regarding the reuse of non-ontological resources (see Table 12.2), our method (1) provides methodological guidelines for the selection of the resources to be Bibliography</title>
	</analytic>
	<monogr>
		<title level="j">Time Complexity</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Constructing Complex Semantic Mappings Between XML Data and Ontologies</title>
		<author>
			<persName><forename type="first">Y</forename><surname>An</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Borgida</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mylopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ternational Semantic Web Conference</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="6" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<monogr>
		<author>
			<persName><forename type="first">C</forename><surname>Alexander</surname></persName>
		</author>
		<title level="m">The Timeless Way of Building</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Oxford University Press</publisher>
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">A generic model for reusable lexicons: The GENELEX project</title>
		<author>
			<persName><forename type="first">M</forename><surname>Antoni-Lay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Francopoulo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zaysser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Literary and Linguistic Computing</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="47" to="54" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Translating XML Web Data into Ontologies</title>
		<author>
			<persName><forename type="first">Y</forename><surname>An</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mylopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">OTM Workshops</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="967" to="976" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<monogr>
		<title level="m" type="main">Documentation -Guidelines for the construction, format, and management of monolingual controlled vocabularies</title>
		<author>
			<persName><surname>Ansi/Niso</surname></persName>
		</author>
		<idno>ANSINISO Z3919</idno>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
	<note type="report_type">Report</note>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Organizing resources on tagging systems using t-org</title>
		<author>
			<persName><forename type="first">R</forename><surname>Abbasi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Staab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Cimiano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of Workshop on Bridging the Gap between Semantic Web and Web</title>
		<meeting>Workshop on Bridging the Gap between Semantic Web and Web</meeting>
		<imprint>
			<date type="published" when="2007-06">2007. June 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Human resource management with ontologies</title>
		<author>
			<persName><forename type="first">E</forename><surname>Biesalski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Abecker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Springer Postproceedings: Workshop on IT Tools for Knowledge Management Systems: Applicability, Usability, and Benefits (KMTOOLS)</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="499" to="507" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<monogr>
		<title level="m" type="main">Modelo para la definición automática de correspondencias semánticas entre ontologías y modelos relacionales</title>
		<author>
			<persName><forename type="first">J</forename><surname>Barrasa</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007-03">March 2007</date>
			<pubPlace>Madrid, Spain</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Facultad de Informática, Universidad Politécnica de Madrid</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">R2O, an Extensible and Semantically Based Database-to-Ontology Mapping Language</title>
		<author>
			<persName><forename type="first">J</forename><surname>Barrasa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Corcho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second Workshop on Semantic Web and Databases (SWDB2004)</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Berge</surname></persName>
		</author>
		<title level="m">The EDIFACT Standards</title>
		<meeting><address><addrLine>Cambridge, MA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Blackwell Publishers, Inc</publisher>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">A Metamodel and UML Profile for Networked Ontologies. A Complete Reference</title>
		<author>
			<persName><forename type="first">S</forename><surname>Brockmans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Haase</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bizer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Heese</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mochol</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Oldakowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Tolksdorf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Eckstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference Wirtschaftsinformatik (WI 2005)</title>
		<meeting><address><addrLine>Bamberg, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005">2006. 2005</date>
		</imprint>
		<respStmt>
			<orgName>Universitt Karlsruhe,</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
	<note>The impact of semantic web technologies on job recruitment processes</note>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">The Emerging Web of Linked Data</title>
		<author>
			<persName><forename type="first">C</forename><surname>Bizer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Intelligent Systems</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="87" to="92" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<monogr>
		<title level="m" type="main">Pattern-Oriented Software Architecture: a system of patterns</title>
		<author>
			<persName><forename type="first">F</forename><surname>Buschmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Meunier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Rohnert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sommerlad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Stal</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>John Wiley and Sons</publisher>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<monogr>
		<author>
			<persName><forename type="first">W</forename><surname>Borst</surname></persName>
		</author>
		<title level="m">Construction of Engineering Ontologies</title>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Recursive database structures</title>
		<author>
			<persName><forename type="first">D</forename><surname>Brandon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">BS 05a] British Standards Institution, BSI. Documentation -Structured vocabularies for information retrieval -Guide -Part 1: Definitions, symbols and abbreviations</title>
		<imprint>
			<date type="published" when="2005">2005. 2005</date>
			<biblScope unit="page" from="8723" to="8724" />
		</imprint>
	</monogr>
	<note>Report BS</note>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
	</analytic>
	<monogr>
		<title level="m">BS 05b] British Standards Institution, BSI. Documentation -Structured vocabularies for information retrieval -Guide -Part 2: Thesauri</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">8723</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">A conceptual foundation for software re-engineering</title>
		<author>
			<persName><forename type="first">E</forename><surname>Byrne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Software Maintenance and Reengineering</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<monogr>
		<title level="m" type="main">Modern Information Retrieval</title>
		<author>
			<persName><forename type="first">R</forename><surname>Baeza-Yates</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ribeiro-Neto</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-05">May 1999</date>
			<publisher>Addison Wesley</publisher>
		</imprint>
	</monogr>
	<note>1st edition</note>
</biblStruct>

<biblStruct xml:id="b71">
	<monogr>
		<author>
			<persName><forename type="first">B</forename><surname>Carkenord</surname></persName>
		</author>
		<ptr target="http://www.embarcadero.com/resources/techpapers/data-model.pdf" />
		<title level="m">Why Build a Logical Data Model</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">Reverse engineering and design recovery: A taxonomy</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">J</forename><surname>Chikofsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Cross</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">I</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Softw</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="13" to="17" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<monogr>
		<title level="m" type="main">Initial Network of Fisheries Ontologies</title>
		<author>
			<persName><forename type="first">C</forename><surname>Caracciolo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heguiabehere</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Presutti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note type="report_type">Technical report</note>
	<note>NeOn project deliverable D7.2.3, 2009. BIBLIOGRAPHY</note>
</biblStruct>

<biblStruct xml:id="b74">
	<monogr>
		<author>
			<persName><forename type="first">N</forename><surname>Calzolari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Naught</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zampolli</surname></persName>
		</author>
		<ptr target="http://www.ilc.cnr.it/EAGLES96/edintro/edintro.html" />
		<title level="m">EAGLES Editor&apos;s Introduction</title>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<monogr>
		<title level="m" type="main">A Layered Declarative Approach to Ontology Translation with Knowledge Preservation</title>
		<editor>O. Corcho</editor>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>IOS Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<monogr>
		<author>
			<persName><forename type="first">O</forename><surname>Corcho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Roussey</surname></persName>
		</author>
		<ptr target="http://ontologydesignpatterns.org" />
		<title level="m">SynonymOrEquivalence (SOE) Pattern</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">Knowledge Patterns</title>
		<author>
			<persName><forename type="first">P</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">W</forename><surname>Porter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KR2000: Principles of Knowledge Representation and Reasoning</title>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="591" to="600" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">An ontology-based framework for xml semantic integration</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">F</forename><surname>Cruz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Hsu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IDEAS &apos;04: Proceedings of the International Database Engineering and Applications Symposium</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="217" to="226" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<monogr>
		<title level="m" type="main">A practical guide to usability testing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Dumas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Redish</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>Exeter, UK Intellect</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b80">
	<analytic>
		<title level="a" type="main">Analyzing communication patterns in software engineering projects</title>
		<author>
			<persName><forename type="first">H</forename><surname>Edwards</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Puckett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jolly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Software Engineering Research and Practice</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="310" to="315" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<monogr>
		<title level="m" type="main">Ontology matching</title>
		<author>
			<persName><forename type="first">J</forename><surname>Euzenat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Shvaiko</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Heidelberg (DE)</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Ontologizing EDI Semantics</title>
		<author>
			<persName><forename type="first">D</forename><surname>Foxvog</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bussler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ER (Workshops)</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="301" to="311" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<monogr>
		<title level="m" type="main">WordNet -An Electronic Lexical Database</title>
		<editor>C. Fellbaum</editor>
		<imprint>
			<date type="published" when="1998">1998</date>
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title level="a" type="main">Lexical markup framework (lmf)</title>
		<author>
			<persName><forename type="first">G</forename><surname>Francopoulo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>George</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Calzolari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Monachini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Bel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Pet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Soria</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the fifth international conference on Language Resources and Evaluation</title>
		<meeting>the fifth international conference on Language Resources and Evaluation<address><addrLine>Genoa, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006">2006. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<analytic>
		<title level="a" type="main">Semantic Integration and Retrieval of Multimedia Metadata</title>
		<author>
			<persName><forename type="first">R</forename><surname>García</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Celma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ISWC 2005 Workshop on Knowledge Markup and Semantic Annotation (Semannot&apos;2005)</title>
		<meeting>the ISWC 2005 Workshop on Knowledge Markup and Semantic Annotation (Semannot&apos;2005)</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">Modelling ontology evaluation and validation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Catenacci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Ciaramita</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lehmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the BIBLIOGRAPHY</title>
		<meeting>the BIBLIOGRAPHY</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<monogr>
		<title level="m">European Semantic Web Conference (ESWC2006)</title>
		<meeting><address><addrLine>Budva. Springer</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
	<note>number 4011 in LNCS</note>
</biblStruct>

<biblStruct xml:id="b88">
	<analytic>
		<title level="a" type="main">Sweetening WORDNET with DOLCE</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Guarino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Masolo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Oltramari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AI Mag</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="13" to="24" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title level="a" type="main">A Pattern Based Approach for Re-engineering Non-Ontological Resources into Ontologies</title>
		<author>
			<persName><forename type="first">A</forename><surname>García</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Suárez-Figueroa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Villazón-Terrazas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd Asian Semantic Web Conference</title>
		<meeting>the 3rd Asian Semantic Web Conference</meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2008">2008. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<monogr>
		<title level="m" type="main">Design Patterns: Elements of Reusable Object-Oriented Software</title>
		<author>
			<persName><forename type="first">E</forename><surname>Gamma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Helm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">E</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Vlissides</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b91">
	<analytic>
		<title level="a" type="main">The OntoWordNet Project: Extension and Axiomatization of Conceptual Relations in WordNet</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Navigli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Velardi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CoopIS/DOA/ODBASE</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b92">
	<monogr>
		<title level="m" type="main">Handbook of Ontologies (2nd edition), chapter Ontology Design Patterns</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Presutti</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b93">
	<analytic>
		<title level="a" type="main">Problem-solving methods for understanding process executions</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Gómez-Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Corcho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing in Science and Engg</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="47" to="52" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b94">
	<monogr>
		<title level="m" type="main">Ontological Engineering. Advanced Information and Knowledge Processing</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fernández-López</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Corcho</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<publisher>Springer Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b95">
	<analytic>
		<title level="a" type="main">An overview of methods and tools for ontology learning from texts</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Manzano-Macho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowl. Eng. Rev</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="187" to="212" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b96">
	<analytic>
		<title level="a" type="main">Ontology integration: Experiences with medical terminologies</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Pisanelli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Steve</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ontology in Information Systems</title>
		<imprint>
			<biblScope unit="page" from="163" to="178" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b97">
	<analytic>
		<title level="a" type="main">Scenarios for Building Ontology Networks within the NeOn Methodology</title>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Suárez-Figueroa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifth International Conference on Knowledge Capture</title>
		<meeting>the Fifth International Conference on Knowledge Capture</meeting>
		<imprint>
			<date type="published" when="2009">2009. 2009. 2009</date>
		</imprint>
	</monogr>
	<note>Proceedings of the Fifth International Conference on Knowledge Capture</note>
</biblStruct>

<biblStruct xml:id="b98">
	<monogr>
		<title level="m" type="main">Integration and Disambiguation Techniques for Semantic Heterogeneity Reduction on the Web</title>
		<author>
			<persName><forename type="first">J</forename><surname>Gracia</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009-10">October 2009</date>
		</imprint>
		<respStmt>
			<orgName>University of Zaragoza</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b99">
	<analytic>
		<title level="a" type="main">Toward principles for the design of ontologies used for knowledge sharing</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">R</forename><surname>Gruber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Press. Substantial Revision of Paper Presented at the International Workshop on Formal Ontology</title>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
	<note>Formal Ontology in Conceptual Analysis and Knowledge Representation</note>
</biblStruct>

<biblStruct xml:id="b100">
	<analytic>
		<title level="a" type="main">A translation approach to portable ontology specifications</title>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">R</forename><surname>Gruber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">KNOWLEDGE ACQUISITION</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="199" to="220" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b101">
	<analytic>
		<title level="a" type="main">Turning informal thesauri into formal ontologies: a feasibility study on biomedical knowledge re-use</title>
		<author>
			<persName><forename type="first">V</forename><surname>Hahn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comparative and Functional Genomics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="94" to="97" />
			<date type="published" when="2003-02">January/February 2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b102">
	<analytic>
		<title level="a" type="main">GenTax: A generic Methodology for Deriving OWL and RDF-S Ontologies from Hierarchical Classifications, Thesauri, and Inconsistent Taxonomies</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hepp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>De Brujin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th European Semantic Web Conference</title>
		<meeting>the 4th European Semantic Web Conference</meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b103">
	<analytic>
		<title level="a" type="main">Products and services ontologies: A methodology for deriving owl ontologies from industrial categorization standards</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hepp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Semantic Web Inf. Syst</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="72" to="99" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b104">
	<analytic>
		<title level="a" type="main">Possible Ontologies: How Reality Constrains the Development of Relevant Ontologies</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hepp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Computing</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="90" to="96" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b105">
	<analytic>
		<title level="a" type="main">RDF123: a mechanism to transform spreadsheets to RDF</title>
		<author>
			<persName><forename type="first">L</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Finin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Parr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sachs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Joshi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twenty-First National Conference on Artificial Intelligence (AAAI-06)</title>
		<meeting>the Twenty-First National Conference on Artificial Intelligence (AAAI-06)</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b106">
	<analytic>
		<title level="a" type="main">SCOVO: Using Statistics on the Web of Data</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hausenblas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Halb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Raimond</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Feigenbaum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ayers ; L. Aroyo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Traverso</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ciravegna</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Cimiano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Heath</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Hyvnen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mizoguchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Oren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sabou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">P B</forename><surname>Simperl</surname></persName>
		</author>
		<author>
			<persName><surname>Eswc</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">5554</biblScope>
			<biblScope unit="page" from="708" to="722" />
			<date type="published" when="2009">2009</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b107">
	<analytic>
		<title level="a" type="main">A Semantic Transformation Approach for ISO 15926</title>
		<author>
			<persName><forename type="first">S</forename><surname>Hakkarainen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Hella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Strasunskas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Tuxen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the OIS 2006 First International Workshop on Ontologizing Industrial Standards</title>
		<meeting>the OIS 2006 First International Workshop on Ontologizing Industrial Standards</meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b108">
	<analytic>
		<title level="a" type="main">Ontology and the lexicon</title>
		<author>
			<persName><forename type="first">G</forename><surname>Hirst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook on Ontologies in Information Systems</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="209" to="230" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b109">
	<monogr>
		<author>
			<persName><forename type="first">G</forename><surname>Hodge</surname></persName>
		</author>
		<ptr target="http://www.clir.org/pubs/reports/pub91/contents.html" />
		<title level="m">Systems of Knowledge Organization for Digital Libraries: Beyond Traditional Authority Files</title>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b110">
	<analytic>
		<title level="a" type="main">Omv ontology metadata vocabulary</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hartmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Palma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sure</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ISWC 2005 Workshop on Ontology Patterns for the Semantic Web</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b111">
	<monogr>
		<title level="m" type="main">Towards a broad-coverage biomedical ontology based on description logics. pac symp biocomput</title>
		<author>
			<persName><forename type="first">U</forename><surname>Hahn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schulz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="577" to="588" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b112">
	<analytic>
		<title level="a" type="main">Building a national semantic web ontology and ontology service infrastructure -the finnonto approach</title>
		<author>
			<persName><forename type="first">E</forename><surname>Hyvönen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Viljanen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tuominen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Seppälä</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ESWC</title>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="95" to="109" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b113">
	<analytic>
		<title level="a" type="main">Rdf instantiation of isle/mile lexical entries</title>
		<author>
			<persName><forename type="first">N</forename><surname>Ide</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lenci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Calzolari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACL 2003 workshop on Linguistic annotation</title>
		<meeting>the ACL 2003 workshop on Linguistic annotation<address><addrLine>Morristown, NJ, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="30" to="37" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b114">
	<monogr>
		<title level="m" type="main">Ergonomic requirements for office work with visual display terminals (vdts) part 11: Guidance on usability</title>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">S</forename></persName>
		</author>
		<idno>ISO 5964</idno>
		<imprint>
			<date type="published" when="1985">1998. 1985</date>
		</imprint>
	</monogr>
	<note type="report_type">Report</note>
	<note>Documentation -Guidelines for the establishment and development of multilingual thesauri</note>
</biblStruct>

<biblStruct xml:id="b115">
	<monogr>
		<title level="m" type="main">Documentation -Guidelines for the establishment and development of monolingual thesaurus</title>
		<author>
			<persName><forename type="first">)</forename><surname>Iso</surname></persName>
		</author>
		<idno>ISO 2788</idno>
		<imprint>
			<date type="published" when="1986">1986</date>
			<publisher>International Standard Organization</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Report</note>
</biblStruct>

<biblStruct xml:id="b116">
	<monogr>
		<title level="m" type="main">Information technology -Metadata registries -Part 1: Framework</title>
		<idno>ISO/IEC FDIS 11179-1</idno>
		<imprint>
			<date type="published" when="2004">2004</date>
			<publisher>International Standard Organization (ISO)</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Report</note>
</biblStruct>

<biblStruct xml:id="b117">
	<analytic>
		<title level="a" type="main">Reuse of terminological resources for efficient ontological engineering in life sciences</title>
		<author>
			<persName><forename type="first">A</forename><surname>Jimeno-Yepes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Jimnez-Ruiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Berlanga-Llavori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rebholz-Schuhmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<date type="published" when="2009">10 Suppl 10, 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b118">
	<monogr>
		<title level="m" type="main">Specification for resource description methods Part 3. the role of classification schemes in Internet resource description and discovery</title>
		<author>
			<persName><forename type="first">T</forename><surname>Koch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bummer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Hiom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Peereboom</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Poulter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Worsfold</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
	<note>DESIRE project deliverable D3.2</note>
</biblStruct>

<biblStruct xml:id="b119">
	<analytic>
		<title level="a" type="main">The software usability measurement inventory</title>
		<author>
			<persName><forename type="first">J</forename><surname>Kirakowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Corbett</surname></persName>
		</author>
		<author>
			<persName><surname>Sumi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">British Journal of Educational Technology</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="210" to="212" />
			<date type="published" when="1993">1993</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b120">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Kimball</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Caserta</surname></persName>
		</author>
		<title level="m">The Data Warehouse ETL Toolkit: Practical Techniques for Extracting, Cleanin</title>
		<imprint>
			<publisher>John Wiley &amp; Sons</publisher>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b121">
	<monogr>
		<title level="m" type="main">Unification of multi-lingual scientific terminological resources using the iso 16642 standard. the termsciences initiative</title>
		<author>
			<persName><forename type="first">M</forename><surname>Khayari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Kramer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Romary</surname></persName>
		</author>
		<idno>ab- s/cs/0604027</idno>
		<imprint>
			<date type="published" when="2006">2006</date>
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b122">
	<monogr>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">B N</forename><surname>Laboratory</surname></persName>
		</author>
		<ptr target="http://www.xmdr.org/standards/cmaps/ThesaurusStan-dardsRelationships.html" />
		<title level="m">MetaData Registry (XMDR) Project</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b123">
	<analytic>
		<title level="a" type="main">Legacy information systems and business process change: a patterns perpective</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Lloyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Dewar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Pooley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. AIS</title>
		<imprint>
			<biblScope unit="page">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b124">
	<analytic>
		<title level="a" type="main">From agrovoc to the agricultural ontology service/concept server: an owl model for creating ontologies in the agricultural domain</title>
		<author>
			<persName><forename type="first">B</forename><surname>Lauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">DCMI &apos;06: Proceedings of the 2006 international conference on Dublin Core and Metadata Applications</title>
		<imprint>
			<publisher>Dublin Core Metadata Initiative</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="76" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b125">
	<analytic>
		<title level="a" type="main">Xlwrap -querying and integrating arbitrary spreadsheets with sparql</title>
		<author>
			<persName><forename type="first">A</forename><surname>Langegger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">th International Semantic Web Conference (ISWC2009)</title>
		<imprint>
			<date type="published" when="2009-10">October 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b126">
	<analytic>
		<title level="a" type="main">SKOS Core Vocabulary Specification</title>
		<author>
			<persName><forename type="first">A</forename><surname>Miles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Brickley</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/2005/WD-swbp-skos-core-spec-20051102/" />
	</analytic>
	<monogr>
		<title level="m">World Wide Web Consortium (W3C)</title>
		<imprint>
			<date type="published" when="2005-11">November 2005</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b127">
	<analytic>
		<title level="a" type="main">A conversion process from flickr tags to rdf descriptions</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">Z</forename><surname>Maala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Delteil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Azough</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SAW</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b128">
	<analytic>
		<title level="a" type="main">Quick Guide to Publishing a Thesaurus on the Semantic Web</title>
		<author>
			<persName><forename type="first">A</forename><surname>Miles</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/2005/WD-swbp-thesaurus-pubguide-20050510/" />
	</analytic>
	<monogr>
		<title level="m">World Wide Web Consortium (W3C)</title>
		<imprint>
			<date type="published" when="2005-05">May 2005</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b129">
	<analytic>
		<title level="a" type="main">Practical Guidelines for Building Semantic eRecruitment Applications</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mochol</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Paslaru</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bontas</forename><surname>Simperl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">BIBLIOGRAPHY Proc. of the International Conference on Knowledge Management (iKnow&apos;06)</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
	<note>Special Track: Advanced Semantic Technologies</note>
</biblStruct>

<biblStruct xml:id="b130">
	<analytic>
		<title level="a" type="main">Ontology learning for the semantic web</title>
		<author>
			<persName><forename type="first">A</forename><surname>Maedche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Staab</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Intelligent Systems</title>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b131">
	<analytic>
		<title level="a" type="main">Hierarchies in a multidimensional model: From conceptual modeling to logical representation</title>
		<author>
			<persName><forename type="first">E</forename><surname>Malinowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Zimnyi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data and Knowledge Engineering</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b132">
	<analytic>
		<title level="a" type="main">Enabling technology for knowledge sharing</title>
		<author>
			<persName><forename type="first">R</forename><surname>Neches</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Fikes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Finin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gruber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Patil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Senator</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">R</forename><surname>Swartout</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AI Mag</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="36" to="56" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b133">
	<monogr>
		<title level="m" type="main">Una Metodología para la Gestión del Conocimiento</title>
		<author>
			<persName><forename type="first">L</forename><surname>Paradela-Gonzlez</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001-03">March 2001</date>
			<pubPlace>Madrid, Spain</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Facultad de Informática, Universidad Politécnica de Madrid</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b134">
	<monogr>
		<title level="m" type="main">Software reengineering patterns</title>
		<author>
			<persName><forename type="first">R</forename><surname>Pooley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Stevens</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b135">
	<analytic>
		<title level="a" type="main">Diligent: Towards a fine-grained methodology for distributed, loosely-controlled and evolving engineering of ontologies</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">S</forename><surname>Pinto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Tempich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Staab</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">16th European Conference on Artificial Intelligence (ECAI 2004)</title>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="393" to="397" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b136">
	<monogr>
		<title level="m" type="main">Selection and integration of reusable components from formal or informal specifications</title>
		<author>
			<persName><forename type="first">M</forename><surname>Sabou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Angeletou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Daquin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Barrasa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Dellschaft</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lehman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lewen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Maynard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Mladenic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nissim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Peters</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Presutti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Villazón</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
	<note>NeOn project deliverable D2.2.1</note>
</biblStruct>

<biblStruct xml:id="b137">
	<monogr>
		<title level="m" type="main">Knowledge engineering: Principles and methods</title>
		<author>
			<persName><forename type="first">R</forename><surname>Studer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">R</forename><surname>Benjamins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Fensel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b138">
	<monogr>
		<title level="m" type="main">NeOn Methodology for Building Ontology Networks: Specification, Scheduling and Reuse. PhD thesis</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Suárez-Figueroa</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<publisher>Facultad de Informática</publisher>
			<pubPlace>Madrid, Spain</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Universidad Politécnica de Madrid</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b139">
	<monogr>
		<title level="m" type="main">Neon modelling components</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Suárez-Figueroa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Brockmans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lehmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lewen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Presutti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sabou</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note type="report_type">Technical report</note>
	<note>NeOn project deliverable D5.1.1, 2007. BIBLIOGRAPHY</note>
</biblStruct>

<biblStruct xml:id="b140">
	<analytic>
		<title level="a" type="main">Towards a Glossary of Activities in the Ontology Engineering Field</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Suárez-Figueroa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th Language Resources and Evaluation Conference (LREC 2008)</title>
		<meeting>the 6th Language Resources and Evaluation Conference (LREC 2008)</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b141">
	<analytic>
		<title level="a" type="main">How to Write and Use the Ontology Requirements Specification Document</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Suárez-Figueroa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Villazón-Terrazas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">OTM Conferences</title>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="966" to="982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b142">
	<analytic>
		<title level="a" type="main">Reengineering thesauri for new applications: The agrovoc example</title>
		<author>
			<persName><forename type="first">D</forename><surname>Soergel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Lauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Fisseha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Keizer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Digit. Inf</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b143">
	<analytic>
		<title level="a" type="main">Wordnet-lmf: fleshing out a standardized format for wordnet interoperability</title>
		<author>
			<persName><forename type="first">C</forename><surname>Soria</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Monachini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Vossen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IWIC &apos;09: Proceeding of the 2009 international workshop on Intercultural collaboration</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="139" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b144">
	<monogr>
		<title level="m" type="main">Data models for an integrated thesaurus database. Comatibility and Integration of Order Systems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Soergel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="47" to="57" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b145">
	<analytic>
		<title level="a" type="main">Knowledge processes and ontologies</title>
		<author>
			<persName><forename type="first">S</forename><surname>Staab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Schnurr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Studer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sure</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Intelligent Systems</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="26" to="34" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b146">
	<analytic>
		<title level="a" type="main">A Reverse Engineering Approach for Migrating Data-intensive Web Sites to the Semantic Web</title>
		<author>
			<persName><forename type="first">L</forename><surname>Stojanovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Stojanovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Volz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Intelligent Information Processing</title>
		<meeting>the Conference on Intelligent Information Processing</meeting>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b147">
	<analytic>
		<title level="a" type="main">A Catalogue of General-Purpose Software Design Patterns</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">F</forename><surname>Tichy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TOOLS &apos;97: Proceedings of the Tools-23: Technology of Object-Oriented Languages and Systems</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1997">1997</date>
			<biblScope unit="volume">330</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b148">
	<analytic>
		<title level="a" type="main">Conversion of WordNet to a standard RDF/OWL representation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Van Assem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Schreiber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifth International Conference on Language Resources and Evaluation (LREC&apos;06)</title>
		<meeting>the Fifth International Conference on Language Resources and Evaluation (LREC&apos;06)<address><addrLine>Genoa, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-05">May 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b149">
	<analytic>
		<title level="a" type="main">A Method to Convert Thesauri to SKOS</title>
		<author>
			<persName><forename type="first">M</forename><surname>Van Assem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Malaisé</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Miles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Schreiber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Semantic Web: Research and Applications</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="95" to="109" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b150">
	<analytic>
		<title level="a" type="main">A method for converting thesauri to RDF/OWL</title>
		<author>
			<persName><forename type="first">M</forename><surname>Van Assem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Menken</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Schreiber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wielemaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceed-BIBLIOGRAPHY ings of the Third International Semantic Web Conference (ISWC)</title>
		<meeting>eed-BIBLIOGRAPHY ings of the Third International Semantic Web Conference (ISWC)</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b151">
	<monogr>
		<title level="m" type="main">NeOn Deliverable D2.2.2 Methods and Tools for Supporting Reengineering</title>
		<author>
			<persName><forename type="first">]</forename><forename type="middle">B</forename><surname>Vtags + 08</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Villazón-Terrazas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Angeletou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>García-Silva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gómez-Pérez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Maynard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Suárez-Figueroa</surname></persName>
		</author>
		<author>
			<persName><surname>Peters</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008">2008</date>
			<pubPlace>NeOn</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b152">
	<monogr>
		<author>
			<persName><forename type="first">S</forename><surname>Wright</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Budin</surname></persName>
		</author>
		<title level="m">Handbook of terminology management, Basic aspects of terminology management</title>
		<imprint>
			<publisher>John Benjamins Publishing Company</publisher>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b153">
	<analytic>
		<title level="a" type="main">From thesaurus to ontology</title>
		<author>
			<persName><forename type="first">B</forename><surname>Wielinga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Schreiber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wielemaker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sandberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">K-CAP &apos;01: Proceedings of the 1st international conference on Knowledge capture</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="194" to="201" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
