<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">F5E9048FD4F2A24410DD1822E47A5FB4</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-07-16T18:28+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The present document is the deliverable "D2.3 -Evaluation of the semantic model in real world scenarios" of the VICINITY project, funded by the European Commission's Directorate-General for Research and Innovation (DG RTD), under its Horizon 2020 Research and Innovation Programme (H2020). The VICINITY ontology network developed in the context of this project consists so far of five ontology modules, i.e., the VICINITY Core (Core), the Web of Things (WoT), the WoT mappings (Mappings), the VICINITY Adapters (Adapters), and the Datatypes (Datatypes) ontologies, belong to the VICINITY ontology network and aim to provide interoperability in the IoT domain. The Core ontology represents the information needed to exchange IoT descriptor data between peers through the VICINITY platform; this ontology is being created by following a cross-domain approach and implements requirements from different domain experts. The WoT ontology aims to model the Web of Things domain according to the W3C WoT Interest Group19 descriptions. The Mappings ontology represents the mechanism for accessing the values provided by web things in the VICINITY platform. The Adapters ontology aims to model all the different types of devices and properties that can be defined in the VICINITY platform. Finally, the Datatypes ontology aims to model the required and provided datatypes that are used in the interaction patterns of the platform. The methodology for developing this ontology network is iterative and based on the NeOn methodology [1].</p><p>This document covers the following main topics: § Validation regarding the model, to assure that there are no inconsistencies in the ontologies by using semantic reasoners) and that there are no modelling errors (by using the tool OOPS!). § Verification regarding their ontological requirements, to guarantee that all the requirements asked by the domain experts are satisfied by the ontology. § Validation regarding pilot data, to analyse how the data is used in VICINITY relying on the VICINITY ontology. § Verification regarding IoT standards, which analyses the coverage of the VICINITY ontology regarding the ontological commitments of a set of well-known IoT standards.</p><p>From the evaluation presented in this document it could be concluded that the VICINITY network does not have inconsistencies or modelling errors, and that it covers all the requirements given by the partners. Additionally, it was also concluded that, even though the VICINITY ontology network does not cover all the requirements in those standards, there are no inconsistencies between the standards and the VICINITY ontologies and that VICINITY ontology network has partial conformance with the IoT standards. However, this coverage analysis also shows that the VICINITY ontology network is out of scope of the analysed IoT standards, which is expected because the IoT standards are more generic Coverage analysis infrastructure .</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>The VICINITY interoperability approach relies on ontologies (i.e., semantic data models) that will be exploited throughout the VICINITY infrastructure. Such ontologies, which are developed as an ontology network, are explained in the VICINITY deliverable "D2.2 Detailed Specification of the Semantic Model" and should be evaluated regarding several criteria before they are released. The VICINITY ontology network consists of five ontologies so far, namely the VICINITY Core (Core), the Web of Things (WoT), the WoT mappings (Mappings), the VICINITY Adapters (Adapters), and the Ontology model for datatypes (Datatypes) ontologies. The Core ontology represents the information needed to exchange IoT descriptor data between peers through the VICINITY platform; this ontology is being created by following a cross-domain approach and implements requirements from different domain experts. The WoT ontology aims to model the Web of Things domain. The Mappings ontology represents the mechanism for accessing the values provided by web things in the VICINITY platform. The Adapters ontology aims to model all the different types of devices and properties that can be defined in the VICINITY platform. Finally, the Datatypes ontology aims to model the required and provided datatypes that are used in the interaction patterns of the platform. More information about these ontologies is available in the VICINITY ontology portal. 1 Figure <ref type="figure" target="#fig_0">1</ref> shows an overview of the VICINITY ontology network so far. The development methodology process followed in this project is iterative and, therefore, several versions of the ontology with new requirements are released. Figure <ref type="figure">2</ref> present the development methodology steps that have to be performed and of the products resultant of them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2 Ontology development methodology</head><p>Before publishing a release version of the ontology, during the ontology implementation the ontology should be evaluated. This evaluation process, as it is described in <ref type="bibr" target="#b0">[1]</ref>, refers to the activity of checking the technical quality of an ontology against a frame of reference. The goal of such activity is to guarantee the correctness and completeness of the generated ontologies. Ontology evaluation includes: -Ontology Validation, which is the ontology evaluation that compares the meaning of the ontology definitions against the intended model of the world aiming to conceptualize. -Ontology Verification, which is the ontology evaluation which compares the ontology against the ontology specification document (ontology requirements and competency questions), thus ensuring that the ontology is built correctly in compliance with the ontology specification.</p><p>In this document, the evaluation process of the VICINITY ontologies was carried out following the following criteria: (1) validation regarding the model, (2) verification regarding their ontological requirements, (3) validation regarding pilot data, and (4) verification regarding IoT standards.</p><p>The goal of this deliverable is to detail how the developed VICINITY ontologies are validated to assure the users that they are correctly built, complete, and ready to be used.</p><p>The rest of this deliverable is structured as follows:</p><p>• Section 2 provides the validation of the ontologies regarding modelling issues.</p><p>• Section 3 is devoted to validation of the ontologies regarding their ontological requirements.</p><p>• Section 4 describes the validation regarding the pilot data.</p><p>• Section 5 is dedicated to the description of the validation regarding several IoT standards.</p><p>• Section 6 provides some conclusions and future lines of work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Context within VICINITY</head><p>The D2. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Objectives in Work Package 2 and Task 2.3</head><p>The objective of WP2 is to validate the ontologies and interfaces specified by the project and to contribute the results and experience to standardisation bodies. WP2 will define a semantic model for cross-domain IoT networks and demonstrate and validate it in real scenarios and will support the correlation between the proposed semantic model and existing IoT platforms and infrastructures. Finally, the evaluation of demonstrators will be used to validate the model and to produce the corresponding standardization recommendations. Within Task 2.3 the platform and the semantic model will be validated in real life situations with inputs from the project demonstration sites and that will serve as the basis for recommendations, amendments and extensions to standardization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ontology evaluation of technical quality</head><p>Along this section the evaluation of technical quality process of the VICINITY ontology network is described. This evaluation includes the detection of inconsistencies in the ontologies by using semantic reasoners and the detection of modelling errors by using the tool OOPS!.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Semantic reasoners</head><p>To ensure the quality of ontologies, there is a need for dealing with the inconsistency and uncertainty in the ontologies. Therefore, once an ontology is developed, it is needed to assure that there are not inconsistencies in it. An inconsistency refers to a severe error which implies that some of the classes in the ontology cannot have instances (OWL individuals), and no useful knowledge can be inferred from the ontology. The inconsistency will result in false semantic understanding and knowledge representation.</p><p>For this reason, semantic reasoners should be used during the ontology development process. A semantic reasoner is a program that infers logical consequences from a set of explicitly asserted facts or axioms and typically provides automated support for reasoning tasks such as classification, debugging and querying, in order to identify inconsistencies in the analysed ontology.</p><p>For the VICINITY project, the HermiT<ref type="foot" target="#foot_0">2</ref> reasoner was used due to the fact that it is a sound and complete open source reasoner that can be used as a Protégé plugin <ref type="bibr" target="#b1">[2]</ref>. To check that the VICINITY ontology network is consistent, HermiT was installed as a Protégé plugin. After the execution of the reasoner on the five ontologies that belong to the ontology network so far, namely VICINITY Core, Web of Things (WoT), WoT Mappings, VICINTY adapters, and VICINITY datatypes, no inconsistencies or uncertainties were found.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>OOPS!</head><p>In order to identify if the ontologies are correctly built, it was decided to check whether there are modelling issues by using the OOPS! (OntOlogy Pitfall Scanner!) tool <ref type="bibr" target="#b2">[3]</ref>. OOPS! represents a tool for diagnosing (semi-) automatically OWL ontologies. It allows to analyse ontologies to detect common pitfalls that appear during the ontology development process. Such catalogue of pitfalls is also available online, based on manually analysis of ontologies and literature reviews about ontology evaluation and Linked Data (LD). Each pitfall has an importance level attached indicating how important it is: § Critical: It is crucial to correct the pitfall. Otherwise, it could affect the ontology consistency, reasoning, applicability, etc. § Important: Though not critical for ontology function, it is important to correct this type of pitfall. § Minor: It is not really a problem, but by correcting it we will make the ontology in better form and understandable.</p><p>Figure <ref type="figure" target="#fig_2">3</ref> shows the OOPS! Interface, along with some of the obtained results after its scanner. OOPS! was used in all the VICINITY ontologies in order to identify modelling pitfalls. Table <ref type="table" target="#tab_0">1</ref> shows the results of the OOPS! execution in the ontology network and the pitfalls related to the defined ontology. There are not critical pitfalls, even though there were found some important and minor pitfalls. These important pitfalls do not affect the consistency, reasoning or applicability of the ontology. Additionally, in this case they refer to "missing domain or range", however, it was a modelling decision to not add domain or range to certain properties in order not to be restrictive with them. It is also shown the pitfall "Missing disjointness", but it was also decided not to add disjoint classes since the restriction are not needed in the ontology. Regarding the minor pitfalls, they are mostly related to missing D2.3 Evaluation of the semantic model in real world scenarios</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>12</head><p>annotations and naming conventions and they will be corrected in future releases of the ontology network, together with the unconnected elements found in the ontology network. Regarding the pitfalls related to "Inverse relationships not explicitly declared", the ontology developers will analyse each potential inverse relationship to add those considered necessary without adding too much overhead to the ontology.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Validation with regards to ontological requirements</head><p>The validation of ontologies before the online publication is a crucial part in the ontology development process, since it will guarantee that all the requirements asked by the domain experts are satisfied by the ontology after it is released online. In VICINITY, the testing process described in <ref type="bibr" target="#b3">[4]</ref> was followed to check all the proposed requirements, in order to assure that the VICINITY ontologies are complete with regards to the asked requirements. Along this section such testing process and the tool to support it are described.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Testing method</head><p>The testing process followed in VICINITY is based on three activities, i.e., test design, test implementation and test execution. In the test design activity, the knowledge intended to be produced by every requirement is identified, e.g., from the requirement "A device can have a status" is expected a relation between two concepts in the ontology. To formalize such knowledge into a test case a collection of test expressions is used according to the requirements behaviour. During the test implementation activity such test expressions are implemented in order to be able to execute them on our ontologies to validate the associated requirement. The implementation of the test cases is based on the analysis of the behaviour of the ontology in different situations to verify that certain knowledge is modelled in the ontology, rather than simply checking the presence or absence of axioms using semantic reasoners. This is because the use of semantic reasoners is not enough to validate if a requirement is satisfied.</p><p>In addition to the testing activities, we propose an RDF vocabulary to store the generated test cases and to provide traceability between them and their associated requirements. Figure <ref type="figure" target="#fig_3">4</ref> summarizes the activities carried out in this testing process, together with their inputs and outputs. The following subsections describe in detail the activities in this testing process. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Test design</head><p>During this activity the desired behaviour, i.e., the knowledge intended to be produced by every requirement in an ontology, of each requirement is extracted. In order to carry out this extraction, we </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>15</head><p>provide a set of possible test expressions, extracted from the CORAL Corpus <ref type="bibr" target="#b4">[5]</ref>, which represent the requirements desired behaviour. This corpus is based on the NeOn modelling components <ref type="bibr" target="#b5">[6]</ref>, and analyses 834 ontology requirements in order to identify lexico-syntactic patters (LSPs) based on the goal that each requirement has regarding its implementation in an ontology, e.g., a relation between two concepts. Therefore, these LSPs indicate the implementation in the ontology associated with a requirement template. Each of these types of requirements is associated with a test expression, which represents the desired behaviour in a formal language based on the OWL Manchester Syntax. Table <ref type="table" target="#tab_2">2</ref> lists the supported test expressions. To give an example, if the tester wants to check an equivalence relation between two terms, then the corresponding test expression to be used is A EquivalentTo B, where A and B represents the equivalent terms. The output of this activity is an RDF document where the test cases are stored using the proposed testing vocabulary. In this vocabulary, each test case design stores the associated requirement URI, the description of the requirement, and the desired behaviour specified by the test expressions allowing traceability between the artefacts in the ontology development process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Test implementation</head><p>In order to implement the tests to verify if a desired behaviour is satisfied, a procedure is proposed. In this procedure the test design is formalized into a precondition, a set of auxiliary term declarations and a set of assertions to check the behaviour. The procedure to implement each test expression defined in Table <ref type="table" target="#tab_2">2</ref> is further described in <ref type="bibr" target="#b3">[4]</ref>.</p><p>The precondition is a SPARQL query which checks whether the terms involved in the ontology requirement are defined in the ontology. In order to execute the tests, these terms need to be declared in the ontology. Otherwise, the test fails, and the requirement is not satisfied. The axioms to declare auxiliary terms are a set of temporary axioms added to the ontology to declare the auxiliary terms needed to carry out the assertions. After the addition of these axioms the reasoner is executed and, in order to be able to check the behaviour, the ontology needs to be consistent. Finally, the assertions to check the behaviour are a set of pairs of axioms and expected results that represent different ontology scenarios. For each pair, the axiom is temporary added to the ontology to force a scenario, after which the reasoner is executed. The expected result determines if the ontology status after the addition (i.e., inconsistent ontology, unsatisfiable class or consistent ontology) is the expected one in case the requirement was satisfied. If all the status concurs with the expected status, then the requirement is satisfied.</p><p>As an example, to check equivalence between two concepts (A EquivalentTo B), we define a set of auxiliary terms, i.e., the classes that complement A (⌐A) and B (⌐B). After their definition, we define a set of assertions that force the ontology to present unsatisfiable classes or inconsistencies. First, it is generated a class A' that is defined as a subclass of class B and ⌐A. If the ontology satisfies the requirement, this addition causes an unsatisfiable class due to the fact that the reasoner would infer that A' is subclass of A and ⌐A. Then, it is generated a class A' that is defined as a subclass of class A and ⌐B. If the ontology satisfies the requirement, this addition causes an unsatisfiable class due to the fact that the reasoner would infer that A' is subclass of B and ⌐B. The last assertion, generates a class A' that is defined as a subclass of class A and B. If the ontology satisfies the requirement, this assertion causes a consistent ontology due to the fact that there is no problem if A' is subclass of A and B.</p><p>The output of this activity is an RDF document where the test cases are stored using the proposed vocabulary. In this vocabulary, each test case implementation stores the associated test design; the test preparation, which represents auxiliary terms declaration; and the corresponding test assertions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Test execution</head><p>Finally, the test execution activity consists in three steps, namely, the execution of the query which represents the preconditions, the addition of the axioms which declare the auxiliary terms, and the addition of the assertions. After the addition of each axiom, the reasoner is executed to report the status of the ontology. The addition of the auxiliary axioms needs to always lead to a consistent ontology. In the case of the assertions, the agreement between the reasoner status after the addition of all the axioms and the status indicated in the test implementation determines whether the ontology satisfies the desired behaviour. We distinguish four possible results: § Undefined terms, if the ontology does not pass the preconditions.</p><p>§ Passed, if the ontology passes the preconditions and the results of the assertions are the expected ones. § Absent relation, if the ontology passes the preconditions, the results of the assertions are not the expected ones, but the addition of the requirements would not lead to an inconsistency in the ontology. § Conflict, if the ontology passes the preconditions, the results of the assertions are not the expected ones and the addition of the requirements would lead to an inconsistency in the ontology.</p><p>It is worth mentioning that during this activity it is also carried out a mapping between the term identified in the test implementation and the actual term in the ontology where the ontology is going D2.3 Evaluation of the semantic model in real world scenarios 17 to be executed. The mapping at this stage of the testing process allows to execute the same tests on multiple ontologies. Figure <ref type="figure" target="#fig_4">5</ref> shows the steps carried out in this activity.</p><p>As an example, if we want to check equivalence between two classes Sensor and Actuator, the test will result in undefined terms if the ontology does not define a class named Sensor or a class named Actuator. Additionally, the test will result in an absent relation if the ontology defines the classes named Sensor and Actuator but does not define any relation between them, and the test will result in a conflict if the defined relation in the ontology between the classes Sensor and Actuator is a disjoint instead of an equivalence. However, if the ontology to be tested defines an equivalence relation between the classes Sensor and Actuator, then the test will be passed. </p><note type="other">18 Testing infrastructure</note><p>This testing process is supported by the tool Themis, which is a web application that is available online. 3 As it is shown in Figure <ref type="figure" target="#fig_5">6</ref>, Themis supports and automates the test implementation and execution activities. This tool allows to validate a requirement by using the test expressions listed in Table <ref type="table" target="#tab_2">2</ref>. It is possible to add the test expression to the interface by means of two mechanisms: (1) by adding directly the test expression to the interface or (2) by loading an RDF file that is available online with the test suite. As mentioned before, to execute the tests on an ontology it is required a mapping between the terms in the tests and in the actual ontology. To do so, Themis proposes a glossary of terms where the terms are extracted from the URI fragments of each concept. If needed, the users can modify this glossary to adapt it to their use case.</p><p>The interface also shows the results for each of the test expressions. The possible results are the same as the results described in the previous section, namely, undefined terms, passed, absent relation, and conflict. Figure <ref type="figure" target="#fig_29">7</ref> shows and example of the possible results.</p><p>3 http://themis.linkeddata.es/  Themis also allows to export the test expressions added in the interface as RDF files, which can be uploaded online to reuse them over the same or other ontologies. </p><note type="other">20 Testing results</note><p>Table <ref type="table" target="#tab_23">3</ref> summarizes the number of requirements defined for each ontology in the VICINITY ontology network, as well as the provenance and the number of requirements which were implemented, discarded or pending. These requirements represent the needs asked by the domain experts in order to model the VICINITY platform. As shown in the table, there are no pending requirements, which means that all the asked needs were implemented. Moreover, it shows that several requirements were discarded. This deletion of requirements was done because those requirements were no longer needed in the ontology or their definition was not correct. As an example of deletion, the requirement "What is a WoT interface?" for the WoT ontology was considered obsolete and WoT interface term replaced by the Endpoint term. The discussion regarding this deletion is stored in the Github issue tracker.<ref type="foot" target="#foot_1">4</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 3: Summary of requirements categorization for the VICINITY ontology network</head><p>From the set of ontological requirements defined for each ontology, test cases were extracted in order to validate the ontology. Such test cases were generated by using the test expression catalogue provided in Section 3. Each ontological requirement is translated to one or more test expressions, selecting the more appropriate ones from the test catalogue. Several test cases can be related to the same requirement. Table <ref type="table" target="#tab_5">4</ref> displays the number of tests generated for each ontology.</p><p>It is worth mentioning that the test suites, i.e., the sets of test cases associated to each ontology, were exported to RDF files and uploaded to the VICINITY ontology portal. These online RDF files can be reused in future releases of the ontology to assure that all the previous requirements are still satisfied. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ontological requirements</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>21</head><p>The test cases are stored using the Verification Test Case ontology 6 to describe their properties. Each RDF file includes, in addition to the set of test cases, the provenance of the test suite, i.e., the ontology from which the test cases were extracted. Each test case is also linked to the URI of the associated requirement and can also include the competency question of such associated requirement in order to improve the readability of the test case.</p><p>Once all the tests were defined, Themis was executed during the ontology development process in order to identify if there are tests that are not passed by the ontology. Table <ref type="table" target="#tab_5">4</ref> summarizes the last obtained results of such execution, showing that all the requirements are satisfied. As the table shows, most of the requirements are passed by the ontology. However, there is one test whose results are absent relation, which means that the ontology passes the preconditions, the results of the assertion are not the expected ones but there are no conflicts in the ontology. This result warns the ontology developers that there is a test that, even though they do not cause any conflict in the ontology, they are not implemented, at least completely, in the ontology. After analysing such absent relation, which is related to the requirement "A thing implements security" in the ontology, the ontology developers finally decided to maintain the ontology as it was, due to the fact that they do not want to add restrictions to the property implementsSecurity. It is worth mentioning that sometimes, due to modelling decisions, absent relation results can be obtained, and that does not represent that the requirements are not satisfied by the ontology, since the developers decided not to add that restriction to the ontology. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>22</head><p>Validation with regards to pilots' data</p><p>In the context of the VICINITY project we have devised an ontology that defines how data must be modelled. Nevertheless, the data used in the platform can use terms from our ontology or even use other terms that are not defined in our ontology; in that cases it is relevant to check whether the terms are made up or actually the ones from the specified ontology. In addition, there are other facts that should be checked or quantified relaying on the data.</p><p>Figure <ref type="figure" target="#fig_31">9</ref> summarizes the two identified main types of requirements that are necessary to consider and analyse when validating the data in VICINITY relaying on the VICINITY ontology network:</p><p>Figure <ref type="figure" target="#fig_31">9</ref>: Type of requirements considered by our system § Visualisation requirements: these requirements are meant to display their results in a chart or a table. Usually these requirements are related to data completion. For instance, in VICINITY an IoT infrastructure can be registered without specifying in which city is located, although it is mandatory to specify that information (unless due to some privacy policies such information should not be disclosed). § Data consistency requirements: these requirements are related to how data is modelled considering an ontology. The result of these requirements is a boolean value. For instance, in VICINITY we can specify as requirement that all the terms used in data must belong to the ontology devised in VICINITY. The output of this requirement can only be true or false.</p><p>Bearing in mind these types of requirements we have devised a validation system called Things Monitor. Our system aims at checking and validating a set of requirements provided by an expert. In addition, we have implemented a dashboard manager that shows the results of all the requirements established and maintains the privacy restrictions of the VICINITY platform by implementing an authentication system. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Methodology for validating VICINITY</head><p>To validate VICINITY, on the one hand, we provided a set of general requirements that the platform must fulfil and, on the other hand, we provided a set of requirements that the data of each account in VICINITY must meet; for instance, the accounts of the pilots. The requirements provided are namely for visualisation.</p><p>For the overview of the platform we have the following requirements: § Evolution of Things in VICINITY: is meant to display how the platform evolves showing the Things registered over time, the adapters, services, and other elements related to those Things. § Things in VICINITY: is meant to display the number of Things registered in VICINITY, and from those, which are labelled as adapters or services, or on the contrary have a too generic type.</p><p>In addition this requirement shows the number of Things that where correctly described in order to be used by the Semantic Interoperability services. § Things owned by an organisation: is meant to display for each account in the VICINITY platform the number of Things owned by such account. § Accessibility of interaction patterns: is meant to report the number of Things that are accessible, either to read or write. § Types of interaction patterns: is meant to report the type of interactions that the Things have, i.e., if they expose data (properties), trigger events (event), or an order can be written in the thing (actions). § Things with contextual information: is meant to report which Things were registered in the platform with contextual data, i.e., the building or building space where are located, their city or country, and their organisation. § Type of Things in VICINITY: is meant to display the type of Things, i.e., which kind of sensors and devices where registered in the platform. § Properties observed in VICINTIY: is meant to report the physical magnitudes observed by the IoT infrastructures registered in VICINTIY. § Organisations in VICINTIY: is meant to report the organisations registered, as well as the contracts in which they are involved to share or provide data.</p><p>For the each of the accounts we have the following requirements: § Organisation's Things: is meant to report the number of Things registered by this organisation, and which of those where labelled with a type from the adapters ontology or as a service. In addition, this requirement report as well if the Things have the proper annotations so they can be used in the Semantic Interoperability Services. § Type of Things: is meant to report the type of things registered by this organisation. § Contracts held: is meant to report the contracts held by this organisation, either to expose data, or to read data. § Things with contextual information: is meant to report from the Things registered in the VICINITY belonging to this organisation in particular, how many have data about their location, i.e., building, building location, city, or country.</p><p>To validate our requirements, we provided a manual to the partners so they can check whether their accounts meet the requirements. The validation is done by the partners, who need to check that their charts have the optimal values (specified in the manual). In this case, we have no strong constraints that can be evaluated as passed or failed; on the contrary the requirements encode desirable values that the platform should meet and due to this reason the validation depends as well by the partners.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Things Monitor implementation</head><p>The Things Monitor is a VICINITY component, and due to this reason, is located in the GitHub of the project https://github.com/vicinityh2020/tmonitor; due to privacy issues, the manual is attached as a confidential document. Finally, the deployed version of the dashboard manager can be found at http://monitor.vicinity.linkeddata.es. However the access is not public due to privacy policies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Results of pilots' data validation</head><p>In this section we show the results of analysing how the pilots used the ontology. Our analysis is divided in several parts, first we are interested in know how many Things registered by the pilots where described using detailed types (from the Adapters ontology) instead of rather general (from the core).</p><p>In addition to this we aimed at knowing how many of such Things where registered with the necessary data to be accessible through the semantic interoperability services. For this matter Figure <ref type="figure" target="#fig_24">11</ref> shows that out of 564 Things 387 where labelled with types from the Adapters ontology and 121 as services (which have no more detailed type). In conclusion only 56 Things were labelled using generic types, which is not necessary mistaken depending on the devices. Answering our second question 43 out of 564 objects were labelled with the required information to allow such Things to be accessed by the semantic interoperability services.</p><p>In second place, we aimed at analyse the different interaction patters used by the registered things.</p><p>We wished to know how many of them are either properties, actions, events or they were not labelled properly. In addition, we aimed at knowing how many properties have an observation from the ontology, and how many reported units of measure. On the one hand, Figure <ref type="figure" target="#fig_24">12</ref> shows that out of 1158 interaction patterns 1021 are properties, 26 actions, and 111 events; however no interaction pattern reports any unit. Regarding the accessibility of data, and the observations Figure <ref type="figure" target="#fig_32">13</ref> shows that out of 1158 interaction patterns 1132 were actually labelled with an observation from the Adapters ontology. In addition, 1040 were labelled as readable, 190 as writable, and 1047 as accessible relying on the WoT ontology. In third place we aimed at listing the types used from the Adapters ontology, for this matter Figure <ref type="figure" target="#fig_33">14</ref> shows the listing of types used by the Pilots. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>28</head><p>Validation with regards to standards</p><p>In addition to the validation of the requirements asked by the domain experts and users, the VICINITY ontology network was validated against the requirements of several IoT standards, in order to reuse concepts and patterns of well-known resources, namely: (1) the ETSI SAREF ontology <ref type="bibr" target="#b6">[7]</ref>, (2) the W3C SSN ontology, <ref type="foot" target="#foot_3">7</ref> (3) OCF standards,<ref type="foot" target="#foot_4">8</ref> (4) the oneM2M ontology <ref type="bibr" target="#b6">[7]</ref>, and (5) ISO/IEC 30141:2017 <ref type="bibr" target="#b7">[8]</ref>. This validation allows to analyse the coverage regarding the ontological commitments of such standards and the VICINITY ontology.</p><p>Along this section the description of the method to carry out this coverage analysis is presented, in addition to the results analysis to check the coverage between the VICINITY ontologies and the already mentioned standards.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Coverage analysis method</head><p>To carry out such coverage analysis, a systematic approach has been followed. First, the set of models is selected according to the domain to be analysed. Then, the ontological requirements of these selected standards are gathered. Afterwards, the requirements must be translated into test expressions, as it is described in Section 3, in order to be implemented and executed.</p><p>As it is shown in Figure <ref type="figure" target="#fig_12">16</ref>, this coverage method includes the already defined testing process (see Section 3), even though it goes further in the validation by executing different ontological requirements coming from different documents and including a test results analysis activity. Therefore, once the results are obtained and it is possible to be aware of which requirements from each input model are satisfied by the ontology, an analysis of the obtained results should be accomplished. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>29</head><p>Test results analysis Once the results of the testing method are available, i.e., which requirements are passed or not passed, an analysis of such results should be carried out. This analysis includes a set of steps that should be followed:</p><p>1. Identify the topics of potential overlap between the input models and the ontology to be analysed, e.g., devices or users. 2. Identify for each pair input model and ontology: (1) the similarities in the requirements, <ref type="bibr" target="#b1">(2)</ref> the additional information that is in the ontology but not in the input models and vice versa, and (3) the incompatibilities between the ontology and the input models.</p><p>This analysis of the results is accomplished in order to provide the users, domain experts and ontology developers with some indicators, including: § The number of requirements passed and not passed by the ontology, emphasizing which requirements generate a conflict between a standard and the ontology. § The concepts where there is an overlap between the input models and the ontology to be analysed. § The relation and identification of incompatibilities in the concepts where there is an overlap.</p><p>These results can be used by these actors, i.e., users, domain experts and ontology developers, to provide feedback for the developed ontology, by means of requesting changes or by means of identifying inconsistencies between input models and the developed ontology. Moreover, it can also be used to identify mappings and potential terms for reuse.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Coverage analysis infrastructure</head><p>For this coverage analysis we have also proposed Themis as the tool to execute the tests on the ontologies. Themis allows to load a test file and execute the test suite on multiple ontologies, as shown in Figure <ref type="figure" target="#fig_13">17</ref>. Therefore, it is possible to load the test suites for each of the input models and to execute all of them on the ontologies to be analysed, i.e., the VICINITY ontology network. However, as it is shown in Figure <ref type="figure" target="#fig_5">6</ref>, Themis only supports the test implementation and test execution activities and, therefore, the test results analysis is out of scope of this tool. To carry out such analysis a manual procedure is proposed where the results are visualized in a table. In this table it is needed to show the following fields: § The test case § The provenance of each test case, i.e., the requirement associated § The testing result associated to the test case § The topic associated to the test case An example of this type of report is shown in Figure <ref type="figure" target="#fig_14">18</ref>, which was also stored as an HTML file in order to improve the visualization and to publish it online. From this report it is easy to extract additional information, such as the topic of the requirements that are passed, which requirements conflict with the ontology, as well as the percentage of requirements that are passed.</p><p>Once the report is generated, a table with more detailed information about the topics where there is an overlap can be generated. Such tables can include relations between the requirements, e.g., a requirement is contained in another or two requirements are incompatible, and the relation between concepts in several ontologies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Testing results</head><p>This section will describe the obtained testing results related to the conformance between the VICINITY ontology network and several IoT standards. Two analyses have been made: (1) the coverage of the VICINITY ontology network with respect to the IoT standards, and (2) the coverage of the IoT standards with respect to the VICINITY network.</p><p>As previously mentioned, in addition to the VICINITY requirements asked by the partners, the VICINITY ontology network should satisfy the requirements of several standards in IoT, namely: (1) the SAREF ontology, (2) the SSN ontology, (3) OCF standards, (4) the oneM2M ontology, and (5) ISO/IEC 30141:2017. Therefore, the requirements related to these standards were collected, and the associated tests were defined by using the test expression catalogue as it is depicted in Table <ref type="table" target="#tab_2">2</ref>. Table <ref type="table" target="#tab_22">D2</ref>.3 Evaluation of the semantic model in real world scenarios 31 5 shows the list of standards, the provenance of the gathered requirements associated to such standards, and the number of defined ontological requirements per standard. As it is shown, some of the requirements were extracted from official documentation, e.g., Technical Reports, while others were extracted from web sites. It is worth mentioning that some requirements, due to their complexity, were translated into several tests. Themis was also used in order to check if the VICINITY ontology network satisfies the test expressions defined for the requirements related to these IoT standards. As the test cases of such standards were generated following the testing method proposed in Section 3, the test expressions do not have any information of ontologies such as URIs, making them independent of the ontology from which they are extracted. Therefore, these test expressions can be executed on the VICINITY ontology network. Table <ref type="table" target="#tab_8">6</ref> shows the testing results of the requirements related to each standard after Themis execution on the VICINITY ontology network. All the tests are stored in the VICINITY ontology portal. From the execution of Themis, it could be deduced that the VICINITY ontology network satisfies several tests, but did not take into consideration some concepts related to these standards because the developers did not consider it necessary for the project domain definition. As an example, several concepts defined in the SAREF ontology are considered out of scope in the VICINITY domain, such as the Command or Function concepts, and, therefore, they are not included in the ontology. However, it could also be concluded that there were no conflicts between the VICINITY ontology network and these ontologies and standards. This last statement refers to the fact that, even though there are several undefined terms in VICINITY ontologies, there are no inconsistencies between the domain defined in the standards and the domain defined in the VICINITY ontologies. More detailed results related to the execution of the test cases of these standards is available online in the VICINITY ontology portal.<ref type="foot" target="#foot_10">16</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tests results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Analysed</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>33</head><p>In addition to the coverage of the VICINITY ontologies regarding the IoT standards, it has also been analysed the coverage of the IoT standards regarding the VICINITY ontology network with the aim of identifying whether there is knowledge defined in VICINITY that is not defined in none of the standards, and to identify overlaps. Therefore, the test associated to the five ontologies that belong to the VICINITY network, i.e., the VICINITY Core (Core), the Web of Things (WoT), the WoT mappings (Mappings), the VICINITY Adapters (Adapters), and the Datatypes (Datatypes) ontologies, were executed on the IoT standards. Since to follow the coverage method process depicted in Figure <ref type="figure" target="#fig_35">16Error</ref>! Reference source not found. it is needed to have an ontology to execute the test cases, we could only analyse those standards that have an ontology associated. These standards are the SAREF, the W3C SSN and the oneM2M ontologies. The following tables summarize the testing results of such standards with the tests of the VICINITY ontology network.</p><p>First, Table <ref type="table" target="#tab_10">7</ref> shows that the SAREF ontology satisfies 12 requirements from the VICINITY ontology network, which are related to Device and Thing concepts. To identify in more detail what is the overlap and in which concepts there is a relation between SAREF and the VICINITY ontology network the analysis steps proposed in Section 5.1.1Error! Reference source not found. were followed. Additionally, such analysis was completed with the information obtained from Table <ref type="table" target="#tab_8">6</ref>, which provides the results of the tests cases associated to the standards that are passed by the VICINITY ontologies. With all this information, it was extracted which are the relevant concepts where there is a potential overlap between the ontologies, i.e., Device and Thing. Therefore, the tests related to Device and Thing topics of both the VICINITY and the SAREF ontologies are analysed separately. Table <ref type="table" target="#tab_11">8</ref> summarizes the number of tests and the tests results for SAREF and VICINITY ontologies together, joining the results of Table <ref type="table" target="#tab_8">6</ref> and Table <ref type="table" target="#tab_10">7</ref>. Additionally, it shows the relevant concepts between these SAREF and VICINITY ontologies. Such requirements related to the relevant concepts Device and Thing of both ontologies are detailed in Table <ref type="table" target="#tab_12">9</ref>, together with the testing results for each ontology in order to analyse the overlap in these concepts. It is worth mentioning that the grey line indicates that the terms in the requirements are not considered in the ontology, that is, they are undefined. The green check mark ( ) represents that the ontology passes the test, while the orange check mark ( ) represents that the test returns the absent relation result, that is, the requirement is not implemented in the ontology and the addition of it would not lead to an inconsistent ontology. Additionally, the red cross ( ) indicates that the requirement is not implemented in the ontology and the addition of it would lead to an inconsistent ontology.  From Table <ref type="table" target="#tab_12">9</ref>, it is possible to extract some information regarding the overlap between the ontologies. Firstly, both ontologies include the concepts Device and Thing and have the following similarities: § Devices in VICINITY and SAREF have a model. § Devices in VICINITY and SAREF have a status. § Devices in VICINITY and SAREF measure properties.</p><p>However, there are some definitions of such concepts that are not included in both ontologies: § The relation between a device and a service, which is present in SAREF but not in VICINITY.</p><p>§ The relation between a device and a commodity, which is present in SAREF but not in VICINITY.</p><p>§ The category of devices, which is present in SAREF but not in VICINITY.</p><p>§ The relation between a device and its functions, which is present in SAREF but not in VICINITY.</p><p>§ The relation between a device and its owner, which is present in VICINITY but not in SAREF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D2.3 Evaluation of the semantic model in real world scenarios</head><p>40 § The relation between a thing and the interaction patterns, which is present in VICINITY but not in SAREF. § The relation between a thing and a thing and the security, which is present in VICINITY but not in SAREF. § The relation between a device and a spatial thing, which is present in VICINITY but not in SAREF.</p><p>Moreover, from this table it is also possible to see that the conceptualization of the Profile concept defined in the SAREF ontology is different from what it is conceptualized as a Profile in the VICINITY ontologies, even though there is no logical incompatibility. Figure <ref type="figure" target="#fig_38">20</ref> and Figure <ref type="figure" target="#fig_31">19</ref> show the conceptualization of each ontology regarding the requirements. In these figures, green rectangles and grey arrows represent the concepts and relationships that are implemented in both ontologies.</p><p>Table <ref type="table" target="#tab_14">10</ref> exposes that the SSN ontology only satisfies one requirement of the VICINITY ontology network and that this requirement is related to the Thing concept.  As it was previously done with the SAREF ontology, to identify in more detail what is the overlap between the analysed ontologies and in which concepts there is a relation between W3C SSN and the VICINITY ontology network, the information summarized in Table <ref type="table" target="#tab_8">6</ref> is also included in the analysis. The tests of both ontologies related to the topics where there is a potential overlap, i.e., those relevant concepts, between both the VICINITY and the W3C SSN ontologies are analysed separately. It is worth mentioning that, as shown in Table <ref type="table" target="#tab_8">6</ref> and Table <ref type="table" target="#tab_14">10</ref>, the VICINITY ontologies satisfy several requirements of the SSN ontology, while the SSN only satisfies one requirement of the VICINITY ontologies. This occurs because the VICINITY ontology imports the SOSA ontology, 17 which is a module of the W3C SSN ontology. Table <ref type="table" target="#tab_21">11</ref> summarizes the number of tests of both ontologies, together with their results and the identified relevant concepts, joining the results obtained in Table <ref type="table" target="#tab_8">6</ref> and Table <ref type="table" target="#tab_14">10</ref>. The requirements related the relevant concepts where there might be a potential overlap are detailed in Table <ref type="table" target="#tab_22">12</ref>, together with the testing results.  From Table <ref type="table" target="#tab_22">12</ref>, it is possible to extract some information regarding the overlap between the SSN ontology and the VICINITY ontology network. Firstly, both ontologies include the concepts Thing, Procedure, Sensor, System, Procedure, Property, Feature of Interest, Actuator and Deployment and have the following similarities: § The relation between a property and a feature of interest.</p><p>§ The relation between a sensor and a system.</p><p>However, there are some definitions of such concepts that are not included in both ontologies: § The relation of a procedure and its output, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between a platform and its deployment, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between a sensor and its stimulus, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between an actuator and its actuations, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between a procedure and its inputs, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between a deployment and its platform, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between a system and its procedure, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between a systems and other systems, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between a deployment and a property, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between an actuation and a result, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between a sensor and its observable properties, which is in the SSN ontology but not in the VICINITY ontologies. § The relation between security and things, which is in the VICINITY ontologies but not in the SSN ontology. § The relation between things and its interaction pattern, which is in the VICINITY ontologies but not in the SSN ontology. § The hierarchy of sensors, which is in the VICINITY ontologies but not in the SSN ontology.</p><p>Even though these concepts, i.e., Thing, Procedure, Sensor, System, Procedure, Property, Feature of Interest, Actuator and Deployment are not completely aligned in VICINITY and SSN ontologies, it can be concluded that no incompatibilities were found. Additionally, it was also found that there are some D2.3 Evaluation of the semantic model in real world scenarios 46 absent relations in the ontology. This can be deduce from Table <ref type="table" target="#tab_22">12</ref>, where the two first requirements have an orange mark. This mark means that even though the terms Actuator and Result exist in the ontology, the relation between such terms are not defined.</p><p>Figure <ref type="figure" target="#fig_39">22</ref> and Figure <ref type="figure" target="#fig_40">21</ref> show the conceptualization of each ontology regarding the requirements, where green rectangles and arrows represent the concepts and relationships implemented in both ontologies.</p><p>Finally, Table <ref type="table" target="#tab_23">13</ref> exposes that the oneM2M ontology only satisfies 1 requirement of the VICINITY ontology network, and that this requirement is related to the Thing concept. As it was previously done with the SAREF and the SSN ontologies, to identify in more detail what is the overlap and in which concepts there is a relation between oneM2M and the VICINITY ontology network, the tests related to Device and Thing topics of both VICINITY and oneM2M are analysed separately. Table <ref type="table" target="#tab_17">14</ref> summarizes the number of tests of both ontologies, together with their results and the identified relevant concepts, joining the results obtained in Table <ref type="table" target="#tab_8">6</ref> and Table <ref type="table" target="#tab_23">13</ref>. The requirements related the relevant concepts identified are added to Table <ref type="table" target="#tab_24">15</ref>, together with the testing results for both ontologies. Device and Thing From Table <ref type="table" target="#tab_24">15</ref> it was shown that both ontologies include the concepts Device and Thing and have the following similarities: § A relation between a device and other devices. § The interaction between things.</p><p>However, there are some definitions of such concepts that are not included in both ontologies: § The relation between a device and a task, which is in the OneM2M ontology but not in the VICINITY ontology. § The relation between a device and a service, which is in the OneM2M ontology but not in the VICINIY ontology. § The relation between a thing and its properties, which is in the OneM2M ontology but not in the VICINIY ontology. § The attributes of a device, which is in the VICINITY ontologies but not in the OneM2M ontology. § The relation between a thing and its interaction patterns, which is in the VICINITY ontologies but not in the OneM2M ontology. § The relation between security and things, which is in the VICINITY ontologies but not in the OneM2M ontology. § The definition of a device profile, which is in the VICINITY ontologies but not in the OneM2M ontology.</p><p>Moreover, from this table it is also possible to see that the conceptualization of the Device concept defined in the OneM2M ontology is different from what it is conceptualized as a Device in the VICINITY ontologies, since in OneM2M a device can be a physical o non-physical entity while in VICINITY a device can only be a physical entity. Figure <ref type="figure" target="#fig_21">23</ref> and Figure <ref type="figure" target="#fig_26">24</ref> show the conceptualization of both ontologies regarding the defined requirements, where green rectangles and grey arrows represent the concepts and relationships that are implemented in both ontologies. It is worth noting that, even though the conceptualization of Device is different in both ontologies, there is no logical incompatibility between them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D2.3 Evaluation of the semantic model in real world scenarios 50</head><p>Finally, Table <ref type="table" target="#tab_19">16</ref> and Table <ref type="table" target="#tab_26">17</ref> summarize the results obtained from the coverage analysis. Table <ref type="table" target="#tab_19">16</ref> shows the number of requirements defined for the VICINITY ontology network that are satisfied for each of the analysed IoT standard. Additionally, Table <ref type="table" target="#tab_26">17</ref> exposes the number of requirements defined for each of the IoT standards that are satisfied for the VICINITY ontology network. From these tables it can be observed that VICINITY is partially align with the IoT standards, e.g., 14 requirements of ISO/IEC 30131:2017 or 9 requirements of SSN ontology were satisfied. However, the VICINITY ontology is out of scope of such standards. This fact can be observed in Table <ref type="table" target="#tab_26">17</ref> where only the SAREF ontology satisfies more than one ontology. Such results could be justified due to the fact that the VICINITY ontology network was created for a particular project and domain with requirements for particular partners, while the IoT standards are more generic. However, it will be analysed if the VICINITY ontology network could be completed with more concepts that are defined in the IoT standards, in order to increase the conformance between them.   From the evaluation presented in this document it can be concluded that the VICINITY network does not have inconsistencies or modelling errors, and that it covers all the requirements given by the partners. The testing process allows the ontology developers to check that after each iteration whether all the requirements were satisfied and that it covers all the partners' expectations. Additionally, we have performed an ontology-driven data validation of the VICINITY platform relying on our Things Monitor component. As a result, the quality of data according to a set of requirements can be guaranteed.</p><p>Apart from checking that the developed ontologies satisfy all the project requirements, we also analyse how the VICINITY network is aligned with well-known IoT standards. From this coverage analysis we could conclude that, even though the VICINITY ontology network does not cover all the requirements in those standards, there are no inconsistencies between the standards and the VICINITY ontologies. This document also identifies the terms shared by the standards and the VICINITY ontologies. The coverage analysis also shows that VICINITY ontology network has partial conformance with the IoT standards, e.g., 14 requirements of ISO/IEC 30131:2017 or 8 requirements of SSN ontology were satisfied. However, this coverage analysis also shows that the VICINITY ontology network is out of scope of the analysed IoT standards, which is expected because the IoT standards are more generic than the VICINITY ontology network.</p><p>In addition, we analysed the elements from the ontology used by the pilots to describe their infrastructures. As a result, we concluded that most of the data in vicinity is properly labelled with specific types from the Adapters ontology; pilots are mostly registering properties, but there are also some actions and events. The properties are correctly link to a physical magnitude observed by such property however units are not been used. In addition anther lack identified is the use of contextual data such as buildings, rooms, cities, or countries. Finally, the number of Things registered with mappings, and thus interoperable, is not very high. Therefore, although everything is suitable to be discovered, not all discoverable infrastructures will allow the semantic interoperability services to be accessed. This matter with the contextual data and the mappings is not necessarily something wrong, since depends on the level of privacy that the pilots want to specify in their Things.</p><p>As future work, the minor pitfalls detected from the execution of OOPS! will be corrected, in order to improve the readability of the ontology. Additionally, a further analysis regarding whether more concepts should be reused or imported from the IoT standards will also be accomplished, in order to improve the conformance between the VICINITY ontology network and the analysed standards. Finally, as the VICINITY ontology network development methodology is iterative, the tests and their results will be updated in order to support the verification for such future versions.</p><p>In summary, this deliverable presents the evaluation of the VICINITY ontology network. It is worth mentioning that during the project lifetime, new requirements could appear and the VICINITY ontology could be updated. All the results presented in this document related to the validation regarding the model and the verification regarding their ontological requirements are available online in the VICINITY ontology portal<ref type="foot" target="#foot_11">21</ref> and will be updated over time if some of the ontologies change.                    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>List of Figures</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1</head><label>1</label><figDesc>Figure 1 VICINITY ontology network overview</figDesc><graphic coords="8,70.85,309.22,452.75,406.35" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>3 (D2. 3</head><label>33</label><figDesc>Evaluation of the semantic model in real world scenarios) document is part of WP2 (Semantic model). It is derived from the D2.2 where the VICINITY semantic model was presented, in order to Ontological requirements specification Ontology implementation Competency questions § Ont. Devel. § Ont. Devel. Evaluation of the semantic model in real world scenarios 10 validate the generated VICINITY ontology. Additionally, D2.3 is also derived from the deliverables D3.4, D3.5 and D3.6, as the Things Monitor described in this document will allow to check whether the infrastructures registered in the VICINITY platform satisfy the requirements established by the VICINITY semantic interoperability approach.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: OOPS! interface</figDesc><graphic coords="12,70.85,144.42,453.60,313.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Testing method with inputs and outputs</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Test execution steps</figDesc><graphic coords="17,96.65,211.56,401.45,505.08" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Themis and its relationship with the testing method</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>of the semantic model in real world scenarios 19 Figure 7 :</head><label>197</label><figDesc>Figure 7: Themis interface</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Test case in RDF exported by Themis</figDesc><graphic coords="19,97.40,507.14,399.90,218.95" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10</head><label>10</label><figDesc>Figure10recaps the system that we have developed. First, an expert provides a set of requirements. Next, such input is computed by our Monitor component, which stores in a database the results of the validation. Finally, the dashboard manager component reads the results and draws the corresponding charts. Our Things Monitor also provides the specification required to draw the charts.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: Architecture of our validation approach</figDesc><graphic coords="23,315.67,128.12,83.25,55.45" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>D2. 3 Figure 11 :Figure 13 :</head><label>31113</label><figDesc>Figure 11: Things from pilots with detailed descriptions and interoperable</figDesc><graphic coords="25,104.90,378.35,385.50,232.49" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 14 :D2. 3 Figure 15 :</head><label>14315</label><figDesc>Figure 14: Types from Adapters used by Pilots</figDesc><graphic coords="26,70.85,364.57,453.50,193.95" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 16 :</head><label>16</label><figDesc>Figure 16: Coverage analysis with inputs and output</figDesc><graphic coords="28,70.85,388.80,452.30,228.65" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 17 :</head><label>17</label><figDesc>Figure 17: Themis interfaces for loading test suites from files</figDesc><graphic coords="29,86.15,492.56,422.50,256.65" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 18 :</head><label>18</label><figDesc>Figure 18: Example of coverage report</figDesc><graphic coords="30,70.85,238.42,453.53,247.85" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>D2. 3</head><label>3</label><figDesc>Evaluation of the semantic model in real world scenarios have a device? Device deviceName only string, Device avatar Image, Device serialNumber only string Device VICINITY What is a device profile? Device deviceName only string Device avatar D2.3 Evaluation of the semantic model in real world scenarios 39 Sensor VICINITY The luminance sensor is a type of sensor Sensor VICINITY A noise sensor is a type of sensor Sensor VICINITY An indoor climate quality sensor is a type of sensor Sensor VICINITY A people counter is a type of sensor Sensor VICINITY The motion sensor is a type of device Sensor VICINITY A sound sensor is a type of sensor Sensor VICINITY An HVAC sensor is a type of sensor Sensor VICINITY The weight scale is type of sensor Sensor VICINITY The blood pressure monitor is a type of sensor Sensor VICINITY A thermometer is a type of sensor Thing VICINITY What is a thing in the web thing context? Thing VICINITY Each thing has at least an interaction pattern Thing VICINITY Security is associated with things</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure</head><label></label><figDesc>Figure 19: VICINITY Requirements conceptualization of Device and Thing</figDesc><graphic coords="40,301.81,239.13,210.69,207.40" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head></head><label></label><figDesc>17 https://www.w3.org/ns/sosa results for SSN and VICINITY ontologies</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>D2. 3</head><label>3</label><figDesc>Evaluation of the semantic model in real world scenarios is a type of sensor Sensor VICINITY The luminance sensor is a type of sensor Sensor VICINITY A noise sensor is a type of sensor Sensor VICINITY An indoor climate quality sensor is a type of sensor Sensor VICINITY A people counter is a type of sensor Sensor VICINITY The motion sensor is a type of device Sensor VICINITY A sound sensor is a type of sensor Sensor VICINITY An HVAC sensor is a type of sensor Sensor VICINITY The weight scale is type of sensor Sensor VICINITY The blood pressure monitor is a type of</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Figureof the semantic model in real world scenarios 47 Table 13 :</head><label>4713</label><figDesc>Figure 22: VICINITY Requirements conceptualization of Sensor and Thing</figDesc><graphic coords="46,319.95,183.44,215.20,246.10" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>D2. 3</head><label>3</label><figDesc>Evaluation of the semantic model in real world scenarios 48 Table 15 Overlap between the oneM2M and VICINITY ontologies Device OneM2M A device may be a physical or non-physical entity Device OneM2M A device can be composed of several (sub-)devices Device OneM2M A device has one or more services that expose in the network its functionalities Device VICINITY What is an IoT device? Device VICINITY A device has a unique identifier Device VICINITY Which attributes can have a device? Device deviceName only string, Device avatar Image, Device serialNumber only string Device VICINITY What is a device profile? Device deviceName only string Device avatar Image, Device deviceDescription only string, Device serialNumber only string Device VICINITY A device can have a status Device VICINITY A device can have a location Device VICINITY Which are the social relationships a device can be involved in? Device VICINITY Which devices are there? Device VICINITY A device profile indicates the type of device, e.g: sensor or actuator Thing OneM2MA thing is an entity that can be identified in the</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head>Figure 23 :</head><label>23</label><figDesc>Figure 23: oneM2M Requirements conceptualization of Device and Thing</figDesc><graphic coords="50,70.85,67.42,219.54,210.75" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>D2. 3</head><label>3</label><figDesc>Evaluation of the semantic model in real world scenarios 52 Conclusions Along this document the methodology and infrastructure of the evaluation of the VICINITY ontology has been detailed. Such evaluation includes several criteria: (1) validation regarding the model, (2) verification regarding their ontological requirements, (3) validation regarding pilot data, and (4) verification regarding IoT standards.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head>D2. 3</head><label>3</label><figDesc>Evaluation of the semantic model in real world scenarios 53 List of Tables</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_24"><head>Figure 1</head><label>1</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_25"><head>Figure 3 :</head><label>3</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_26"><head>Figure 4 :</head><label>4</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_27"><head>Figure 5 :</head><label>5</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_28"><head>Figure 6 :</head><label>6</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_29"><head>Figure 7 :</head><label>7</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_30"><head>Figure 8 :</head><label>8</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_31"><head>Figure 9 :</head><label>9</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_32"><head>Figure 13 :</head><label>13</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_33"><head>Figure 14 :</head><label>14</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_34"><head>Figure 15 :</head><label>15</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_35"><head>Figure 16 :</head><label>16</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_36"><head>Figure 17 :</head><label>17</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_37"><head>Figure 18 :</head><label>18</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_38"><head>Figure 20 :</head><label>20</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_39"><head>Figure 22 :</head><label>22</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_40"><head>Figure 21 :</head><label>21</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_41"><head>D2. 3 Evaluation of the semantic model in real world scenarios 54 Figure 24 :</head><label>35424</label><figDesc>Figure 1 VICINITY ontology network overview .................................................................................... Figure 2 Ontology development methodology ................................................................................Figure 3: OOPS! interface ...................................................................................................................Figure 4: Testing method with inputs and outputs ...........................................................................Figure 5: Test execution steps .............................................................................................................Figure 6: Themis and its relationship with the testing method ........................................................Figure 7: Themis interface ...................................................................................................................Figure 8: Test case in RDF exported by Themis .................................................................................Figure 9: Type of requirements considered by our system .............................................................Figure 10: Architecture of our validation approach ....................................................................... Figure 11: Things from pilots with detailed descriptions and interoperable ................................. Figure 12: Interaction patterns ...........................................................................................................Figure 13: Accessibility of interaction patterns .................................................................................Figure 14: Types from Adapters used by Pilots .................................................................................Figure 15: Use of SAREF by the Pilots ..................................................................................................Figure 16: Coverage analysis with inputs and output .....................................................................Figure 17: Themis interfaces for loading test suites from files ..........................................................Figure 18: Example of coverage report ............................................................................................ Figure 19: VICINITY Requirements conceptualization of Device and Thing .................................Figure 20: SAREF Requirements conceptualization of Device and Thing .....................................Figure 22: SSN Requirements conceptualization of Sensor and Thing ..........................................Figure 21: VICINITY Requirements conceptualization of Sensor and Thing ..................................Figure 23: oneM2M Requirements conceptualization of Device and Thing ................................</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="27,70.85,63.86,452.90,177.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 : OOPS! Results for the VICINITY ontology network OOPS! results Ontology Critical Important Minor</head><label>1</label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell></cell><cell>P04: Creating unconnected ontology elements</cell></row><row><cell></cell><cell></cell><cell></cell><cell>P08: Missing annotations</cell></row><row><cell>WoT</cell><cell>-</cell><cell>P11: Missing domain or range</cell><cell>P13: Inverse relationships not explicitly</cell></row><row><cell></cell><cell></cell><cell></cell><cell>declared</cell></row><row><cell></cell><cell></cell><cell></cell><cell>P22: Using different naming conventions</cell></row><row><cell>Core</cell><cell>-</cell><cell>-</cell><cell>-</cell></row><row><cell></cell><cell></cell><cell></cell><cell>P04: Creating unconnected ontology elements</cell></row><row><cell>WoT Mappings</cell><cell>-</cell><cell>P11: Missing domain or range</cell><cell>P08: Missing annotations P13: Inverse relationships not explicitly declared</cell></row><row><cell></cell><cell></cell><cell></cell><cell>P22: Using different naming conventions</cell></row><row><cell>VICINITY adapters</cell><cell>-</cell><cell></cell><cell>P04: Creating unconnected ontology elements P08: Missing annotations</cell></row><row><cell>VICINITY datatypes</cell><cell>-</cell><cell>P10: Missing disjointness P11: Missing domain or range</cell><cell>P04: Creating unconnected ontology elements P08: Missing annotations P13: Inverse relationships not explicitly</cell></row><row><cell></cell><cell></cell><cell></cell><cell>declared</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Evaluation of the semantic model in real world scenarios</head><label></label><figDesc></figDesc><table><row><cell></cell><cell>D2.3</cell><cell></cell><cell></cell></row><row><cell></cell><cell>Test catalogue</cell><cell>Glossary</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>ontologies</cell></row><row><cell>Ont.</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Requirments</cell><cell>1. Test design</cell><cell>2. Test implementation</cell><cell>3. Test execution</cell></row><row><cell></cell><cell>Test</cell><cell>Test</cell><cell>Test</cell></row><row><cell></cell><cell>expression</cell><cell>implementation</cell><cell>result</cell></row><row><cell>Legend</cell><cell></cell><cell></cell><cell>flow</cell></row><row><cell></cell><cell>Manual activity</cell><cell>Automatic activity</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>referenced</cell></row><row><cell></cell><cell></cell><cell></cell><cell>file</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 : Supported test expressions Test goal Test expression syntax</head><label>2</label><figDesc></figDesc><table><row><cell>T1 Equivalence</cell><cell>A EquivalentTo B</cell></row><row><cell>T2 Subsumption</cell><cell>A SubClassOf B</cell></row><row><cell>T3 Disjointness</cell><cell>A disjointWith B</cell></row><row><cell>T4 Property between two concepts</cell><cell>A SubClassOf P some B</cell></row><row><cell>T5 Universal restriction</cell><cell>A SubClassOf P only B</cell></row><row><cell>T6 Multiple inheritance</cell><cell>A SubClassOf B and C</cell></row><row><cell>T7 Symmetry</cell><cell>A Symmetric(P) B</cell></row><row><cell>T8 Maximum cardinality</cell><cell>A SubClassOf P max [num] B</cell></row><row><cell>T9 Minimum cardinality</cell><cell>A SubClassOf P min [num] B</cell></row><row><cell>T10 Cardinality</cell><cell>A SubClassOf P max [num]B</cell></row><row><cell>T11 The ontology contains the individual</cell><cell>I type A</cell></row><row><cell>T12 Subsumption and relation between classes</cell><cell>A SubClassOf [ClassB] that [PropertyP] Some C</cell></row><row><cell>T13 Minimum cardinality and relation between</cell><cell>A SubClassOf [PropertyP] min [num]B and B</cell></row><row><cell>classes</cell><cell>SubClassOf [PropertyP] some C</cell></row><row><cell>T14 Minimum cardinaly and universal restriction</cell><cell>A SubClassOf [PropertyP] min [num]B and B</cell></row><row><cell></cell><cell>SubClassOf [PropertyP] only C</cell></row><row><cell>T15 Definition of a disjoint set of classes</cell><cell>A SubClassOf B and C SubClassOf B that</cell></row><row><cell></cell><cell>disjointWith A</cell></row><row><cell>T16 Participation of a concept in an event</cell><cell>A SubClassOf [participates] some B</cell></row><row><cell>T17 Co-Participation of two concepts in an event</cell><cell>A and B SubClassOf participatesIn some C</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>D2.3 Evaluation of the semantic model in real world scenarios</head><label></label><figDesc>5   </figDesc><table><row><cell>Ontology</cell><cell cols="2">Extracted from</cell><cell>Defined</cell><cell>Implemented</cell><cell>Discarded</cell><cell>Pending</cell></row><row><cell></cell><cell cols="2">• D1.5 VICINITY</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="2">• Bratislava and later</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Core</cell><cell cols="2">meetings/emails with partners</cell><cell>190</cell><cell>50</cell><cell>140</cell><cell>0</cell></row><row><cell></cell><cell>• Partners'</cell><cell>devices</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="2">characterizations</cell><cell></cell><cell></cell><cell></cell></row><row><cell>WoT</cell><cell cols="2">W3C Web of Things IG</cell><cell>35</cell><cell>16</cell><cell>19</cell><cell>0</cell></row><row><cell>WoT Mappings</cell><cell>• Gateway API Developers</cell><cell></cell><cell>16</cell><cell>15</cell><cell>1</cell><cell>0</cell></row><row><cell>WoT adapters</cell><cell cols="2">• Partners' meetings characterizations Partners' devices</cell><cell>154</cell><cell>154</cell><cell>0</cell><cell>0</cell></row><row><cell>WoT datatypes</cell><cell cols="2">Partners' meetings</cell><cell>11</cell><cell>11</cell><cell>0</cell><cell>0</cell></row><row><cell></cell><cell></cell><cell></cell><cell>406</cell><cell>246</cell><cell>160</cell><cell>0</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 4 Tests executed for each VICINITY ontology</head><label>4</label><figDesc></figDesc><table><row><cell>Tests results</cell></row></table><note><p><p>6 </p>https://w3id.org/def/vtc#</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>D2.3 Evaluation of the semantic model in real world scenarios</head><label></label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>Table 5 : Summary of requirements information for the IoT standards</head><label>5</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>Table 6 : Summary of testing results for the IoT standards</head><label>6</label><figDesc></figDesc><table><row><cell>Ontology</cell><cell>Version</cell><cell>Extracted from</cell><cell>Defined</cell><cell>Defined tests</cell></row><row><cell></cell><cell></cell><cell></cell><cell>requirements</cell><cell></cell></row><row><cell>ETSI SAREF</cell><cell>v2.1.2</cell><cell>SAREF extension investigation Technical Report (TR 103 411) [7]</cell><cell>70</cell><cell>70</cell></row><row><cell>W3C SSN</cell><cell>V2.0</cell><cell>W3C SSN Specification 9</cell><cell>24</cell><cell>34</cell></row><row><cell>OCF</cell><cell>v2.0.2</cell><cell>OCF Core Specification [9]</cell><cell>27</cell><cell>27</cell></row><row><cell>OneM2M</cell><cell>v3.6.0</cell><cell>SAREF extension investigation Technical Report (TR 103 411) [7]</cell><cell>33</cell><cell>33</cell></row><row><cell>ISO/IEC 30141:20 17</cell><cell>-</cell><cell>ISO/IEC 30141:2017:Internet of Things (IoT) -Reference Architectures [8]</cell><cell>36</cell><cell></cell></row></table><note><p><p>10   </p>9 See https://www.w3.org/TR/vocab-ssn/ for the W3C documentation. 10 See http://vicinity.iot.linkeddata.es/vicinity/conformance.html for the online version of the requirements and tests related to the IoT standards.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9"><head>Evaluation of the semantic model in real world scenarios</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell>D2.3</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Number of</cell><cell></cell></row><row><cell>standard</cell><cell>Total number of tests</cell><cell>Number of test with undefined terms result</cell><cell>Number of result test with passed</cell><cell>Number of result test with conflict</cell><cell>test with result absent relation</cell><cell>Relevant concepts</cell></row><row><cell>ETSI SAREF 11</cell><cell>70</cell><cell>66</cell><cell>4</cell><cell>0</cell><cell cols="2">0 Device</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Sensor, System,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Procedure,</cell></row><row><cell>W3C SSN 12</cell><cell>34</cell><cell>10</cell><cell>9</cell><cell>0</cell><cell>15</cell><cell>Property, Feature of Interest,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Actuator,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Deployment</cell></row><row><cell>OCF 13</cell><cell>27</cell><cell>21</cell><cell>6</cell><cell>0</cell><cell cols="2">0 Device</cell></row><row><cell>OneM2M 14</cell><cell>33</cell><cell>28</cell><cell>4</cell><cell>0</cell><cell cols="2">1 Device and Thing</cell></row><row><cell>ISO/IEC</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>30141:20</cell><cell>36</cell><cell>22</cell><cell>14</cell><cell>0</cell><cell cols="2">0 Thing and User</cell></row><row><cell>17 15</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>200</cell><cell>147</cell><cell>37</cell><cell>0</cell><cell>16</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10"><head>Table 7 : Testing results for SAREF ontology regarding to VICINITY requirements</head><label>7</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11"><head>Evaluation of the semantic model in real world scenarios 34Table 8 : Testing results for SAREF and VICINTY ontologies</head><label>8</label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell>D2.3</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">Tests results</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Number of</cell><cell></cell></row><row><cell>Analysed standard</cell><cell>Total number of tests</cell><cell>Number of test with undefined terms result</cell><cell>Number of result test with passed</cell><cell>Number of result test with conflict</cell><cell>test with result absent relation</cell><cell>Relevant concepts</cell></row><row><cell>WoT</cell><cell>14</cell><cell>13</cell><cell>1</cell><cell>0</cell><cell cols="2">0 Thing</cell></row><row><cell>Core</cell><cell>50</cell><cell>43</cell><cell>7</cell><cell>0</cell><cell cols="2">0 Device</cell></row><row><cell>WoT</cell><cell>15</cell><cell>15</cell><cell>0</cell><cell>0</cell><cell cols="2">0 -</cell></row><row><cell>Mapping</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>s</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>WoT</cell><cell>154</cell><cell>150</cell><cell>4</cell><cell>0</cell><cell cols="2">0 Adapter,</cell></row><row><cell>adapters</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Property</cell></row><row><cell>WoT</cell><cell>13</cell><cell>13</cell><cell>0</cell><cell>0</cell><cell cols="2">0 -</cell></row><row><cell>datatyp</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>es</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>246</cell><cell>234</cell><cell>12</cell><cell>0</cell><cell>0</cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_12"><head>Table 9 : Overlap between SAREF and VICINITY ontologies Adapter</head><label>9</label><figDesc></figDesc><table /><note><p>VICINITY A smart oven is a type of device Adapter VICINITY A light switch is a type of device Adapter VICINITY The battery storage unit is a type of device Adapter VICINITY The photovoltaic panel is a type of device Adapter VICINITY The power meter is a type of device Adapter VICINITY A battery storage unit is a type of device Adapter VICINITY A photovoltaic panel is a type of device Device SAREF A device can be characterized by a profile</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13"><head>Tests results Analysed standard Total number of tests Number of test with undefined terms result Number of test with passed result Number of test with conflict result Number of test with absent relation result Relevant concepts</head><label></label><figDesc></figDesc><table><row><cell>SAREF and VICINITY</cell><cell>316</cell><cell>300</cell><cell>16</cell><cell>0</cell><cell>0</cell><cell cols="2">Adapter, Device, Property, Sensor and Thing</cell></row><row><cell>Topic</cell><cell>Provenance</cell><cell></cell><cell>Requirement</cell><cell></cell><cell cols="2">SAREF ontology</cell><cell>VICINITY</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>ontology</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>network</cell></row><row><cell>Adapter</cell><cell>VICINITY</cell><cell cols="2">A lightbulb is a device</cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_14"><head>Table 10 : Testing results for W3C SSN ontology regarding VICINITY requirements</head><label>10</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_15"><head>Tests results Analysed standard Total number of tests Number of test with undefined terms result</head><label></label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell>D2.3</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Number of</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>Number of</cell><cell>Number of</cell><cell>test with</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>test with passed</cell><cell>test with conflict</cell><cell>absent relation</cell><cell>Relevant concepts</cell></row><row><cell></cell><cell></cell><cell></cell><cell>result</cell><cell>result</cell><cell>result</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Sensor, System,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Procedure,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Property,</cell></row><row><cell>SSN and VICINITY</cell><cell>280</cell><cell>255</cell><cell>10</cell><cell>0</cell><cell>15</cell><cell>Feature of Interest, Actuator,</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Deployment and</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Thing</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_16"><head>Evaluation of the semantic model in real world scenarios 43 Table 12: Overlap between the SSN and VICINITY ontologies</head><label></label><figDesc></figDesc><table><row><cell>Topic</cell><cell>Provenance</cell><cell>Requirement</cell><cell>W3C SSN ontology</cell><cell>VICINITY</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>ontology</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>network</cell></row><row><cell>Actuation</cell><cell>SSN</cell><cell>An actuation has a result</cell><cell></cell><cell></cell></row><row><cell>Actuator</cell><cell>SSN</cell><cell>An actuator made only actuations</cell><cell></cell><cell></cell></row><row><cell>Actuator</cell><cell>SSN</cell><cell>What is an actuator?</cell><cell></cell><cell></cell></row><row><cell cols="2">Deployment SSN</cell><cell>What is a deployment?</cell><cell></cell><cell></cell></row><row><cell cols="2">Deployment SSN</cell><cell>Deployment is associated to a property</cell><cell></cell><cell></cell></row><row><cell>Feature of</cell><cell>SSN</cell><cell>What is feature of interest?</cell><cell></cell><cell></cell></row><row><cell>Interest</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Platform</cell><cell>SSN</cell><cell>Platform has a deployment</cell><cell></cell><cell></cell></row><row><cell>Platform</cell><cell>SSN</cell><cell>A platform is deployed by some system</cell><cell></cell><cell></cell></row><row><cell>Platform</cell><cell>SSN</cell><cell>A deployment is deployed in a platform</cell><cell></cell><cell></cell></row><row><cell>Procedure</cell><cell>SSN</cell><cell>A procedure has an output</cell><cell></cell><cell></cell></row><row><cell>Procedure</cell><cell>SSN</cell><cell>A procedure is implemented by a system</cell><cell></cell><cell></cell></row><row><cell>Procedure</cell><cell>SSN</cell><cell>A procedure has an input</cell><cell></cell><cell></cell></row><row><cell>Procedure</cell><cell>SSN</cell><cell>What is a procedure?</cell><cell></cell><cell></cell></row><row><cell>Property</cell><cell>SSN</cell><cell>What is a property?</cell><cell></cell><cell></cell></row><row><cell>Sensor</cell><cell>SSN</cell><cell>What is a sensor?</cell><cell></cell><cell></cell></row><row><cell>Sensor</cell><cell>SSN</cell><cell>A sensor is a type of system</cell><cell></cell><cell></cell></row><row><cell>Sensor</cell><cell>SSN</cell><cell>Sensor detects a stimulus</cell><cell></cell><cell></cell></row><row><cell>Sensor</cell><cell>VICINITY</cell><cell>A humidity sensor is a type of sensor</cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_17"><head>Table 14 : Testing results for oneM2M and VICINITY ontologies</head><label>14</label><figDesc></figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_18"><head>Tests results Analysed standard Total number of tests Number of test with undefined terms result Number of test with passed result Number of test with conflict result Number of test with absent relation result Relevant concepts</head><label></label><figDesc></figDesc><table><row><cell>WoT</cell><cell>14</cell><cell>13</cell><cell>1</cell><cell>0</cell><cell cols="2">0 WoT</cell></row><row><cell>Core</cell><cell>50</cell><cell>50</cell><cell>0</cell><cell>0</cell><cell cols="2">0 -</cell></row><row><cell>WoT</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Mapping</cell><cell>15</cell><cell>15</cell><cell>0</cell><cell>0</cell><cell cols="2">0 -</cell></row><row><cell>s</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>WoT adapters</cell><cell>154</cell><cell>154</cell><cell>0</cell><cell>0</cell><cell cols="2">0 -</cell></row><row><cell>WoT datatyp</cell><cell>13</cell><cell>13</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>-</cell></row><row><cell>es</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>246</cell><cell>245</cell><cell>1</cell><cell>0</cell><cell>0</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">Tests results</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Number of</cell><cell></cell></row><row><cell>Analysed standard</cell><cell>Total number of tests</cell><cell>Number of test with undefined terms result</cell><cell>Number of result test with passed</cell><cell>Number of result test with conflict</cell><cell>test with result absent relation</cell><cell>Relevant concepts</cell></row><row><cell>oneM2M</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>and</cell><cell>270</cell><cell>264</cell><cell>5</cell><cell>0</cell><cell>1</cell><cell></cell></row><row><cell>VICINITY</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_19"><head>Table 16 : Overview of the number of VICINITY requirements satisfied by each IoT standard Table 17: Overview of the number of the IoT standards' requirements satisfied by the VICINITY ontology network</head><label>16</label><figDesc></figDesc><table /><note><p><p><p><p>18 </p>See http://vicinity.iot.linkeddata.es/vicinity/testing/report-saref-results.html for the online version of the SAREF ontology requirements.</p>19 </p>See http://vicinity.iot.linkeddata.es/vicinity/testing/report-ssn-results.html for the online version of the SSN ontology requirements. 20 See http://vicinity.iot.linkeddata.es/vicinity/testing/report-onem2m-results.html for the online version of the One2M2M ontology requirements.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_20"><head>Tests results Standard Number of VICINITY requirements passed Percentage of VICINITY requirements passed</head><label></label><figDesc></figDesc><table><row><cell cols="2">ETSI SAREF 18</cell><cell>12</cell><cell></cell><cell>4.87%</cell><cell></cell></row><row><cell>W3C SSN 19</cell><cell></cell><cell>1</cell><cell></cell><cell>0.4%</cell><cell></cell></row><row><cell>OneM2M 20</cell><cell></cell><cell>1</cell><cell></cell><cell>0.4%</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>Standard test cases</cell><cell></cell></row><row><cell>Ontology</cell><cell cols="2">Percentage of SAREF requirements passed</cell><cell>Percentage of SSN requirements passed</cell><cell>Percentage of OCF requirements passed</cell><cell>Percentage of OneM2M requirements passed</cell><cell>Percentage of ISO/IEC 30141:2017 requirements passed</cell></row><row><cell>VICINITY ontology network</cell><cell></cell><cell>5.71% (4 reqs. passed)</cell><cell>26.47% (9 reqs. passed)</cell><cell>22.22% (6 reqs passed)</cell><cell>12.12% (4 reqs. passed)</cell><cell>38.89% (14 reqs. passed)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_21"><head>Table 1 :</head><label>1</label><figDesc>OOPS! Results for the VICINITY ontology network .............................................................</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_22"><head>Table 2 :</head><label>2</label><figDesc>Supported test expressions ..................................................................................................</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_23"><head>Table 3 :</head><label>3</label><figDesc>Summary of requirements categorization for the VICINITY ontology network .............. Table 4 Tests executed for each VICINITY ontology ........................................................................</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_24"><head>Table 5 :</head><label>5</label><figDesc>Summary of requirements information for the IoT standards ...........................................</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_25"><head>Table 6 :</head><label>6</label><figDesc>Summary of testing results for the IoT standards ...............................................................</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_26"><head>Table 7 :</head><label>7</label><figDesc>Testing results for SAREF ontology regarding to VICINITY requirements ..........................</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_27"><head>Table 8 :</head><label>8</label><figDesc>Testing results for SAREF and VICINTY ontologies ..............................................................</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_28"><head>Table 9 :</head><label>9</label><figDesc>Overlap between SAREF and VICINITY ontologies ...........................................................Table 10: Testing results for W3C SSN ontology regarding VICINITY requirements ....................... Table 11: Testing results for SSN and VICINITY ontologies ................................................................ Table 12: Overlap between the SSN and VICINITY ontologies ....................................................... Table 13: Testing results for the oneM2M ontology regarding to VICINITY requirements ............ Table 14: Testing results for oneM2M and VICINITY ontologies ...................................................... Table 15 Overlap between the oneM2M and VICINITY ontologies .............................................. Table 16: Overview of the number of VICINITY requirements satisfied by each IoT standard ... Table 17: Overview of the number of the IoTstandards' requirements satisfied by the VICINITY ontology network ................................................................................................................................</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0"><p>http://www.hermit-reasoner.com/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_1"><p>See https://github.com/mariapoveda/wot-ontology/issues/5 for the discussion of the deletion of the WoT interface term.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_2"><p>See http://vicinity.iot.linkeddata.es/vicinity/testing.html for the online version of the VICINITY ontologies requirements.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_3"><p>http://www.w3.org/ns/ssn</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_4"><p>https://openconnectivity.org</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="11" xml:id="foot_5"><p>See http://vicinity.iot.linkeddata.es/vicinity/testing/report-saref-results.html for the online version of the SAREF ontology requirements.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_6"><p>See http://vicinity.iot.linkeddata.es/vicinity/testing/report-ssn-results.html for the online version of the SSN ontology requirements.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="13" xml:id="foot_7"><p>See http://vicinity.iot.linkeddata.es/vicinity/testing/report-ocf-results.html for the online version of the OCF requirements.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14" xml:id="foot_8"><p>See http://vicinity.iot.linkeddata.es/vicinity/testing/report-onem2m-results.html for the online version of the One2M2M ontology requirements.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="15" xml:id="foot_9"><p>See http://vicinity.iot.linkeddata.es/vicinity/testing/report-isoiec30141-results.html for the online version of the ISO IEC 30141 ontology requirements.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="16" xml:id="foot_10"><p>See http://vicinity.iot.linkeddata.es/vicinity/conformance.html for the online version of the requirements and tests related to the IoT standards.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="21" xml:id="foot_11"><p>http://vicinity.iot.linkeddata.es/test</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">NeOn Methodology for Building Ontology Networks: a Scenario-based Methodology</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Suárez-Figueroa Y</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">» de Proceedings of the International Conference on SOFTWARE, SERVICES &amp; SEMANTIC TECHNOLOGIES</title>
		<meeting><address><addrLine>Sofia, Bulgaria</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A Survey on Ontology Reasoners and Comparison</title>
		<author>
			<persName><forename type="first">S</forename><surname>Abburu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computer Applications</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">OOPS! (OntOlogy Pitfall Scanner!): An On-line Tool for Ontology Evaluation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Poveda-Villalón</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gómez-Pérez Y</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Suárez-Figueroa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal on Semantic Web and Information System</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Fernández-Izquierdo Y</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>García-Castro</surname></persName>
		</author>
		<title level="m">Requirements Behaviour Analysis for Ontology Testing,» de European Knowledge Acquisition Workshop</title>
		<meeting><address><addrLine>Nancy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">CORAL: A Corpus of Ontological Requirements Annotated with Lexico-Syntactic Patterns</title>
		<author>
			<persName><forename type="first">A</forename><surname>Fernández-Izquierdo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Poveda-Villón Y</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>García-Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">«</forename><surname>Fernández-Izquierdo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Poveda-Villalón</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>García-Castro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2019-06">2019. June. 2019</date>
			<publisher>» de European Semantic Web Conference</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">NeOn Modelling Components. Deliverable 5.1.1 NeOn Project</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">C</forename><surname>Suarez-Figueroa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Brockmans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gangemi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gomez-Perez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lehmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lewen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Presutti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sabou</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">SAREF extension investigation</title>
		<author>
			<persName><surname>Etsi</surname></persName>
		</author>
		<idno>(TR 103 411</idno>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">ISO</title>
		<author>
			<persName><surname>Iso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEC</title>
		<imprint>
			<biblScope unit="volume">30141</biblScope>
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
	<note type="report_type">Internet of Things (IoT) -Reference Architectures</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">OCF SPECIFICATION 2.0.2,» [En línea</title>
		<author>
			<persName><forename type="first">O</forename><forename type="middle">C</forename><surname>Foundation</surname></persName>
		</author>
		<ptr target="https://openconnectivity.org/developer/specifications" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<orgName type="collaboration">Keywords Adapters ....................................</orgName>
		</author>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">25</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<orgName type="collaboration">Datatypes ........................................ ; 25 ontology requirement ................ ; 25 oneM2M………………………………………………..23,25 SAREF…………………………………………………….23,25 SSN ........................................................</orgName>
		</author>
		<title level="m">ontology network……………………</title>
		<imprint>
			<date>8,10,18,25</date>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page">25</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title/>
		<author>
			<persName><surname>Wot………………………………………………</surname></persName>
		</author>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">25</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">WoT mappings…………………………………</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">25</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
