LIST OF TABLES
EXECUTIVE SUMMARY
The objective of this deliverable is to report on the final status of the ontology development process started in D4.2. For that purpose, the document starts by giving a general overview of the current state of the BIMERR ontology network at M30, and the resources generated during its design, implementation, and publication.Each module of the BIMERR ontology developed in this second phase is described in The document also covers the alignment and translation from the BIMERR ontology to a JSON serialized data model. First, the metadata ontology is explained, providing a description of the terms included in the model to allow the enrichment of the ontologies.Afterwards, the transformation process is summarized showing the resulting data model.Finally, a summary of the methodology followed for the creation of the models is described, being mostly focused on the particular modifications made to the original methodology described in D4.2 in order to adapt it to the complexity of the project and the number of domains.INTRODUCTION 1.SCOPE AND OBJECTIVES OF THE DELIVERABLE
As explained in D4.2 "BIMERR Ontology & Data Model 1" The goal of this deliverable is to describe (a) the BIMERR ontology network and the resources generated during its development including a detailed description of each module, and (b) the transformation process to achieve the desired JSON data model, considering all the requirements for updates and changes that have been considered up to M30. Finally, this document presents some conclusions about the steps followed and proposes next steps.Figure For the sake of understandability, readers not familiar with the concept of ontologies in computer science and the web are referred to "Ontology Development 101: A Guide to Creating Your First Ontology" 4 as a basic reference for this topic.  RELATION TO OTHER TASKS AND DELIVERABLES
This deliverable D4.3 is related to other BIMERR deliverables as indicated in Table BIMERR ONTOLOGY NETWORK AND DATA MODELS PORTAL
This section describes the whole ontology network developed for the BIMERR project as well as the main artefacts and resources obtained during its development. The models that have been created in this second iteration are analyzed in Section 3. Although this deliverable is focused on the design and implementation of the ontologies, it is important to remark that the results of this effort are both the ontologies and the data models that are finally supported by BIF.Table During the development of the first sprint of the ontologies, the BIMERR network was devised to contain 8 modules. Two of those modules were: the Health & Safety Issues and the Renovation Measures modules. However, in this second sprint, it was realized that the concepts and relations inside both modules could be covered with other related ontologies, such as the Annotation Objects and the KPI modules, respectively. In addition to that, new domains were identified, more concretely the Renovation Processes and the Information Objects domains. THE BIMERR ONTOLOGY NETWORK
The BIMERR ontology network consists of nine modules, where each module represents a domain of the project. Figure Figure 2. BIMERR ontology network overview
In addition, white boxes in Figure Furthermore, additional cross-domain ontologies were reused once the requirements and conceptualizations were analyzed in detail, as the case of the SKOS (Simple Knowledge Organization System) and Time ontologies. As we can infer from Figure The main hierarchies between concepts are also included. These hierarchies are represented by arrows with white endings (triangles) and can be read as follows: The class in the origin of the arrow is a subclass of the class in the end of the arrow.It is worth noting that complete and up to date documentation of each ontology module is provided online and is accessible through each of the ontologies' URI. In the rest of this document only the main concepts or modeling decisions are detailed.Apart from the domain-specific ontological requirements, the BIMERR ontologies development is based on the following non-functional requirements:• Reuse: existing ontologies or standard models shall be reused when possible, thereby increasing interoperability with external systems that might be already using such ontologies. The point is also applied at the meta-level by using standard technologies to implement the ontologies themselves.• Modularity: the ontology shall be designed as a network in which modules might be interconnected and refer to others.• Good practices: the ontologies shall be developed following methodologies and best practices commonly used in ontology engineering in order to address ontology development activities such as design, implementation, evaluation, publication, and documentation, among others.The graphical representation of the ontology network as well as the diagrams that represent each module follow a particular visual notation that is also used along this document. The visual notation used in the project is the one formulated in the Chowlk framework, which defines a set of graphical shapes for the design of ontology conceptualizations. The use of this notation not only allows the creations of UML-like models that can be used to document the ontologies, but also the automatic generation of the ontology implementation in a formal language (OWL) by means of a converter that is part of the framework. • Colored rectangles are used to denote classes created in the ontology being described, while white rectangles denote reused classes. For all the entities, it is indicated in which ontology they are defined by the prefix included before their identifier.• Arrows are used to represent properties between classes and to represent some rdf, rdfs and owl constructs, more precisely: o Dashed arrows with the identifiers between stereotype signs (i.e., "<< >>") refer to OWLo Dashed arrows with no identifier are used to represent the rdf:type relation, indicating that the element in the origin is an instance of the class in the destination of the arrow.• Datatype properties are denoted by rectangles attached to the classes, in a UMLoriented way. Dashed boxes represent datatype properties that can be applied to the class it is attached to while plain boxes represent that the domain of the datatype property is declared to be the class attached.• Individuals are denoted by rectangles in which the identifier is underlined. Literals are denoted by rectangles in which the value is included between quotation marks.• The representation of additional property axioms (functional, inverse functional, transitive, and symmetric) that are being used in the diagram are shown in the overview ontology legend. THE BIMERR ONTOLOGY PORTAL
The BIMERR ontology portal gathers all the resources generated during the ontology development process. Figure • Ontologies: It is the main section of the portal, which shows the main information about the ontologies. This section follows a tabular approach which includes:o Links to the ontologies' documentation published on the web. This documentation is generated automatically from the ontology implementation using the Widoco tool o An ontology description.o Links to the GitHub repositories containing the code and other resources for each model.o Links to the GitHub issue trackers.o Links to the GitHub releases.• Enriched ontologies: It contains the ontologies with enriched metadata, and the data models obtained after the transformation process as we can see in Figure Regarding the guidelines section that can be accessed through the main section, it provides the users with a brief overview of the proposed process for developing ontologies and some guidelines which should be followed by the domain experts and ontology developers who wants to contribute. This section includes information about:• How the repository should be structured;• The tools recommended to be used during the ontology development process;• Ontology versioning;• Issues management. ONTOLOGY RESOURCES
The resources generated during the process of ontology conceptualization, implementation and publication are centralized in GitHub repositories created for each individual domain, as it can be seen in Figure • The diagrams folder: Contains the conceptualization diagrams of the developed ontology in an XML format.• The documentation folder: Contains the HTML documentation of the model.• The ontology folder: Contains the implementation of the ontology in Turtle format.• The requirements folder: Contains the requirements of the ontology in tables and the ORSD (Ontology Requirements Specification Document) for each module. Additionally, the GitHub repositories support the maintenance of the ontology, by managing the list of issues identified by the domain experts and ontology developers.All the changes and improvements to the ontology need to be agreed among all members of the ontology development team. The GitHub issue tracker is used to discuss improvements and issues about the domains. If domain experts or ontology developers want to add new concepts to the ontology, they have to create a new issue in the GitHub issue tracker, which will be used to start a discussion about the approval of the proposal.GitHub issues are marked as "open" and "closed". The issues can also have an assignee, which is the person that is responsible for moving the issue forward. Figure DATA MODELS
The JSON data models generated from the ontologies can be obtained from the BIMERR ontologies portal (see Figure BIMERR ONTOLOGY NETWORK DESCRIPTION
In this section, the ontologies that composes the BIMERR network are thoroughly presented. The section provides a description of the usability of the model, an explanation of the conceptualization, example(s) of how to instantiate it, and a list of all the resources generated during the its implementation. Additionally, the links between the individual models are explained and some decisions made during its development are described.BUILDING MODULE
The purpose of the Building Ontology is to represent the main spatial topological elements of a building. Furthermore, the model aims to represent the main components and systems that are directly involved in energy related aspects of buildings. This model acts as the core module within the BIMERR Ontology Network, where several other domains related to the building industry are connected to it. The model is constructed as an extension of the BOT ontology Figure Figure Figure Model Description
The most important concepts related to the Building domain are the following:• Building: Represents a structure that provides shelter for its occupants or contents and stands in one place. The building is also used to provide a basic element within the spatial structure hierarchy for the components of a building project (together with site, storey, and space).• Storey: The building storey has an elevation and typically represents a (nearly) horizontal aggregation of spaces that are vertically bound.• Space: A space represents an area or volume bounded actually or theoretically.Spaces are areas or volumes that provide for certain functions within a building.• Zone: A part of the physical world or a virtual world that is inherently both located in this world and having a 3D spatial extent.• Apartment: A self-contained housing unit which is composed by several spaces.• Element: An element is a generalization of all components that make up an AEC product.The topological elements shown in Figure Also, for the representation of the property values the design pattern from the SAREF Ontology is reused, where each property is related to a measurement, which has an associated a unit of measure.Data Example
Figure The building instance identified in the model as data:Building01 has an IFC identifier "2cZtnlll9DugwKjW2uDsyk" extracted from the IFC file, which is linked to this entity using the building:hasIFCFile relationship. The building is located at a latitude of 41.730330°, and a longitude of -2.441711°.The  Model Evaluation
The building ontology has been evaluated in two different ways. The first method consists in the detection of common pitfalls in the ontology implementation. Such pitfalls are identified using the OOPS! Web application The evaluation results after executing OOPS! for a second time are shown in Figure This time we can see that the critical errors has been solved and that the number of important errors has been reduced to just nine cases. The same process followed using OOPS! in this section is going to be repeated for the rest of the models, ensuring that no critical errors exist, and correcting important errors if appropriate. This process will not be described in the subsequent models in order to avoid repetitive information.The second method evaluates the suitability of the model for a specific application Also, the building:type attribute was added in the building:Element concept in order to facilitate the querying of building components. Finally, the section of the ontology related to the description of properties and measurements has been replicated from the material properties ontology. This is a temporary modeling decision until the linking capabilities between models of BIF has been tested.Links to other models
The building ontology is linked to two other modules: The KPI module and the Information Objects module. In order to discover which renovation projects have been performed over a building entity, the model includes the relation building:relatedProject between the concepts building:Building and kpi:Project.Furthermore, we can link any topological element of the building to additional documents using the io:relatedDocumentation object property. We can be even more specific and ask for IFC files (io:relatedIFCFile) or OBJ files (io:relatedOBJFile).Model Particularities
The structure of the data models finally expected by the BIMERR InteroperabilityFramework imposes some restrictions and requirements over the ontologies developed in the project.In the particular case of the building ontology additional attributes and relations were added in order to facilitate the population and querying of building information. For instance, the building:type attribute was added to query building elements by its type.Even though, this operation is naturally supported by ontologies implemented in the OWL language, we need to include those artificial fields to allow those queries in BIF.List of Resources
The following list of resources are provided for the building ontology:• Ontology URI:https://bimerr.iot.linkeddata.es/def/building/ ANNOTATION OBJECTS MODULE
The Annotations Objects Ontology aims to represent the annotations produced during the development of a building renovation project. These annotations inform about issues found during the renovation activities or missing information not gathered during the surveying process that could be relevant for the project, such as missing building components. The model is based in the Building Collaboration Format (BCF), which is the standard for the representation of issues between different BIM modeling tools. Figure Model description
The main concepts in the model are ao:Topic and ao:Comment, which are inherited from the BCF standard. The ao:Topic represents reference information about the topic of the issue or annotation. We can describe those topics using attributes such as ao:identifier or ao:title. We can categorize those topics according to different aspect of the project:• Stage (ao:stage): Preliminary Planning End, Construction Start, Construction End, etc.• Label (ao:label): Architecture, Structure, Mechanical, Electrical, etc.• Type (ao:topicType): Comment, Issue, Request, or Solution.Additionally, the model gives the possibility to examine the full history of the modifications of this topic (ao:creationDate and ao:modifiedDate) and the authors of those changes (ao:creationAuthor and ao:modifiedAuthor), as well as assign an specific worker to solve the issue (ao:assignedTo).Finally, it allows to add comments (ao:Comments) related to the topic at hand. The purpose of those comments is to record the discussion between different stakeholders and organization related to the topic. Similar to the case of topics we can keep a history of the modifications of those comments using the same fields.Data Example
Figure The topic is further documented with images (data:ImageFile01) from the site and it is related to specific building components of the BIM model, in this case the data:Roof02. Model Evaluation
The model has been evaluated using OOPS!, the detailed results are available at the ontology repository.Links to other models
During the process of generating annotations, one worker may want to attach complementary information to the textual information that would better describe the problem. The model covers this requirement by linking the topics with the Information Objects ontology. The ao:InformationObjects concept represents any file that is stored in BIF. It is possible to make the connection between the topics and the files using any of the object properties defined in the model depending on the type of file to be referenced. For instance, one could use the ao:relatedImageFile to indicate the location of an image or the more general one ao:relatedDocumentation for file types not considered in the model.The ontology is also connected to the building module to indicate to which topological elements (building:Space or building:Element) the topic refers to. Also a connection to the ao:Project concept from the KPI ontology is provided to allow the retrieval of all the issues related to the project.Model Particularities
As mentioned in the description section, we can categorize a topic using several classifications. For instance, we can classify it by the stage of the project it was taken, or by the type of issue it tries to address. We include that in the model by means of attributes attached at the Topic level. Each of those attributes can contain a set of default values, which can be naturally implemented in the ontology using RDF collections. However, due to the current limitation of BIF to not accept lists as a datatype, the values for those fields are left empty, just indicating that the values should be strings.List of Resources
The following list of resources are provided for the annotation objects ontology:• Ontology URI:https://bimerr.iot.linkeddata.es/def/annotation-objects/• Ontology GitHub repository:https://github.com/oeg-upm/bimerr-annotation-objects• Ontology in Turtle format:https://bimerr.iot.linkeddata.es/def/annotation-objects/ontology.ttl• Ontology enriched with metadata:https://bimerr.iot.linkeddata.es/ontologies/ao_enriched.ttlRENOVATION PROCESSES MODULE
The purpose of the Renovation Processes Ontology is to represent the different processes and tasks to be executed during the implementation of a building renovation project, as well as the work orders received by the workers onsite.During the planning stage of a project a detailed workflow is developed with the sequence of processes needed in order to execute it successfully. Each process is divided into smaller tasks that are assigned to specific workers. Those workers are notified about the activities they have to perform and report back the progress done in those activities.Model description
The conceptualization of the ontology is shown in Figure Figure 18. Renovation Processes Ontology Conceptualization
The processes are further detailed using a series of attributes. It is possible to indicate which are the planned finishing and starting times (renp:plannedStart, renp:plannedFinish), and compare them to the actual figures on those metrics (renp:actualStart and renp:actualFinish). The model also allows the instantiation of the actual process on the process at hand by means of the datatype property renp:executionStatus.In order to facilitate the querying of processes and tasks from the worker's side, the processes are connected to the topological elements of the building. This connection allows to know in which spaces (renp:performedAtSpace) or over which elements (renp:performedOverComponent) the renovation activities need to be performed. The installation of the material lift and crane was performed by the data:Worker01 with email email@company.com and personal identification "SomeInternalID".Data Example
Figure 19. Data Example of the Renovation Process Ontology
Model Evaluation
The model has been evaluated using OOPS!, the detailed results are available at the ontology repository.Links to other models
The renovation process model is connected to two other modules in the BIMERR Ontology Network. The first connection is with the Key Performance Indicators Ontology using the kpi:Project and kpi:KPI concepts. By making this connection we can facilitate the retrieval of all the processes related to a project, and the specification of planned and calculated KPI's by activities. The second connection is with the Building ontology, specifically with the following concepts: building:Space, building:Element, and building:Storey. As discussed earlier these links implemented at the process level enable the identification of all the activities that need to be executed by location or by building element.Model Particularities
The ontology includes concepts from the KPI ontology in order to support the use cases that deal with the notification of those metrics to workers on site. Some concepts from the KPI module were replicated in this ontology such as the kpi:KPIValue class to instantiate specific values for these indicators, as well as the saref:UnitOfMeasure concept to represent the units of these metrics. models in the BIF. This feature is basically driven by the fact that some tools do not require specific information from those files, but they need the document as a whole in its original format. Apart from that, there is a need to keep a track of the history of the information generated during the project. Some of the files that can be represented by the ontology are BIM files (IFC or OBJ files), obXML files, BPMN plans, PDF specifications, CAD files, images, etc.Figure 20. Information Objects Ontology Conceptualization
Model description
The main concept in this ontology is the io:InformationObject class, that represents all the files and documents that are stored inside the BIMERR Interoperability Framework.By using this entity to annotate our documents it is possible to add additional metadata to indicate attributes such as the location (io:location), the version of the document (io:version), the creator (io:creator) or the creation date (io:creationDate). The inclusion of these datatype properties allows the execution of more complex queries when searching for documents inside the BIMERR platform.Furthermore, the ontology includes relations such as io:relatedDocumentation that allows that classes from other domains could also be linked to documents.Data Example
Figure The BIM object in this example is called data:Building01_3DModel and is located within BIF in the internal path "/some/path/Building.ifc". The responsible for the creation of the file in the platform was the "Modeler01" and it was created on 2018-03-27. The file also include a description with additional comments indicating that the BIM file was obtained as a result of the surveying process of the building. Finally, additional metadata is instantiated in order to facilitate the discovery and retrieval of this file such the format (.ifc) and the current version (0.0.1).Figure 21. Data Example for the Information Objects Ontology
Model Evaluation
The model has been evaluated using OOPS!, the detailed results are available at the ontology repository. It is important to remark that this model has as main objective the identification of a file inside BIF, therefore it is not validated with the domain data input of any of the applications in the project. Links to other models
As it has been seen in the previous modules, the information objects ontology is the one that has more links with the rest of the models due to the universal requirement to attach documents to the different concepts that compose the BIMERR ontology network. In the case of the KPI ontology the connection is done between the kpi:Project and the io:InformationObject classes representing the need to keep track of all the information generated during the renovation project. Examples of documents attached at this level are renovation plans, contracts, etc. In the case of the annotations ontology, the need to store files is to support the description of issues and problem, detected during the renovation activities, with complementary information such as images, audios, or videos. Finally, the building module also allows the attachment of files to the topological elements of the building. For instance, the connection of OBJ or IFC files per storey.Model Particularities
This model does not present any particularity.MATERIAL PROPERTIES MODULE
The Material Properties Ontology aims to provide the vocabulary to describe the building elements, their construction, their materials, and their corresponding properties.Model description
The Figure The materials can be described by a set of properties. For this purpose, we reuse the artifacts provided by the SAREF ontology. As we can see on Figure Data Example
The Figure This layer was made using brick masonry (data:BrickMasonry_01) as the main material, which has a set of properties that are organized in property sets (data:PropertySet01). One of the properties considered in this set is the Density (mat:Density), which for this specific material has a value equal to 1922 Kg-per-m3. Model Evaluation
The model has been evaluated using two approached. The first one is related to the detection of pitfalls of the ontology using OOPS. The complete report can be seen in the ontology repository. The second method corresponds to the evaluation of the suitability of the ontology to represent the data it actually tries to model. This type of evaluation was performed during the development of the mappings between the data in the original format and the data in RDF format, which is finally stored in the Knowledge Graph Generator (KGG) component. For the case of the materials data model no problems arose during the transformation of the EnergyPlus materials database to RDF.OCCUPANCY PROFILE MODULE
The Occupancy Profile ontology has been developed to represent people's behavior inside buildings with a focus on the energy impact their actions produce. This information is critical to get more precise building energy profiles, and generate simulation scenarios that fit better with reality. In this sense, the shared conceptualization represented in this ontology focuses on the interaction of occupants with the different systems inside building spaces that could influence their thermal comfort requirements. This ontology has been developed using the Occupancy Behavior XML Schema The current conceptual model defined by the Occupancy Profile ontology is depicted inFigure • Physical Object: This concept refers to any object that has a proper space region such as the equipment or mechanisms within the building with which occupants may interact to restore or maintain environmental comfort.• Occupant: This concept represents people that reside within a building or make use of specific spaces within it.• Behavior: This concept is used to define the behaviors that people have inside a space. These behaviors could lead to interactions with systems.• Driver: This entity represents the stimulating factors that provoke energy-related occupant behavior. A driver prompts a building occupant to perform either an action or in-action with a building system, impacting the energy use of a building.• Action: This concept represents the interactions with systems or activities that occupants can perform to achieve environmental comfort.Model description
The main concepts defined in the ontology and shown in Figure building:Building, building:Apartment, building:Space, op:Occupant, op:Behavior, op:Driver, op:Action and s4bldg:PhysicalObject previously defined in Section 3.1. In the model conceptualization, we can observe that the class building:Building can have several spaces, which are concatenated in the concept building:Apartment, and is related to them through the property bot:Apartment.Those apartments have several spaces (building:Space). building:Space object can contain several systems that an occupant can interact with. From the obXML schema we have a list of systems that can be accommodated under the class s4bldg:PhysicalObject. Equipment such as HVAC's or shading devices can be represented by the classes saref:HVAC or s4bldg:ShadingDevice respectively. For systems not available in S4BLDG we created new terms, like the concept op:Window. Several persons can occupy a specific space, where each occupant can have more than one behavior. Attached to the occupant concept, information about its personal profile can be indicated by means of the attributes op:occupantAge, op:occupantGender, op:name, op:occupantJobtype, and op:occupantLifestyle.A behavior could refer to an action, where the concept op:Action involves the following subclasses: op:Report, op:Movement and op:Interaction. A person can also decide to not perform any action if its comfort levels are not satisfied; this scenario is modeled by means of the class op:Inaction. The interaction of an occupant with a system can be represented using mathematical models. This is addressed using the property op:describedByFormula where the destination is the concept op:InteractionFormula, which groups several off-the-shelve mathematical functions.One example of specialization is the concept op:LinearFormula which gathers all the linear models that have at least one parameter in its definition.For a mathematical formula to be properly defined we need a list of its coefficients and independent parameters. In order to model that, the relationships op:hasCoefficient and op:hasIndependentVariable were created. The first property (op:hasCoefficient) allows the connection from a given formula to an instance that will be linked to a certain numerical value and name by means of the data properties op:coefficientValue and op:name, respectively. The second property (op:hasIndependentVariable) links a given formula with a parameter that describes a certain environmental factor of the building space.Additionally, the model should allow to express if the occupant needs are influencing in a certain way its behavior. For that purpose, the property op:influencedByNeed was implemented. These needs can be further categorized into Physical Needs, and Non-Physical Needs. Non-physical needs gather together all the possible instances that could not be quantified such as privacy, status, etc. On the other hand, Physical Needs represent comfort requirements that could be defined by fixed limits. To handle this, the concept op:ParameterRange was created, which indicates the maximum and minimum value for a specific environmental parameter (op:EnvironmentalParameter).Apart from human-system interactions, there are other kind of occupant activities that are important from the energy consumption perspective. Occupant's movements to describe when other type of drivers typically occur.Data Example
Figure Additionally, it is possible to indicate the operational mode of the HVAC that is this case is zone on off (data:ZoneOnOff). Model Evaluation
The model has been evaluated using two approached. The first one is related to the detection of pitfalls of the ontology using OOPS!. The complete report can be seen in the ontology repository.The second method evaluates the suitability of the model to the BIMERR InteroperabilityFramework. After the evaluation, additional concepts and relations were included in order to support the all functionalities of BIF. For instance, in order to facilitate the mapping and the access of the data inside the model, it was necessary to create the op:OccupantBehavior concept that acts as a root node from which the rest of concepts can be accessed. Furthermore, additional inverse relationships were added such as the op:isInsideSpace object property between the op:Occupant and building:Space concepts.Links to other models
The occupancy profile ontology is highly linked to the building ontology by means of the building:Building, the building:Apartment, and the building:Space concepts which provide the context to being able to describe the behaviors of the residents.Model Particularities
In order to allow the appropriate communication between the PRUBS tool and the BIF, the ontology includes the concept op:OccupantBehavior as a root node. Semantically this node is not needed in the ontology, however, it allows a smooth mapping between the obXML format and the BIF data model.List of Resources
The following list of resources are provided for the occupancy profile ontology:• Ontology URI:https://bimerr.iot.linkeddata.es/def/occupancy-profile/• Ontology GitHub repository:• Ontology in Turtle format:https://bimerr.iot.linkeddata.es/def/occupancy-profile/ontology.ttl• Ontology enriched with metadata:https://bimerr.iot.linkeddata.es/ontologies/op_enriched.ttlSENSOR DATA MODULE
The Sensor Data ontology has been developed to represent measurements generated by sensors located inside building spaces. These devices will be used to estimate building resident energy profiles, by measuring indirectly the interaction between occupants and systems. For the construction of this ontology, the SenML standard The current conceptual model defined by the Sensor Data ontology is depicted in Figure Some of the most important concepts taken from SAREF are the following:• Property: An aspect of an entity that can be observable by a sensor.• Device: A tangible object designed to accomplish a particular task in households, common public buildings or offices. In order to accomplish this task, the device performs one or more functions.• Measurement: Represents the measured value made over a property. It is also linked to the unit of measure in which the value is expressed and the timestamp of the measurement.• Unit of Measure: The unit of measure is a standard for measurement of a quantity, such as a Property. Finally, a record is not only an estimation of a physical property of the world, it also describes a particular thing or context as for instance, the temperature or illuminance within an apartment's room. With this in mind, the property saref:isMeasurementOf is used to link a measurement to the concept saref:FeatureOfInterest, which represents all the entities that are being described or acted over by the devices.  Data Example
KEY PERFORMANCE INDICATOR MODULE
The Key Performance Indicator module aims to model the metrics defined at the beginning of building renovation activities to monitor the conformance with typical requirements related to energy efficient buildings. This type of measures serves not only to get a correct estimation of the advances in the renovation workflow, but also to adjust the planning of the construction activities and improve the communication with stakeholders. The conceptualization proposed also focuses on the relation between KPIs, projects and scenarios. The construction of this ontology has been done using the requirements and needs identified for the PWMA and RenoDSS BIMERR applications.The up-to-date conceptual model defined for the Key Performance Indicator ontology is illustrated in Figure • KPI: A type of performance measurement. KPIs evaluate the success of an organization or of a particular activity in which it engages.• KPI Value: A quantity assessment of the KPI being evaluated. It also takes into account the time at which the indicator was calculated.• Project: The building renovation project the KPI metric is related to.• Scenario: The particular conditions under which the KPI is being evaluated.Model Description
The main idea behind this module is to represent some concepts related to the Data Example
Figure Model Evaluation
The model has been evaluated using two approached. The first one is related to the detection of pitfalls of the ontology using OOPS. The complete report can be seen in the ontology repository.The second method evaluates the suitability of the model to the BIMERR Interoperability Framework. After the evaluation, additional concepts and relations were included or modified in order to support the full functionalities from BIF. For instance, kpi:name and kpi:description attributes were added to the kpi:Project concept. Furthermore, the change of the label of the kpi:ISO3166 attribute to kpi:countryCode. Finally, all the relationships between two concepts should include in their label the prefix related, e.g. the kpi:affectedELement relation was changed by kpi:relatedElement object property.Links to other models
The KPI model is linked to several other domains. First, the model is connected to the io:InformationObject concept in order to attach documents at the Project level.Another connection is with the building module, where the objective is to indicate to which latitude, longitude and other information about spatially-located things, using WGS84 as a reference datum.Some of the most important concepts taken from SAREF4CITY are the following:• Administrative Area: An administrative division, unit, entity, area or region, also referred to as a subnational entity, constituent unit, or country subdivision, is a portion of a country or other region delineated for the purpose of administration.• City: A city is a large human settlement. A city is distinguished from other human settlements by its relatively great size, but also by its functions and its special symbolic status, which may be conferred by a central authority.• Country: A country is a region that is identified as a distinct national entity in political geography.Also, some of the most important concepts taken from WGS84_POS are the following:• SpatialThing: Anything with spatial extent, i.e. size, shape, or position, e.g. people, places, bowling balls, as well as abstract areas like cubes.• Point: A point, typically described using a coordinate system relative to Earth, such as WGS84.Model Description
The main concept defined in the ontology, as shown in Figure As it can be seen, the observations or measurements (saref:Measurement) are related to the observed property (saref:Property), the related feature of interest (saref:FeatureOfInterest), and the unit of measurement (saref:UnitOfMeasure) in which the value is provided and the time stamp in which the measure was taken. The   Model Evaluation
The model has been evaluated using two approaches. The first one is related to the detection of pitfalls of the ontology using OOPS! . The complete report can be seen in the ontology repository. The second method corresponds to the evaluation of the suitability of the ontology to represent the data that it actually tries to model. This type of evaluation was performed during the development of the mappings between the data in the original format and the data in RDF format, which is finally stored in the Knowledge Graph Generator (KGG) component. For the case of the weather ontology no problems appeared during the transformation of the EnergyPlus Weather and Open Weather Map databases to RDF.Links to other models
The ontology is connected to the network by means of the saref:Device concept, which is a subclass of the s4bldg:PhysicalObject concept in the occupancy profile ontology.Model Particularities
This model does not have any particularity.List of Resources
The following list of resources are provided for the weather ontology:• Ontology URI:https://bimerr.iot.linkeddata.es/def/weather/BIMERR ONTOLOGIES TRANSFORMATION TO DATA MODELS
This section describes a summary of the transformation pipeline developed to convert the different ontologies discussed in the previous sections into the data model that is finally utilized by the BIMERR Interoperability Framework. For a more detailed explanation about the converter functionality, please refer to the deliverable D4.5.METADATA ONTOLOGY
The metadata ontology is a complementary model that provides the vocabulary needed to annotate with extra information ontology elements from any module of the BIMERR ontology network. The annotation of the ontologies with these terms is the first step in the transformation process needed to generate the JSON data model required by BIF.Table For the next steps, even though the T4.2 has concluded, the outputs and discussions from the BIF integration activities will be taken into account in case minor updates are needed on the ontology network. At this time, it is still needed to test the integration of data for the Annotation Objects, Information Objects, Renovation Processes, and Material Properties data models.Figure 1 .
Figure 2 .
Figure 20 .
Figure 22 .
Figure 30 .
Figure 31 .
Figure 32 .
Figure 33 .
Figure 34 .
Figure 35 .
Figure 1 .
Figure 3 .
Figure 4 .
Figure 6 .
Figure 7 .
Figure 8 .
Figure 9 .
Figure 10 .
Figure 13 .
Figure 14 .
Figure 15 .
Figure 16 .
Figure 17 .
Figure 19
Figure 22 .
Figure 23 .
Furthermore, the model
(
Figure 25 .
Figure 26 .
Figure 27
Figure 27 .
Figure 28 .
Figure 31 .
Figure 32 .
Figure 33 .
Figure 6. GitHub Repository of the Annotation Objects Ontology .......................................Figure 26. Sensor Data Ontology Conceptualization ..............................................................Table 1 .
Relations to other deliverables ................................................................................... Table 2. Summary of ontology status. ......................................................................................Table 3 .
Table 4 .
Table 5 .
Table 1 . Relations to other deliverables Deliverable Deliverable Title Relations and Contributions
Table 2 . Summary of ontology status. Domain First iteration Second Iteration Comments
Table 3 . List of published BIMERR ontologies and their corresponding namespaces Prefix Ontology namespace
building https://bimerr.iot.linkeddata.es/def/building# kpi https://bimerr.iot.linkeddata.es/def/key-performance-indicator# io https://bimerr.iot.linkeddata.es/def/information-objects# mat https://bimerr.iot.linkeddata.es/def/material-properties# ao https://bimerr.iot.linkeddata.es/def/annotation-objects# renp https://bimerr.iot.linkeddata.es/def/renovation-processes# op https://bimerr.iot.linkeddata.es/def/occupancy-profile# sd https://bimerr.iot.linkeddata.es/def/sensor-data# weat https://bimerr.iot.linkeddata.es/def/weather#https://bimerr.iot.linkeddata.es/https://www.w3.org/TR/owl-ref/https://lot.linkeddata.es/https://saref.etsi.org/core/v3.1.1/https://www.w3.org/2005/Incubator/geo/XGR-geo-ont-20071023/https://chowlk.linkeddata.es/chowlkhttps://chowlk.linkeddata.es/chowlk_spechttps://www.w3.org/TR/owl-ref/#DatatypeProperty-def