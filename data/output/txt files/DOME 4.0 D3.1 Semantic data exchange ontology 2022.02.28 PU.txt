List of Figures
List of Tables
Table Introduction
Objectives
The objectives of Task 3.1 of the DOME4.0 project are: 1. To develop an ontology for semantic FAIR exchange of data between data providers and consumers.The semantic data exchange ontology will be lightweight in terms of logical complexity and number of entities and should be based on existing established standards (e.g. IDS) and ontologies (e.g. EMMO) 2. To cater for FAIR-ness elements which are manifested by an exchange of the needed information to identify the source of data (findability), its type, application context, and access rights (accessibility), means to exchange and decipher the data (interoperability), and means to reuse it (reusability). 3. To Interact with the project funded from the NMBP-39-2020-CSA (OntoCommons) call will provide guidelines for such development to provide a high level of generality and applicability, shared by a larger community 4. To develop an ontological syntactic representation of data with an extensible, light-weight data structure ontology capable of mapping between syntactic representations and thereby supporting the exchange of data.Terminology
We will use the word concept to refer to the abstract notion that we define and represent using RDFS/OWL entities. A concept is usually elucidated through definitions, i.e., articulated text aimed to explain in natural language the real-world entities that the concept addresses. The word label will indicate the short text used to tag a specific concept (e.g. through rdfs:label, skos:prefLabel, or directly in the IRI). The word term is usually used as a synonym for concept using the label as reference. For example, with the sentence "the term Agent in DCAT", we will refer to the concept in DCAT that has the word Agent in the IRI.In principle, a concept is not necessarily related to a label, and a label can be used to address more than one concept. A term specifies a concept and its referred (preferred) label according to a specific namespace designation, for this reason the use of the word term must always refers to a specific vocabulary providing its definition.Methodology
There exist several RDF vocabularies and schemas aimed to document data and their use in different scenarios, that are already widely used and understood by several communities. These RDF schemas includes the Dublin Core Metadata Initiative collection of terms (DCMI Metadata Terms), the Data Catalog Vocabulary (DCAT), the Friend of a Friend Vocabulary Specification (FOAF) and the PROV Data Model ontology (PROV-O). We will refer generically to such schemas using the abbreviation RDF-DEV (RDF-based Data Exchange Vocabulary).These schemas rely on RDF concepts, and in some cases on OWL 2 concepts and provide a very flexible way to document data and their usage. However, the permissivity of the RDF language prevents the introduction of more sophisticated axiomatisations to impose constraints that are commonly used in the Public -Page 7 of 39 -definition of a highly expressive ontology. While such permissivity facilitates a fast deployment of metadata schemas developed ad hoc for the documentation of specific domain cases, it prevents the building a more semantically rich environment, that requires a language (e.g., OWL 2 DL) and some syntactic constraints to grant computability. Moreover, it would be beneficial to embed such RDF-DEV into a larger ontological environment, to use the information conveyed by such terms in an environment that connects the existing terms towards other knowledge domains.The methodology adopted here is to rely on the existing RDF-DEV, but at the same time enrich them semantically by providing a mapping with a Top-Level Ontology that is part of the OntoCommons Top Reference Ontology level. This approach aims to facilitate the injection of data documentation that is compliant with the RDF-DEV, to facilitate the migration of already existing data documentations into a larger ontological framework (the EMMO), and at the same time to facilitate the usage and understanding by developers already trained and skilled on such material.To achieve that, a one-way mapping based mainly on rdfs:subClassOf relations has been provided from EMMO to RDF-DEV concepts, meaning that the EMMO concepts are OWL 2 DL compliant restrictions of the wider RDF schemas ones. In this way every EMMO type will both refer to an existing RDF-DEV and will provide a semantical enhancement within the EMMO ontology.Users that are not interested in a semantically enriched data documentation approach can use the EMMO concepts directly linked with the RDF-DEV without dealing with any higher-level mappings of these concepts into the EMMO, while users that want to exploit a semantically rich framework may use the EMMO concepts as part of a larger knowledge framework that will provide an RDF-DEV counterpart through mapping for the usage in less semantically demanding scenarios.The RDF version of the mapping will be made available publicly under the DOME4.0 repository at https://github.com/DOME-4-0/data-set-ontology. It will be maintained and expanded according to the needs of the project and the evolution of the EMMO during the overall duration of DOME4.0 RDFS Data Exchange Vocabularies
Here we briefly list the RDFS-DEV from which we will select the terms relevant for the DOME4.0 scope.DCTERMS
Dublin CoreThe Dublin Core metadata initiative includes the fifteen terms in the Dublin Core Metadata Element Set in addition to a larger set of properties, classes, datatypes, and schemes. Together, they are collectively referred to as "DCMI metadata terms" or "Dublin Core terms" (DCTERMS) for short. DCTERMS are expressed in RDF vocabularies. Each term is identified with a Uniform Resource Identifier (URI), which is a global identifier usable in Linked Data. Built into the Dublin Core standard are definitions of each metadata element -like native content standard -that state what kinds of information should be recorded where and how. Associated with many of the data elements are data value standards such as the DCMI Type Vocabulary and ISO 639 language codes. We will hereafter refer to the RDF representation of the http://purl.org/dc/terms/ namespace published on 2020-01-20, and available at https://www.dublincore.org/schemas/rdfs/.DCAT
DCAT is an RDF vocabulary designed to facilitate interoperability between data catalogues published on the Web. It enables a publisher to describe datasets and data services in a catalogue using a standard model and vocabulary that facilitates the consumption and aggregation of metadata from multiple catalogues. This can increase the discoverability of datasets and data services. It also makes it possible to have a decentralised approach to publishing data catalogues and makes federated search for datasets across catalogues in multiple sites possible using the same query mechanism and structure. Aggregated DCAT metadata can serve as a manifest file as part of the digital preservation process.As illustrated in Figure We will refer to the official RDF representation of DCAT version 2 available at https://github.com/w3c/dxwg/blob/gh-pages/dcat/rdf/dcat2.ttl.D3.1 -Semantic data exchange ontology
Public
-Page 10 of 39 -PROV-O
The provenance ontology, PROV (PROV-O) expresses the so called PROV Data Model 2 using the OWL2 Web Ontology Language (OWL2). PROV-O aims to provide a set of classes, properties, and restrictions that can be used to represent and interchange provenance information generated in different systems and under different contexts. PROV-O has three different main parts, arranged from the most simple and fundamental terms (and concepts) needed for simple applications of provenance to more complex ones. These are the 1) Starting Point terms, 2) Expanded terms, and 3) terms for Qualifying relationships.The Starting Point classes and properties provide the basis for the rest of the PROV Ontology and are used to create simple provenance descriptions. These include as shown in Figure The Expanded classes and properties provide additional terms such as the special concepts that generate a dataset e.g., Person, or Organisation while the Qualified classes and properties provide elaborated information about binary relations asserted using Starting Point and Expanded properties. These include e.g., Start, End, Usage, of a data set and similar concepts. The entire PROV-O can be consumed by EMMO directly with the elementary mappings proposed here.2 http://www.w3.org/TR/2013/REC-prov-dm-20130430/ Data Set Basic Concepts
Concept List
Since DOME 4.0 aims at connecting various data providers with consumers without necessarily providing full access to the actual data, DOME4.0 needs sufficient information about data (i.e., the metadata) to the extent it allows the discovery (or findability) of the data sets based on: i) general asserted criteria (i.e. most widely used concepts for data set documentation), ii) the catering for options for accessing the data which are delegated to either external platforms or internal additional specialised apps (i.e. the accessibility), iii) the ability to interpret the data in these data sets by bespoke tools (i.e., interoperability), and consequently, the ability to reuse the data in various applications which is delegated to other platforms (e.g. Marketplaces, OIP, OTEs, etc) DOME4.0 facilitates FAIR-ness by providing the minimal essential criteria and components without necessarily a direct access to the entire datasets and without necessarily hosting the data itself. The novelty, or special position/stance of DOME 4.0 is the ability to connect data sets rapidly and semantically in various platforms, including those hosted by individual end users. Hence, DOME 4.0 requires a highlevel dataset exchange ontology that covers primarily the top-level information criteria or metadata, creating a specific DOME 4.0 data model.However, instead of just creating such a high-level data model, such as available already in DCAT or other similar initiatives, the need for deep semantic brokering and exchange in DOME 4.0 necessitates a true, logical, data set ontology rather than a metadata schema (like RDFs), or a set of keywords (like Dublin core). However, to remain compatible with the existing widespread practice that relies on such ad hoc information models, DOME 4.0 starts on the one hand by identifying and selecting its own basic vocabularies and concepts to be as close as possible to such models and extends these with a full ontology model on the other hand. The following criteria are used in the selection of the elementary keywords or vocabularies:1) Support basic metadata that allow brokering activities mediating and connecting various providers and consumers 2) Stay minimal, only the most needed terms are considered (as more specialised tools will be ableto "dig into the data" semantically or otherwise later, i.e., once the datasets have been identified 3) Support elementary keywords that hint and give information as much as possible on the content and nature of the data sets and enable choice of ontology-based keywords (e.g., based on existing terms and labels) that are semantically connected with a meaning. 4) Use or more accurately, reuse the same vocabularies when possible as DCAT (relying on version 2 and when needed on version 3) 5) Be as close to the potential RDFS schema vocabularies incarnations to make explicit reference to what we refer with the concept.The table below shows the current selection of main terms from DCAT that DOME 4.0 adapts and integrates into a logically fully-fledged ONTOCOMMONS ontology, namely EMMO. Note that this initial data set may be updated later with additional terms as needed.Public
-Page 12 of 39 -One of the main advances of such an approach is that a very broad, and loosely defined concept such as a dcat:keyword which can in principle have any arbitrary value (a string in DCAT) may, by means of integrating into a logically strong ontology, be extended into "semantic keywords", namely it takes only values that themselves are ontological, in other words, a simple DCAT terms can then be enriched semantically to a much deeper expressiveness power enabling reasoning on the actual properties of the dataset itself beyond simply executing specific regex (regular expression) matching on random keywords.Note however, that while this approach enables higher semantic reasoning, at the same time, there is no direct connection between the values of the keywords and the actual content of the dataset, in other words, a dataset can have a keyword referring for instance to say, mechanical properties of a metal, there is no guarantee that such information or data is indeed found or covered by the dataset. DOME 4.0, and in fact the entire community must rely on basic assumptions that such keywords deliver a trusted set of information about the content of the dataset. In DOME, specific tools for the provenance and reliability of the datasets are envisioned that will address such issues later. The main purpose of the dataset ontology is to allow the brokering on the one hand, and on the other, enable the development of such additional tools to handle and manipulate data sets.The list of elementary metadata (terms) adopted for the dataset ontology is shown in Table • dcterms: http://purl.org/dc/terms • dcat: http://w3.org/ns/dcat# • foaf: http://cmlns/foaf/0.  RDF/RDFS schemas implement basic types and relations between entities 3 , such as: rdf:type, rdf:Property, rdfs:Class, rdfs:range, rdfs:domain, rdfs:subClassOf, rdfs:subPropertyOf. While these types are useful to build taxonomies, they lack the expressivity to impose constraints that enable the representation of knowledge at a higher detail level.Several terms in the DCAT/DCTERMS/FOAF schemas are associated with the rdf:Property type, giving the user the freedom to choose the OWL 2 resource type (data, object or annotation) to which the property points. For example, a dcterms:creator can refer to a textual annotation (e.g. "John Smith") or to an individual of type dcterms:Agent. However, to build an OWL 2 DL compliant mapping, there is the need to specify one specific type of property between datatype, object, or annotation property Reasoning in OWL 2 DL is based primarily on the object properties used by axioms to express semantic constraints between ontology entities. Data properties can also be used by axioms to express other datarelated constraints. Data-based inferences are supported by most of the existing reasoners. On the contrary, annotations are not used by reasoners, and require ad hoc actions to be used semantically (e.g. through SPARQL construct queries digging through annotations and generating triplets according to some user-defined inferencing rules). For this reason, the EMMO concepts mapping the RDF-DEV will focus mostly on OWL 2 DL object and data properties.3 See: https://www.w3.org/TR/rdf-schema/ EMMO Perspectives
Starting with the original RDF-DEV terms, the EMMO provides several directions for semantic enhancements (enrichments). The most fundamental enhancement is the embedding of the terms within a mereocausality framework, that enables the representation of parthood and causality relations, together with a causal-graph topology that constitute the foundation of space and time relations between objects.Further semantic enhancements are based on the perspectives that constitute the EMMO Middle Level:-Data: the data perspective of the EMMO defines entities according to the nature of the entity and the decoding criteria to be applied to the variation of the entity physical substrate. It provides means to distinguish between e.g. analog vs discrete data, classical vs quantum data, or formal languages, software code vs applications. -Semiotics: the semiotic perspective enables the representation of the process of defining a meaning for the data, documenting the methodology for data generation, the subjectivity or objectivity of the process, the measurement-or modelling-based generation process. -Holistic: the holistic perspective represents the relations between the whole together with the parts (roles) that makes it something more than a simple mereological sum. -Persistence: the persistence perspective classifies things following the classical object/process dichotomy, and combined with the holistic perspective, provides concepts like participant, component, stage, constitutive process. -Physicalistic: the physicalistic perspective represents things according to their physical form (e.g. matter, field, solid, liquid, crystal). -Reductionistic: the reductionistic perspective provides means to describe composition through granularity levels, that can be used to syntactically describe the data. If combined with the semiotic perspective, it can provide a way to semantically map the data included in a dataset according to a syntactical structure. -Perceptional: the perceptional perspective enables the representation of the data as they appear to the human end user perception (e.g. characters, pictures).The hierarchy of the EMMO perspective level is shown in Figure Reference Schemas
The dcat:Dataset is an rdfs:Class defined as: "A collection of data, published or curated by a single agent, and available for access or download in one or more representations" Usage notes specify that "This class describes the conceptual dataset. One or more representations might be available, with differing schematic layouts and formats or serializations" and that "This class describes the actual dataset as published by the dataset provider". While the first sentence seems to refer to an abstract entity, the second one is referring to actual published data, placing the entity not only in time and space, but also including the publishing process that requires manipulation of the data material basis. These notes makes the ontological status of a dataset not clear, especially when is interpreted according to a rigorous Top Level Ontology framework.A related term is provided by the dcat:Distribution class, defined as "A specific representation of a dataset. A dataset might be available in multiple serializations that may differ in various ways…", that seems to define instances of datasets, discriminating them by e.g. natural languages, media type or format The relation dcat:distribution, connecting a dcat:Dataset with a dcat:Distribution, is then so ontologically wide that encompasses at least type (e.g. is a distribution an instance of a dataset?) and semiotic (e.g. is the distribution another sign for the same object?) relations. This implies that the semantic extension of such fuzzy concepts within a more rigorous ontological framework would necessarily require a strong restriction of the original concepts.EMMO Mapping
The mapping of dcat:Dataset is shown graphically in Figure This mapping enables a direct relationship between an EMMO and DCAT data concepts, whereby the emmo:DataSet is a restriction of the dcat:Dataset since it requires that at least two emmo:Datum are present in the dataset, while the dcat:Dataset is not clear about the definition of the term "collection". Within the EMMO, the distinction between data and datum terms, enables the use of the expressivity power of mereotopology for the representation of the content of a dataset.The EMMO nominalistic approach requires that individuals of the emmo:EncodedData are actual material expressions of data, thus restricting the mapping to dcat:Dataset entities that refers to actual data material basis. The conceptual level to which the DCAT definition of a dataset refers to is provided in the EMMO by semiotic relations pointing to the object described by the informational content of the dataset. The EMMO semiotic relations include also to the methodology and the authorities for which such relations hold (see the emmo:hasIsAboutKeyword terms defined in the following sections) significantly improving the semantic description of the dataset scope.The fact that a dataset individual is expressed following a particular syntactic format (e.g. XML, JSON) or within a material substrate (e.g. paper, CDROM, SSD), has introduced in the definition of the dcat:Distribution concept, can be expressed in the EMMO using classes defined under the data perspective that focus on the syntactic data structure or on the physical nature of the substrate. In this sense, emmo:EncodedData encompasses also dcat:Distribution concept and enables to distinguish The dcat:distribution relation can be mapped within the EMMO in both type and semiotic relations to better specify the connection between a dataset and its possible expressions Title
Reference Schemas
The dcterms:title is a rdf:Property that is defined as: "A name given to the resource" EMMO Mapping
The EMMO mapping towards dcterms:title is shown in Figure Keyword
Reference Schemas
The dcat:keyword is defined as rdf:Property with range rdfs:Literal, and in the Turtle serialization 9 is specified as an owl:DatatypeProperty. The DCAT definition of this term is: "A keyword or tag describing a resource" 10 .This term allows to store as literal types a set of free-for-all textual data to enhance the semantic description of the dataset and is the only available DCAT approach to semantic enhancement of dataset.EMMO Mapping
Figure In this case of course, additional tools need to be developed to assert such a relation as described above within an RDFS framework. With the lack of deep semantic expressiveness (i.e. without forcing each and every dataset in the entire domain of discourse to be described by an ontology down to the individual bits) such tools are inevitable. The semantic enrichment of the keywords enables automated assertion tools, which is an advancement to the state of the art where no such assertion can be usually made via a machine. Thus, this approach taken here opens the route for applications of AI tools which DOME is planning in the near future.For example, the SPARQL query:SELECT ?x ?y WHERE {?x emmo:hasTypeKeyword ?y} can be used to resolve the user defined type data properties into strong axioms that will place the data within a specific semantic position within the ontology, by creating rdfs:subClassOf triplets from the query results. Similarly, the query:SELECT ?x ?y WHERE {?x emmo:hasIsAboutKeyword ?y} may be used to express that a data is about another ontologically represented object, by creating rdfs:hasProperty triplets from the query results.The last bit of semantic enrichment is the eminent emmo:hasToolKeyword which is the missing link between the seemingly thin metadata layer imposed both by DCAT dataset and the deep content of a dataset (i.e. the actual raw data stored in the dataset). This term provides a list of keywords referring to specific computational tools (e.g. a spreadsheet, or a simulation package, or a user provided script) that are able to decipher the syntactic information (or in fact, also any semantic formats defined according to any other standard). Future work will add keywords that directly link such tools to the dataset (which will be part of the provenance ontology being developed currently in DOME 4.0).Creator
Reference Schemas
The term dcterms:creator is an rdf:Property whose range includes the class dcterms:Agent. The definition is: "An entity responsible for making the resource"EMMO Mapping
The EMMO mapping of dcterms:creator restricts the scope of the relation within the data field, restricting the domain to emmo:Data, and defining emmo:Agent as sub class of dcterms:Agent. We also introduce the emmo:DataCreator class to specify the type of agent involved in the data creation process, and the data creation process itself by the emmo:Creation class.The semantic enhancement provided by the EMMO is related to the use of the Holistic and Persistence perspectives, that provide mereotopological relations to deal with the concepts of e.g. process, role, and participant. These concepts are peculiar to most of the Top Level Ontologies that are not expressed in the existent RDF schemas for data documentation. Reference Schemas
The term dcterms:publisher is an rdf:Property whose range is the class dcterms:Agent. The definition is: "An entity responsible for making the resource available" 14 .EMMO Mapping
The EMMO mapping provides a structure like the DCTERMS creator term mapping.4.3.6
14 https://www.dublincore.org/specifications/dublin-core/dcmi-terms/#http://purl.org/dc/terms/source Reference Schemas
The dcterms:issued is a rdf:Property that is defined as: "Date of formal issuance of the resource" 15 . The term is defined in DCTERMS as a generic property ranging to rdfs:Literal, where the actual metadata about the issue date of the resources is provided. The specification on the range makes it potentially either an OWL 2 DL data or annotation property.EMMO Mapping
The EMMO mapping towards dcterms:issued is shown in Figure License
Reference Schemas
The dcterms:license is a rdf:Property that is defined as: "A legal document giving official permission to do something with the resource" The comment on the DCTERMS license term recommends identifying the license document with a URI, or with a literal value that identifies the license. In the first case the term can be an OWL 2 object property (if referred to an entity IRI), while in the second case can be an OWL 2 data or annotation property.EMMO Mapping
The EMMO mapping enrich the dcterms:license providing the object sub property emmo:hasLicense referring to the a license document (e.g. the full specification of the GPL3) and the emmo:hasRights that refers to any statement claiming rights about a resource (e.g. a license document but also a generic sentence such as "This document is released under GPL3"). Using this approach, it is possible to reproduce   The dcterms:source is a rdf:Property that is defined as: "A related resource from which the described resource is derived." EMMO Mapping
The EMMO mapping enhances the expressivity by explicitly considering the two cases of use mentioned in the DCTERMS (but not implemented), when the documented data i) is part of the source, or when ii) is an elaboration of the information given by source. In the first case the emmo:isDataSubSetOf relates mereologically the data to the whole dataset to which it belongs. In the second case, the emmo:isDerivedDataOf relates the data to the whole dataset to which is derived, following a semiotic process that documents also the agent and the methodology used for the derivation.19 http://purl.org/dc/terms/source  The dcterms:identifier can be used as superclass for the emmo:hasURI datatype property that has range xsd:anyURI and provides a unique identifier for ant resources. The sub properties emmo:hasURN can be used to refer to a specific name according to a particular namespace starting with urn: (e.g. urn:uuid:00d47850-ded2-44d8-9b3d-5719d46aeb02). The sub property emmo:hasURL can be used to specify a location on a network. The foaf:homepage is an owl:ObjectProperty defined as: "The homepage property relates something to a homepage about it" 22 . The domain is owl:Thing and range foaf:Document, both rdfs:Class. The foaf:Document concept is defined as: "The Document class represents those things which are, broadly conceived, 'documents'", without distinguishing between electronic, physical, copies or abstraction 23 .EMMO Mapping
The foaf:homepage is mapped to the EMMO through the emmo:hasHomepage object property that semantically enhance the concept through the semiotic perspective. This enables to document the process of assign structured data (i.e. the foaf:Document) to physical entities. The definition of the document term provided by FOAF is tautological (i.e. a document is a "document") but seems to encompass the overall range of agent-generated data, so that we decided to restrict it with the emmo:EncodedData class, as range of emmo:hasHomepage to provide a better defined concept. The dcterms:description is a rdf:Property with range rdfs:Literal, defined as "An account of the resource"EMMO Mapping
Since the terms refers to free text, it is reasonable to assign the status of annotation property when such term is brought into an OWL 2 DL environment. The EMMO possesses several annotations that deals with human-oriented descriptions such as:-emmo:definition, for statements expressed formally within a logical system -emmo:elucidation, for explanations to connect the terms to their real-world counterpart -emmo:comment, for generic considerations about the concept -emmo:example, to show example of usage of the term -emmo:etymology, to provide an etymological analysis of a label aimed to better identify the concept behind a word and its historical evolution.All these EMMO annotations (that are also rdfs:comment sub properties) can be considered legitimate sub properties of dcterms:description.Public
-Page 33 of 39 - Future Developments
The work presented here enables the consumption, or conversion of a general dataset catalogue in DCAT into EMMO. Other standards exist, notably the International Data Space Information Model (IDS-IM)Syntactic Description
The EMMO combined use of perspectives can provide a full syntactic description of data sets that can be used to build a semantic mapping of data sets entries following standard (e.g. XML, JSON) or custom data formats. This approach is based on meretopology and has been already tested in CIF crystallography EMMO moduleAn example of such syntactic/semantic mapping is shown in Figure Figure 1
Figure 3
Figure 4
Figure 5 D3. 1 -
Figure 6
Figure 7 1 -
Figure 8 EMMO
Figure 9
Figure 10 1 -
Figure 11 1 -
Figure 13 1 -
Figure 14 1 -
Figure 15
Figure 16 1 -
Figure 17 1 -
Figure 18
Figure 20
https://www.dublincore.org/https://www.w3.org/TR/vocab-dcat-3/#Class:Datasethttps://www.w3.org/TR/vocab-dcat-2/#Class:DistributionThe DCAT 1 domain of dcat:keyword was dcat:Dataset. But this has been relaxed in DCAT 2 by removing it. In this mapping we consider more in line with the EMMO interpretation to reintroduce the emmo:Data domain.https://www.dublincore.org/specifications/dublin-core/dcmi-terms/#http://purl.org/dc/terms/creatorhttp://xmlns.com/foaf/spec/#term_makerhttp://purl.org/dc/terms/descriptionhttps://www.w3.org/TR/vocab-dcat-3/#Property:resource_descriptionhttps://github.com/International-Data-Spaces-Association/InformationModelhttps://www.fraunhofer.de/content/dam/zv/en/fields-of-research/industrial-data-space/IDS-Reference-Architecture-Model.pdf28 https://international-data-spaces-association.github.io/InformationModel/docs/index.html#https://github.com/emmo-repo/CIF-ontologyThe syntactic representation of formats can be done referring to standards, such as CSVW https://www.w3.org/ns/csvw for CSV.