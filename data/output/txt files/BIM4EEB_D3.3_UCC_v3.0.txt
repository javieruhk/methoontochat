The concept of Levels of Detail (LOD) represents the scope and completeness of the information that is required for a building's documentation (be it digitally or not). In some cases, this classification is broken down in the level of geometrical objects (or the level of model detail) and the level of Information Objects (or the Level of Information Detail). The concept of Building Lifecycle Stages (BLS) has existed for numerous decades and is used in standards and regulations, such as RIBA, HOAI, etc. This concept aims to break down the activities required to design, construct, commission, and operate a building and to allocate sets of activities to well-defined roles or stakeholders involved in the BLS. Deliverable D3.3 of the BIM4EEB project aims to extend the above mentioned open meta-data building model of the AECO-domain with features aiming to support the management of LOD over the various stages of the BLS corresponding to renovation process modelling. This shall be achieved through the development of an ontology framework that is part of a larger modular ontology platform developed in the BIM4EEB project.The discussion starts with a specification of this deliverable in the context of the BIM4EEB project, i.e. oblective, what are the relations to other tasks and deliverables in the BIM4EEB project. This is followed by a state-of-the-art analysis (SOTA) in the area of LOD. Based on this SOTA the authors present an ontological approach for the representation of different LOD systems. In a subsequent chapter, the authors will then discuss requirements for LOD-based BIM-data representation, i.e. we clearly distinguish between the "building objects" which usually exist over multiple BLS and data specifying the "building objects" which might be distinct over the different BLS and thus evolve over those LODs. Based on the analysis, the ontology approach is further extended to address these requirements and enable to represent information in multiple levels of detail.Furthermore, a representational schema comprised of various components in renovation workflow is developed. These components are LOD, BLS, BIM data, renovation activities, stakeholders and use cases. Along with the renovation component description, the representational schema also defines the relationship between these components corresponding to the renovation workflow. The ontology approach is further extended to represent these components and their interrelations. The final output of this deliverable is a Digital Construction Lifecycle (DICL) ontology to represent BIM data in different levels of detail corresponding to renovation workflow. Finally, D3.3 briefly discusses aspects of developed ontology management and also presents a simple demonstration example. PUBLISHING SUMMARY
Deliverable D3.3 focuses on BIM data representation in different Levels of Detail (LOD) corresponding to the renovation process modelling. The modelling approach in this deliverable corresponds to the renovation workflow processes specified in Task T 2.1 of BIM4EEB. It aims to address the current deficit in specifying the varying scope and detail of product models over the different lifecycle stages. This difference of scope and detail results from the various information requirements of the distinct stakeholders being actively involved in the several building lifecycle phases.The development goal is a Digital Construction Lifecycle (DICL) ontology which describes the different activities, tasks, and sequences and their interrelations to stakeholders involved and the information required. The DICL ontology is linked to other BIM4EEB ontologies (D3. The DICL ontology proposed will become a part of the BIM4EEB modular ontology framework (D3.6). It establishes an effective and transparent instrument for the classification and analysis of product and process data related to LOD and BLS corresponding to roles and stakeholders The proposed approach will allow for modular, incrementally adaptable, efficient, customised data-sharing features and thus the provision of high-value applications and tools, not only towards optimising design and decision-making but also for increasing the effectiveness of on-site works. This task will deliver an ontology for BIM data representation on different levels of development corresponding to renovation process modelling (D3.3). Public  List of Figures
List of Tables
Introduction and Background
Architecture, Engineering, Construction and Operation (AECO) industry is a collaborative environment with the involvement of multiple disciplines and activities throughout the building lifecycle process The collaboration and sharing of product information throughout the project lifecycle stages and among the project partners are fundamental to ensure the successful implementation of a project Since the last decade, Building Information Modelling (BIM) is an emerging approach and an enhanced business process in the AECO Industry Despite the improvement, there is a lack of successful implementation and management of LOD functionalities within existing BIM solutions Furthermore, the structured representation of building data in ontologies (triples or graphs) enables stakeholders to semantically interpret data for various domain-specific operations with minimal human interventions. This framework is also easily adaptable and applicable to the present BIM process D3. BIM4EEB Context
Building Information Modelling (BIM) is an advanced information technology that should be adopted in the AEC industry by relevant stakeholders. These stakeholders are performing their activities with the use of BIM models In the context of the BIM4EEB project, this deliverable is dedicated to developing an ontology to represent these data refinements in different LOD corresponding to the renovation process modelling. This ontology also represents the renovation process by describing the involved activities, activity sequences, their interrelations to stakeholders and the required information. For the purpose of ontology definition, some of the defined concepts from the other BIM4EEB ontologies (i.e. from D3.2, D3.4) are used.References to previous deliverables
Building Lifecycle stages: the initial analysis was completed within the previous deliverables of work packages 2, but Section 5.4 of this report further progressed with the analysis of more standards and summarises the findings. The table below indicates the identified stages within the Deliverable D2.1.  Related publications
A set of scientific papers were published in the peer-reviewed conferences based on the achieved results from this deliverable. These scientific publications are listed below.1. KARLAPUDI J., Menzel K., Törmä S., Hryshchenko A. Structure of the Document
The deliverable starts with an introduction that describes the scope and context of the deliverable along with the relation to other deliverables or concepts of the BIM4EEB project. From the task description, this deliverable aimed to develop an ontology to represent the BIM data in different LODs corresponding to renovation process modelling.To achieve this deliverable object, it is important to understand the structure and framework of LOD systems. So the chapter 2 of this deliverable focused on the state-of-the-art analysis of LOD systems or standards. This comprehensive understanding further helps to develop the ontology representation of LOD systems which is the clear focus of chapter 3. Along with the ontology-based representation of LOD systems, chapter 3 also provides a clear explanation of the developed ontology representation through the example demonstration and verification.Another important task in the deliverable is to link this LOD system to the BIM data represented through ontologies. For this purpose, an investigation on different possibilities and requirements for LOD-based BIM data representation is carried. Based on the analysis and project requirements a flexible methodology called "objectification of properties" is considered to represent the BIM data in different levels of detail. Chapter 4 illustrates this development along with clear explanations.The further development of this deliverable is the renovation process ontology which aimed to represent the renovation activities, their sequences and the involved stakeholders. This renovation process ontology also should be linked to the ontologies representing the information requirements in different LODs. To achieve this goal, in Chapter 5, an analysis is conducted on the defined renovation workflow in Deliverable D2.1. Based on this analysis results, an ontology representation is developed to indicate the renovation processes and link them to the BIM data represented in different levels of detail. The emphasis on renovation process modelling provides a potential link to subsequent work in Task 3.4 of WP3, BIM4EEB.With these developments, the major tasks are achieved and successfully document in this deliverable. In addition to the developments, chapter 6 provides information on the management of the developed ontologies. Finally, chapter 7 draws conclusions on the developed and demonstrated work.Components for analysis
The components listed below specify the scope of our work and introduce major concepts for the modelling activities in Task 3.3. These components further guides the work in T3.3 and supports the development of the Digital Construction Lifecycle Ontology (see also Figure • LOD for required BIM data. This is a modelling approach representing the evolution of data in BIM.• Stakeholders acting in renovation processes -∑38 were selected and explained in D2.1 (see also Table • BIM-objects. These are modelled in IFC as classes with corresponding properties or sets of properties. BIM-objects are used to model building products and processes. • Building Lifecycle Stages (BLS): This is a modelling approach to break down the processes to design, construct, operate, or demolish a building. BLS are closely related to rules and regulations.• Activities: This is a modelling approach to represent dedicated actions and groups of them (processes) which are executed by distinct stakeholders to design, construct, operate, or demolish a building. 196 activities related to building renovation are outlined by D2.1. • Use Cases: This is an approach supporting the dynamic combination of Activities. Three Use Cases are proposed in this deliverable. The above Figure Along with the above components, the following standards and regulations are referred to in this report because some or all of their content complies with the requirements of this deliverable. For dated references the latest edition of the referenced document (including any amendments) applies:• EN ISO 29481-1: Building information models -Information delivery manual -Part 1: Methodology and format, (ISO 29481-1:2016);• ISO 23386:2019: Building information modelling and other digital processes used in construction -Methodology to describe, author and maintain properties in interconnected dictionaries (ISO 23386:2020);• ISO 23387: Building Information Modelling (BIM) -Data templates for construction objects used in the lifecycle of any built asset -Concepts and principles (ISO 23387:2020);• ISO 6707-1: Buildings and civil engineering works -Vocabulary -Part 1: General terms (ISO 6707-1:2017); DICL ontology introduction
This section provides an initial introduction to the ontology developed as a part of task 3.3. The table below describes details on developed DICL ontology regarding the repository, namespace convention, etc.  Within this deliverable, the Ontology Visual Notations from (Garijo and Poveda-Villalón 2020) are adopted to represent the DICL ontology. This representation is performed in two different phases. In the introduction phase, only the taxonomy of ontology structure corresponding to Classes and Data properties is represented (see Figure Later in the development phase, the representation is elaborated regarding the relations between the classes using object properties based on the investigated requirements. In the development process of DICL ontology, the classes from the other BIM4EEB workflow ontologies are also used. The major motivation is to reduce the redundancy and repetition of ontology concepts within the BIM4EEB onology suite.  Major updates compared to previous version
A list of major updates addressed in this deliverable when compared to the previous version (version 2.2) is presented below.• Extended the discussion related to competency questions • Readjusting the subheadings for chapters 3, 4 and 5 State-of-art analysis on LOD
The abbreviation "LOD" is used in various meanings. When writing the proposal, we were strongly influenced by the LOD-definition of the American Institute of Architects (AIA), which is commonly known as "The LOD framework for the Building Information Modelling Protocol Form" (AIA Contract Documents 2013). In this case, the term LOD refers to the "Level of Development" required for BIM-model elements' content. The term "Level of Development" is used rather than "Level of Detail" in recognition of the fact that a visually very detailed element might in fact be generic and despite appearances might be at a low level of design development (BIM Wiki 2020).The LOD levels of BIM data should be generally defined for different stages of projects when data sharing takes place. This is a pragmatic approach to refer to the granularity of BIM data and to track the data refinements throughout the project progression over multiple stages of the building. Furthermore, this would allow stakeholders to verify that project information is detailed enough to meet their requirements, enabling them to decide whether to proceed to the next project stage or not Commencing in 2004, different countries have developed different LOD standards generating a complex situation at an international level. A single, unified approach for the definition of LOD is pending. The abbreviation "LOD" is used in various meanings in different countries, such as the USA -BIMForum Specification (BIMFORUM), UK -BS 1192-1 and PAS 1192-2, 3 (PAS 1192-2) (PAS 1192-3), and Italy UNI 11337 part 4 (UNI 11337-4) (see also Table An analysis of various LOD systems according to the standard of practices or national norms is carried out as a part of the initial study. Based on the results from this analysis a conclusion is drawn on flexible usage of these frameworks into the construction project irrespective of standards and the region of work.It also identified the basic requirement that needs to be addressed in the ontology representation of the LOD frameworks or systems.LOD Definition in European Standards
An initial analysis of LOD had been carried out in Task 3.1 (see Deliverables D3.1 section "3.4 Evolution of information during execution").In this deliverable, we provide a comparison between selected LOD scales referred to in different stages of the project. More specifically, we illustrate the different LOD framework definitions from the following standards based on national or regional specifications:-Italian -UNI 11337 in its part 4 (UNI 11337-4), -EN 17412:2019: "BIM -Level of Information Need -Concepts and principles -UK -PAS 1192-2 (PAS 1192-2:2013) and It clarifies how far a common European definition can be agreed upon and when further detailing must occur within each member state. (BS EN 17412-1:2020) defines two terms used:• LOG: Level of Geometry, and LOI: Level of Information. This is to describe the state of the definition of Model Elements (ME) in Building Information Models. It establishes a common way to label the different levels, here, in particular, the Levels of Geometry and Levels of Information, according to a naming scheme, such as numeric as 1-5, or 100-500, or alphanumeric, such as A-E, or by a combination of both.The recently published To make the case even more confusing, it provides the following "formula": LoD = LOD + LOI.The meaning of this "formula" is, that the Level of Definition comprises of two components, such:• Levels of model Detail (LOD), which relates to the graphical content of models;• Levels of model Information (LOI), which relates to the non-graphical content of models.The levels of model detail and model information are generally defined for key stages of a project at which "data drops" (information exchanges) take place, allowing stakeholders to verify that project information is consistent with their requirements and enabling them to decide whether to proceed to the next stage.However, at present, there is no standardised definition for the timing of data drops or for levels of model detail and model information, other than the suggestion that they should be aligned to stakeholders' decision points and should be consistent across all appointments. This is because it is thought they will vary depending on the nature of the project. However, some very broad guidance on how to define data drops was given in Table EN 19650 was not explicitly included in the table, since it uses definitions that are comparable to those provided in EN 17412:2019. LOD Definitions in International Standards
The BIM-Forum provides the following background information on their webpage:  LOD 200
Generic system object or assembly -graphic representation (non-graphic information may be attached) with approximate quantities, size, shape, location and orientation. They may be recognizable as the components they represent, or they may be volumes for space reservation. Any information derived from LOD 200 elements must be considered approximate.LOD 300LOD 200 + System or Components -graphic representation (non-graphic information may be attached) with specific quantities, size, shape, location, orientation can be measured directly from the model without referring to non-modelled information such as notes or dimension callouts.LOD 350LOD 300 + Interfaces with other building systems added. Parts necessary for coordination of the element with nearby or attached elements are modelled. These parts will include such items as supports and connections.LOD 400LOD 350 + Information added -for detailing, fabrication, assembly and installation.A LOD 400 element is modelled at sufficient detail and accuracy for the fabrication of the represented component.LOD 500Field-verified representation in terms of size, shape, location, quantity, and orientation. It is not an indication of progression to a higher level of model element geometry or non-graphic information (which may also be attached to the Model Elements). Flexible Usage and Adaptability
When using the LOD approach, it is necessary to highlight that this should be used as a methodological approach that can be adjusted and modified to different national constraints. The approach we take is defining the reasonable number of different levels of detail to specify what should be included for our purposes (e.g. building renovation), and amalgamating the information content (concerning geometrical and alpha-numerical data) in one commonly specified, holistic definition. This methodological approach is valid, irrespectively in what country a certain standardised solution applies. This allows us to provide a 'robust framework' as a solid foundation for LOD-ontology development.Furthermore, the clarification should be made that LOD's relate to Model Elements and not complete Building Information Models. Furthermore, on the attribute level, one must be sure that the name of the attribute like "height" or "length" is always correctly interpreted in the ontology. This is usually achieved through alignments (see Deliverable D3.6).To maintain the general applicability, it should always be possible to change the LOD scale in the LOD ontological structure with additional mapping represented by the abovementioned (BS EN 17412-1:2020).As an outcome, it will be possible to outline a subset of parameters in form of LOD-related matrixes that will satisfy data exchange requirements during selected stakeholders' activities.With this knowledge on different LOD standards, scales and their relations, we move to further investigation of the necessary requirements for the ontological representation of a LOD structure. The following sub-section aims to describe these requirements along with the possible options to develop a common ontological representation of LOD systems.Requirements for ontologies to support LOD systems
In the area of information management, the support for LODs centres around the challenge to represent:(1) various LOD systems,(2) multiple versions of information about the same object and(3) the connections of LOD-specific data to building lifecycle processes.A proper representation not only allows the users to access and work inside one specific LOD but enable various cross-LOD functions:• to access the history of values,• to utilize the links, annotations, and other enrichments of previous LOD objects with those in subsequent LODs,• to check the consistency and possible deviations between objects at different LODs, and• to determine what kinds of adjustments to previous LOD models would be needed.Moreover, it helps to connect LODs to other aspects of building information: to keep track of the origin of information and to maintain the rules for validating it against the requirements of subsequent activities. This analysis of LOD requirements suggests at least the following areas where ontology definitions are needed to properly support LODs:• LOD frameworks: The representation of various levels, their relations, and the links to associated definitions.• LOD sensitive BIM data: The representation of (versioned) properties of objects to capture the data at multiple different levels in an organized manner.• Connection of the LOD framework to processes. Ontology-based LOD representationLOD -Ontology representation
The analysis of various LOD systems leads to different implementation requirements which need to be defined by the ontology-based frameworks. The concept of Competency Questions (CQ) is used to describe such requirements in terms of natural language questions. These CQs are used as the basis for the development of an ontology structure, concepts and properties. The development of an ontology framework for LOD representation is progressed towards providing all the answers for these competency questions.• CQ1: How can the BIM data representation be adjusted or modified to different LOD systems?From the general analysis of different LOD systems, an ontology schema is developed and illustrated in Figure The methodological approach is to represent LOD systems and their levels as classes, which can then be instantiated on a project-to-project basis. The class dicl:LODFramework can be instantiated with the frameworks (e.g. BIMForum, UK LOD, Italian LOD). The levels in the different frameworks are added as instances to the class dicl:LODLevel. These instances are subsequently assigned to BIM data and modified based on the project requirements. • CQ2: What is the link between the LOD system and its levels?As indicated in Table In the present approach, all these Classification-Levels and as well the scale of the LOD system are Page 25 Public considered as Levels for the respective LOD system. To achieve this object, at first instance, the link between the LOD system and its respective Classification-Levels are generated using the object property dicl:hasLevel and its inverse property dicl:isLevelOf. Furthermore, a sub-property chain axiom (dicl:hasLevel o dicl:hasSubLevel → dicl:hasLevel) is assigned to the object property dicl:hasLevel to define semantic interpretation between the LOD scales and LOD Systems. This axiom inherits the new relation by saying LOD scales are defined as levels to the respective LOD system. Please refer to Figure • CQ3: What is the relation between the LOD Classification-Level and the LOD scale? (Table Within the present approach, a sublevel relationship is generated between the LOD Classification-Level and its respective scale. The implementation idea is that the developed approach should fit into different classification criteria's available now or will be developed in future. This relationship is indicated in Figure • CQ4: What is the relation between LOD scales?According to the several LOD systems or frameworks, the level of growth in LOD levels is clearly based on the information growth or refinement. The same idea is considered in the generation of relationships between the levels of a LOD framework and the same is illustrated in Figure Apart from the development, an exemplary demonstration is presented in the below subsection to elaborate on the applicability and functionalities of the developed ontology framework.LOD -Demonstration
For the demonstration, the BIMForum LOD framework is considered. The demonstration uses data from Table As represented in Figure Similarly, for other LOD systems, division of a level scale into different LOD Classification-Levels is also possible according to the developed framework. For instance, the UK LOD framework contains Level of Detail (LOD) for geometric information and Level of Information (LOI) for non-geometric information. They basically form two parallel sequences of levels.Furthermore, the relationship between the neighbour instances diclvl:AsDesigned and diclvl:AsBuilt is assigned using dicl:hasNextLevel as a transitive object property. As defined in the ontology framework, the dicl:hasNextLevel object property has an inverse relationship assigned with dicl:hasPreviousLevel. This inherited knowledge (inverse relationship) is also represented in Figure The LOD scale information regarding each LOD Classification Level is defined by using the transverse object property called dicl:hasSubLevel and its inverse property dicl:hasSuperLevel. Because of the transverse nature of these object properties, any further sub-level of a LOD scale is also considered as a LOD level. Similarly, due to the defined axiom to dicl:hasLevel property, all these LOD scales are inferred as Levels (dicl:LODLevel) to the dicl:LODFramework (diclvl:USA_BIMForum).  The relationship between the LOD levels is modelled by using transitive object property dicl:hasNextLevel (see Figure LOD -Verification
The verification of the developed ontology framework is performed by running SPARQL queries on the demonstrated example. These queries are majorly developed by considering the competency questions used for the ontology development process. The information related to instances and relations between them is populated to the developed ontology framework based on the analysis results comprised in Table After the population of instances, a reasoner (Pellet) was used to inference the new knowledge and to check the consistency and correctness of the developed ontology. One example query along with the results are illustrated in Table LOD-based BIM data Management
The section provides an analysis for the management of LOD-based BIM data. This analysis focuses on LOD-based representational methods for BIM data (also called LOD sensitive BIM). It also aims to describe the sources of this BIM data generation and the representation of their evolution and refinement. The analysis also considers the developed workflow ontologies (see D3.4) and the other BIM4EEB ontologies developed as part of Deliverable D3.2 (Material, Energy, Occupancy, etc.). The task mainly uses the classes and concepts from ontologies already developed in WP3 and introduces a LOD-based BIM data management workflow.Approach Analysis
The representation of BIM data in a LOD-sensitive manner is based on the following approach:(1) Identifiers (URIs) of entities are not LOD sensitive, and(2) The statements about objects can be LOD sensitive.That is, objects themselves are not associated with a specific LOD level but their property values can be.It is therefore not possible to ask which LOD an object belongs to because the object can simultaneously have properties belonging to many different LOD levels.The representation of multiple LOD specific values requires an extended mapping (object, property, level  value) instead of normal mapping provided by RDF triples (object, property  value).Such mapping can be implemented in different ways in RDF as reviewed in the Deliverable 3.1 (BIM4EEB-D3.1, 2022). The approaches can be divided into static ones that support a fixed set of levels -such as context-specific properties (e.g., :planned_<property>, :actual <property>), or context-specific namespaces (e.g., planned:<property>, actual:<property>) -and dynamic ones that support a variables set of levels -such as objectified properties (related to RDF reification), singleton properties, and named graphs.Since the Digital Construction Lifecycle ontology (DICL) should support different LOD systems (for instance, as used in different countries) and even systems that contain an unspecified number of levels (such as the LOIN standard), only the dynamic approaches can reasonably be considered for a generic ontology. Of these, the most established ones are named graphs and objectified properties.Representations to support both of these approaches have been implemented in Digital Construction Ontologies and below their roles in the representation of LOD data is described.Named Graphs
An RDF database can contain multiple repositories, each of whose contents is an RDF Dataset. An RDF Dataset is a set of RDF graphs, comprised of one default graph and an unlimited number of named graphs.Each named graph is identified by its own URI. The possibility to store and use data from multiple different graphs creates an additional dimension to RDF. Instead of triples, the statements are in reality represented as quads in the form <graph, subject, predicate, object> (BIM4EEB 2021, D3.1). It is easy to see how the extended mapping mentioned above can be implemented with quads.Named graphs can have properties of their own -that is, triples whose subject is the URI of the named graph. These properties can describe the named graph itself and the dataset contained in the named graph, e.g. the origin, creation time, maximum LOD level, and so on. They can be regarded as metadata of the contained data. Named graphs are an efficient mechanism to represent the metadata that is same for all the contained data. However, when the different triples in the dataset have different metadata, named graphs is not an appropriate representational mechanism.Named  The implementation of the levels based on DICV is illustrated in blue color in Figure Adopted approach -conclusion
In the technical sense, the two mechanisms presented -named graphs and objectification of propertiesare not in any conflict with each other. Named graphs works at the level of datasets (e.g., BIM models) and the property objectification at the level of individual datums in the dataset. It is thus technically possible to use them together and combine their strengths.The approach adopted in BIM4EEB is based on the established practice that one BIM model can contain information at several different LOD levels. That is, all information in a model is not necessarily at the same LOD level. To capture these intra-model LOD distinctions, it is necessary to use objectified properties. However, at the more coarse level there can be different versions of models -perhaps documenting the situation at specific milestones or capturing a major revision, made necessary by a large design change. These major versions can be managed as different datasets.In summary, major dataset-level revisions of BIM models are managed with named graphs through the information containers (dici:BuildingInformationModel) managed in the project information model (dici:ProjectInformationModel) and the actual management of LOD levels inside each of these models is addressed with objectified properties (dicv:Property, dicv:PropertyState). And the subsequent discussion will thus elaborate that approach.Ontological representation
The ontology development process also progresses through addressing the fulfilment of requirements represented in natural language Competency Questions.• CQ5: How is the BIM object is represented?In the DICL ontology, the class dice:BuildingObject is used to represent the building object information. This class is related to the class dicv:Subject by an equivalent property.• CQ6: How to represent multiple versions of information about the same object?As clearly elaborated in the above section, an approach called Objectification of Properties is considered to represent the multiple versions of the same object's information. According to this approach, the defined classes dicv:Property and dicv:PropertyState make it possible to add an ultimate number of properties to building objects and their growth of accuracy throughout the project life-cycle. In detail, the object property ). This property definition capabilities are attached to the building object using the object property dicv:hasProperty and its inverse property dicv:isPropertyOf. Once information objects are finished or new updates in information systems have been made, the relevant data can be converted into an RDF form and published as Linked Data to allow the integration of the relevant content with other renovation data. Each information object (explicitly or implicitly) provides information at certain LOD levels, and therefore the data should primarily be converted in a LOD sensitive manner. A difficulty that needs to be taken into account in such conversions is that the LOD frameworks currently used explicitly allow the same BIM model to contain data at different levels of detail. For instance, a structural model can contain a detailed design (e.g., at LOD400) of only one representative element of each type, while the other elements remain at the previous level of LOD (e.g., LOD350).Within the DICL ontology development, this can be achieved by using the same approach called Objectification of the properties. This approach or specification also supports the modelling of explicit relationship between LOD and BIM attributes by using the object property dicl:hasLODLevel and its respective inverse property dicl:isLODLevelOf. This relationship makes it possible to represent the property value at its corresponding LOD level. Further relations between the LOD levels and their LOD structure are defined in the ontology representation detailed in Section 3 of this deliverable.• CQ8: What are the sources for LOD data?Along with the representation of LOD-sensitive BIM data, it is also necessary to represent the sources for this LOD data. The possible sources of LOD data are different kinds of information objects. In the context of BIM4EEB, these are primarily BIM models but can also include drawings, documents, messages and events/notifications. To address this requirement, a concept called dici:informationContainer is considered and liked to dicv:Property and dicv:PropertyState using the object property dicl:isDerivedFrom. This information container represents different data models, drawings, reports, etc. The developed ontology approach is similar to the (Bonduel 2018) approach but a modification is considered to fulfil the needs of deliverable D3.3. which is the representation of LOD level as an owl:instanceOf dicl:LODLevel instead of the data property. This methodology allows users to directly represent the information with already defined levels, which are already categorized based on the LOD systems and contains relationships among the levels. This representation enables the data upgradations and query process much easier and reliable. Mostly eliminated human interpretation and textual errors in the data management process. Renovation Process Modelling
The objective of this section is to develop an ontology representation for renovation process modelling which clearly describes the different activities, sequences, their interrelation with stakeholders involved and information requirements. Along with the ontology developments, the integration of the LOD-based BIM data representation in the renovation process modelling is also specified in this section. This integration mainly focuses on the reduction of the current gap between the process models and the developed BIM models. This integration task doesn't mainly depend on the development of a new ontology framework but to develop a set of required properties to indicate and manage LOD-based BIM data.Renovation components
To achieve the objective, it is necessary to understand how the renovation workflow is implemented as part of the BIM4EEB project. A comprehensive analysis of the renovation workflow is presented in the deliverable D2.1 of Work Package 2. This section aimed to rewind the involved components in the renovation process described in D2.1. This process helps to understand the relation between these renovation components and supports ontology development.Renovation activities
Activity is a task need to be carried out by a stakeholder or agent at a specific point of the renovation intervention. All these activities are listed as different renovation processes involved in the corresponding Building Lifecycle Stage (BLS). Approximately, 196 of such well-defined renovation activities are listed and explained in the deliverable D2.1, chapters 3 and 4, Tables Stakeholders or agents
Stakeholders or the agents are the actors, who are involved in renovation activities. A sum of 38 stakeholders are represented in D2.1 and all are listed in also Table Activity sequence
According to Deliverable D2.1, the structure of the renovation processes are defined completely based on the BLS following the EN 16310. Figure Usecase
In this step, a set of simple use cases are defined with the aim of BIM4EEB tool requirements according to the renovation workflow described in D2.1. The idea of this implementation is to understand the involvement of various components (BLS, stakeholders, activities, etc,) and their relationship in the renovation process. We try to understand how do these components are used or at least related to other work package developments in future. Also, try to understand how does the development of DICL ontology should support domain-based process representations. With these use cases, we got a better understanding of the renovation process and used them as initial steps for the DICL ontology development process. We have outlined the three Use Cases as a dynamic combination of selected activities performed by related stakeholders during the renovation processes in the focus of the BIM4EEB. One is presented below and the remaining two are in Annex IV -Additional Use Case Definitions.Use Case 1: Data Acquisition for HVAC Design, Operation and Efficiency Management This use case describes activities related to data acquisition processes. All the identified activities may help in the development of digital tools for fast mapping of existing building data. The identified activities majorly provide the information regarding geometrical data, existing services systems, presently available heating and water pipes, ventilation systems, electrical cords, equipment, etc. Here, the numbers within the below table referring the activity numbers mentioned in renovation workflow developed in D2.1. The numbers used to represent BLS is completely based on the BLS numbering illustrated in Table Representational Schema
Efficient management, collaboration and sharing of object information throughout the BLS and among stakeholders are fundamental to ensure the successful implementation of a project Based on the analysis of renovation components, renovation workflow and LOD-based BIM data  Similarly, the Process representation describes the role of different stakeholders involved in renovation activities listed in various Building Lifecycle Stages. The relationship between these components is already analysed and represented in Figure Ontological representation of renovation workflow
The work involved in this section is to develop an ontological representation of renovation processes and link it to the LOD-based BIM data. Similar to the above sections, the concept of CQs is used for requirements specification for renovation process ontology development. The ontology development process progresses through addressing these requirements or CQs.  • CQ10: How to identify the sequence of activities?As described in D2.1, renovation workflow, the sequential relationship between these activities are represented based on the BLS. In the renovation workflow, the activities are divided or categorized completely based on the structure of BLS. In technical terms, the progressive growth of renovation interventions can easily be represented or tracked through the BLS. Also, the relation between these different stages can easily be represented in ontology structure. Based on these advantages, in DICL ontology, the same BLS concept is adopted to represent the sequence of renovation activities.Furthermore, the comprehensive and elaborated explanations regarding the ontological representation of BLS frameworks are presented in Section 5.4 of this deliverable.• CQ11: How are the stakeholders or agents related to activities?An intensive analysis of the relationship between the agents and activities are already presented in subsection 5.1.2 of this deliverable. Based on these analyses, In the DICl ontology, the class dica:Agent is adopted to specify all the actors/stakeholders involved in the building renovation process. Also, a class dice:Role is adopted in DICL ontology to assign the role to an agent based on their involvement in the specific activity. As represented in Figure Apart from the representation of the relationship between the activities and the stakeholders, an analysis is carried on the participating role of the stakeholders in each activity. This analysis was carried out based on the defined workflows in Deliverable D2.1 (Table • CQ12: How does the renovation process linked to BIM data represented in LOD-sensitive manner?As illustrated in Figure • Object (dice:BuildingObject);• Property name (or a property set or other grouping of properties);• Nature of data needed (e.g., a LOD level or other specification).A difficult representational challenge is how to represent the values of the same properties of objects at multiple different levels. The most typical approach is to use the objectification of properties, which was explained in Section 4.1. By using this approach, an ontological representation of LOD-based BIM data on the attribute or property level is achieved and elaborated in Section 4.2.In Figure • CQ13: How to represent specific use cases within the renovation workflow?Atomic activities can be grouped forming larger processes or even use cases. Thus Use Cases can be defined as a special type of activity. The specification of Use Cases may help to simplify navigation through the knowledge space. It also provides an instrument to provide access to information requirements of specific tools or domain-specific processes involved in the renovation process. Figure Building Lifecycle Stages (BLS)
In common practice, activities are classified according to BLS. Deliverable D2.1 provides an extensive analysis of activities for building renovation in each Building Lifecycle Stage. The relationship between BLS and the Activities is represented in the DICL ontology framework with the help of object property dicl:hasActivity and its inverse property dicl:isActivityIn. It is illustrated in Figure However, the activity analysis in Deliverable D2.1 primarily considers BS EN 16310:2013. In practice there exist many other systems or frameworks to represent these lifecycle stages. Thus, the development of the ontological representation for BLS should be capable to accommodate these different specifications. This section aims to investigate alternative BLS representations.  Similar to the various BLS system definition, stages of the respective BLS system are defined as instances to dicl:BLSStage. The relationship between these stages to the BLS system is generated with the help of object property dicl:hasStage and its inverse property dicl:isStageOf.As represented in Table To represent the relationship between the BLS system to these sub-stages is generated by using the subProperty chain axiom (dicl:hasStage o dicl:hasSubStage → dicl:hasStage) defined to the object property dicl:hasStage. Figure • CQ16: What is the relation between stages?The relationship between the stages are defined by using the object properties called dicl:hasSubStage, dicl:hasNextStage and their respective inverse properties dicl:hasSuperStage, dicl:hasPreviousStage. Similarly, the transitive character of the properties is enabled by assigning owl:TransitiveProperty to these object property which further enables the aggregated relationships between the stages.• CQ17: What is the relation between the main-stage to sub-stage of other main-stage?The complex part of this ontology development process is to generate the relationship between the mainstage and sub-stages from another main-stage according to the BS EN 16310:2013. For example, as represented in Table In DICL ontology, the mapping relationships between the stages from different BLS frameworks are modelled by using the symmetric object property dicl:isRelaventWith.To provide a better understanding of this developed approach, an example demonstration is generated for the BLS system -BS EN 16310:2013 and elaborated clearly in the below section.Demonstration of ontology approach
For a clear understanding of the functionality of this ontology framework, a demonstration is considered. For the demonstration, the BLS representations from the standard (BS EN 16310:2013) illustrated in Table As represented in Figure Furthermore, the relationship between the sub-stages of a mainstage is developed by using dicl:hasNextstage. Due to this defined relationship, the inferences relations from its inverse property and the transitive property characteristic are illustrated in Figure But the complexity is to infer the relationship between the main-stage (dicstg:Initiative) and a sub-stage (dicstg:ProjectInitiation) of another mainstage (dicstg:Initiation), similarly between the sub-stage (dicstg:BusinessCase) of a mainstage (dicstg:Initiative) and the sub-stage (dicstg:ProjectInitiation) of another mainstage (dicstg:Initiation). This complexity of inferencing the new knowledge is resolved The understanding of the inference relationship between the main stage and the sub-stages of another main stage is pretty straightforward from the assigned axioms but the generated links between sub-stages of different mainstages are quite complex to understand.The assigned axiom to dicl:hasNextstage generates the next-stage relationship between dicstg:Initiative and dicstg:ProjectInitiation. It also means that dicstg:Initiative is a previous-stage to dicstg:ProjectInitiation and this information is generated based on the inverse property of dicl:hasNextstage, which is dicl:hasPreviousStage. Now the axioms assigned to dicl:hasPreviousStage further inherits the previous-stage relationship between dicstg:ProjectInitiation and dicstg:BusinessCase. These inherited relationships are clearly represented and distinguished within Figure Verification of ontology approach
Similar to the LOD framework validation, the same methodology is adopted to validate the BLS framework.The validation of the developed framework is performed by running the set of SPARQL queries on the demonstrated example. As represented in Table After the population of A-Box instances, a reasoner (Pellet) was used to develop the new knowledge and to check the consistency and correctness of the developed ontology.Thereafter, several queries were performed (using Snap Sparql view in Protege) to extract the generated information and to check the consistency and quality by comparing query results against the original information from BLS standards.A set of simple queries and their results regarding the relationship between the stages is presented in the below table. This table represents the consolidated results from the Snap SPARQL query engine. For a clear picture of the developed A-Box knowledge, the same set of queries are used on the non-inferences information and the comparison of the results are presented in Annex II.  Ontology Management & Validation
The section describes the derived alignment components between the Digital Construction Lifecycle (DICL) ontology and the external and/or BIM4EEB ontologies. The concept of Horizontal and Vertical segmentation is adopted to represent these alignments or dependencies between the ontologies. More specifically, these alignment concepts are comprehensively explored as part of the evaluation and validation process planned in Task T3.6 of WP3.External ontology alignment components
During the second cycle of Digital Construction Lifecycle (DICL) Ontology development, the usage of classes from other (related) BIM4EEB ontologies was optimised. One of the reasons is to reduce the redundancy and the repetition of similar concepts within the BIM4EEB ontology suite.The horizontal and vertical segmentation of these classes is not discussed as part of this deliverable. Instead, this is part of the discussion in deliverable D3.6. This section is dedicated to focusing on the management of the Building Lifecycle and BLS ontologies.  Indirect alignment with External Ontologies
As said above, the Digital Construction Lifecycle ontology is majorly developed by using the components or classes from other BIM4EEB ontologies. In technical, these BIM4EEB classes are also been dependent or aligned with corresponding external ontology components. Which subsequently results in indirect relations or alignments of components of the Digital Construction Lifecycle ontology to external ontologies. This document does not specify those alignment concepts in detail.However, we provide in Figure Validation of the ontology
The validation of the Digital Construction Ontology will be presented in Deliverable 3.6 according to the original plan. It will address the competency questions, their formalization in SPARQL according to the terms of DiCon and evaluation with test data. This Deliverable also provides some validation examples through the sample demonstrations to support the ontology development process. Summary and Conclusion
The development goal of this deliverable is a Digital Construction Lifecycle (DICL) ontology to represent BIM data in different levels of detail (LOD) corresponding to renovation workflow. Intending to fulfil this objective, the deliverable starts with an extensive analysis of LOD systems defined in different standards or publications. Based on this analysed knowledge, an ontological approach is developed with the idea to accommodate all the LOD systems. The development process is carried out based on the analysed requirements (CQ), which should be fulfilled by the adopted approach. Also to provide a clear understanding of the developed ontological approach for LOD representations, a demonstration example is elaborated based on the USA -BIMForum LOD system. The deliverable also explains the further framework capabilities corresponding to the BIM data management in terms of LOD-sensitive BIM data.Furthermore, an analysis is carried on the requirements and needs to be addressed by the DICL ontology corresponding to renovation workflow representation and connection of LOD data to the renovation process. This analysis describes the involved components in renovation workflow concerning activities, tasks, and sequences, their interrelations to stakeholders involved, the required information, other resources, etc. To achieve this objective, the ontological approach is further extended based on the 6dimensional representational schema including Activity, Stakeholder, BLS, LOD, BIM data and Use cases. This schema expresses the relationship between these six dimensions of the building renovation process.Based on these investigations and the representational schema, a complete Digital Construction Lifecycle (DICL) ontology is developed and elaborated in the deliverable. The developed DICL ontology is also easily adaptable and applicable to the present BIM process since the representation of BIM data in different ontologies is within reach. The DICL ontology also brings flexibility, compliance and alignment capabilities through logical reasoning and knowledge inferencing in BIM data management. Moreover, the validation and evaluation of the developed DICL ontology were performed based on SPARQL queries. The results from these queries are presented either in the text or in complementing Annexes. With the defined and additional inherited knowledge capabilities, the developed ontology framework evidently presents its applicability and functionalities in terms of modelling BIM data in different LODs corresponding to renovation workflow.Finally, the deliverable provides an overview of alignments and further dependencies with both the external and BIM4EEB ontologies. Furthermore, a demonstration example using a populated DICL ontology is presented in Annex V -Basic demonstration of LOD sensitive BIM data. PublicHere some images are provided related to the example queries above. The objective of these images to compare the query results before and after the inclusive of inferred data. Only some queries from above table is considered this purpose.    LOD 5001 External Wall LOD100 LOD200 LOD100 LOD300 LOD350 LOD100 LOD300 LOD350 LOD400 LOD400 LOD300 LOD350 LOD400 LOD300 LOD500 LOD300 LOD350 LOD300 LOD400 LOD500 LOD400 Use Case 3: Fast Track Renovation Operation
The use case consists of those activities allowing to speed up the renovation process by setting up some strategies, basic planning principles and efficient investigation of possibilities. The activities related to costefficient construction planning and schedules. Those activities diverted on awareness of the renovation status are also included in this Use Case. Inspection and monitoring of day-to-day activities in the construction (progress) and checking of their compliance with plans are also the major activities that play an important role in the efficient and fast renovation process.   Each example file contains the information regarding the Polish demo site's 2 nd floor concerning the specified LOD level. Initially, an analysis of the generated BIM models was performed. The analysis results are captured in Table • IfcBuildingStorey 1 1• IfcDoor 17 17• IfcOpeningElement 35 35• IfcProject 1 1• IfcSite 1 1• IfcSlab[Floor] 1 1• IfcSpace 34 34• IfcWall 30 30 • IfcRelAggregates 4 4• IfcRelAssignsToGroup 3 3• IfcRelAssociatesClassification 2 1• IfcRelAssociatesMaterial 76 87• IfcRelConnectsPathElements 47 47• IfcRelContainedInSpatialStructure 1 1• IfcRelDefinesByProperties 372 372• IfcRelDefinesByType 55 57• IfcRelFillsElement 33 33• IfcRelVoidsElement 35 35 EntityTypes 5 5• IfcDoorStyle 13 13• IfcSlabType 1 1• IfcSpaceType 34 34• IfcWallType 4 4• IfcWindowStyle 3 5In later stages, for more understanding of the incremental changes in both models, the observations are extended to the level of attributes. For this, a single instance from each entity (mentioned in Table This table represents the gradual increment within the object properties (attributes) along with the increase of Levels of detail. It also observed the growth of the object's construction details (material layers or materials). From this basic analysis of these BIM models, the following scenarios are observed.• Scenario 1:-there is no change in the BIM Objects or entities (wall, slab, etc.) but the object property growth is observed along with the increment of LOD levels;• Scenario 2:-Observed a growth in BIM object's construction details in terms of Layers and Material information Also, for the development of Digital Construction Lifecycle ontology, these scenarios are considered as development requirements. The following ontology demonstration also provides clear understandings of the developed ontology by addressing the above-mentioned scenarios.  In the Data Conversion process, the received IFC files are converted into respective OWL files using the BIMMS platform. This is an automated conversion process established in the BIMMS platform. So this conversion process is not described within this deliverable.The next part of the demonstration describes the population of data from the BIM models (OWL files) to DICL ontology.The last part explores the filtering of data using LOD levels. This demonstration work has been carried out with the help of the SPARQL queries. Detailed discussions concerning the workflow along with the query profiles are provided in the subsequent sections. Due to the high amount of data, the documentation of the demonstration is restricted to Wall Objects (wall entities) but the workflow is valid for the entire BIM model.Populating the DICL ontology
The population of already available information from BIM models to the required BIM4EEB ontologies is the major task in the complete demonstration process. In this demonstration process, a set of iterative SPARQL profiles are used for populating the data but for the documentation the final successful and amalgamated profiles are presented. In the process of data population, at first SPARQL SELECT queries are used to verify the available data in BIM models and then extended them into SPARQL CONSTRUCT and SPARQL INSERT queries to construct the extracted data into Digital Construction Lifecycle ontology. }
After the extraction of information from the BIM models (ifcOWL), construction queries are used to update the extracted information to DICL ontology. The table below illustrates these queries used for the data update process. Also, Table 21 illustrates a basic example of the constructed information according to the mentioned construction query within Table Filtering the data
The important segment in the demonstration process is the extraction or filtering of the information from the DICL ontology. This task is also performed as part of the ontology validation. As mentioned in the above subsection, the lifecycle ontology population is carried out by using SPARQL queries. The results from this ontology population process are mentioned in Table D3. 3
Figure 1 :Figure 2 :Figure 3 :Figure 4 :Figure 5 :Figure 6 :Figure 7 :Figure 24 :
D3. 3
Figure 1 :
D3. 3
Figure 2 :Figure 3 :
D3. 3
D3. 3
D3. 3
Figure 4 :
D3. 3
D3. 3
Figure 5 :Figure 6 :
Figure 7 :•
D3. 3
Figure 8 :
D3. 3
D3. 3
Figure 9 :
D3. 3
D3. 3
D3. 3
Figure 10 :
D3. 3
Figure 11 :
Figure 12 :
D3. 3 Figure 13 :
Figure 14 :
Figure 15 :
Figure 16 :
D3. 3
D3. 3
D3. 3
Figure 17 :
D3. 3
Figure 18 :
Figure 20 :Figure 22 :Figure 23 :
Figure 24 :
Figure 25 :
Annex V -
Figure 27 :
D3. 3
D3. 3
Table 4 :
Table 5 :
Table 6 :
Table 7 :
Table 8 :
Table 9 :
Table 10 :
Table 11 :
Table 12 :
Table 13 :
Table 14: LOD -Queries and their results -Part 2 ................................................................................ Table 15: Stakeholders and their involvement in Use Case 2 ................................................................ Table 16: Stakeholders and their involvement in Use Case 3 ................................................................ Table 17: Comparison of BIM Model Instances ..................................................................................... Table 18: Comparison of BIM Model attributes ...................................................................................... Table 19: The query for the extraction of wall object data ...................................................................... Table 20: The query for the construction of wall object data .................................................................. Table 21: Example 1 -Instances for the demonstration ......................................................................... Table 22: Object property extraction ...................................................................................................... Table 23: Construction details Extraction ............................................................................................... Table 24: Example 2 -Instances for the demonstration ......................................................................... PublicTable 1 : Defined BLS according to BIM4EEB Project (D2.1)
Table 2
. It is necessary to admit that only stakeholders 1 -22 were mentioned in the D2.1 renovation process workflow. Furthermore, stakeholders 31 -38 were mentioned only as "involved in the renovation process" (see BIM4EEB D2.1 section 2.2), but not reviewed in the workflow chart (D2.1, chapter 5). However, to maintain the scope and keep the methodology of this D3.3 report open, this list of stakeholders will be used for the subsequent developments within this deliverable.Table 2 : List and number of the Stakeholders identified
approach for LOD-based BIM-data management
2.Table 3 : Ontology namespace parameters
Table 4 : Other BIM4EEB ontologies represented in this deliverable
Table 5 : LOD system according to the different national specifications
LOG A, LOG B, LOG C, LOG D, LOG E, LOG F, LOG G LOI: Information Objects LOI A, LOI B, LOI C, LOI D, LOI E, LOI F, LOI G D3.3 An ontology for representing data and information stored in BIM models at different LOD corresponding to renovation process modelling GA N. 820660 02/02/2022 Page 21 PublicTable 6 : Specific definition of LOD Levels as per BIM-Forum
Symbolic and not geometric representation. Examples are information attached to other model elements or symbols showing the existence of a component but not its shape, size, or precise location. Any information derived from LOD 100 elements must be considered approximate.Table 7 : LOD -Queries and their results -Part 1 CQ2:
Further queries were executed to extract the generated information to check the consistency and quality (using Snap Sparql view in Protégé). For a clear picture of the developed A-Box knowledge, the same set of queries are used on the non-inferenced information and the comparison of the results are indicated in Annex I. D3.3 An ontology for representing data and information stored in BIM models at different LOD corresponding to renovation process modelling GA N. 820660 02/02/2022 Page 28 PublicTable 8 : Stakeholders and their involvement in Use Case 1
Table 10 : BLS -Queries and their results -Part 1 CQ16
: What is the relation between stages? CQ16.1:-Table 11 : External ontologies aligned with DICL ontology
1 Direct alignment with External ontologies
Table 12 : Alignment components with external ontology classes
Table 13 : Alignment components with BIM4EEB ontology classes
Annex IV -Additional Use Case Definitions Use Case 2: HVAC Design, Operation & Efficiency Management for Fast Track Renovation Operation
Table 15 : Stakeholders and their involvement in Use Case 2
Table 16 : Stakeholders and their involvement in Use Case 3
Table 17 : Comparison of BIM Model Instances
Table 18 : Comparison of BIM Model attributes Parameters LOD 200 Model LOD 300 Model Wall.1.1 -Basic Wall:500 + 100: 2145690
1.1 -Window 7:100 x 220: 2145699
Table 19 : The query for the extraction of wall object data
?MaterialLayerList list:hasContents ?MaterialLayer. BIND(IRI(CONCAT(STR(?MaterialLayer),"_Property") ) AS ?layerProperty) . BIND(IRI(CONCAT(STR(?MaterialLayer),"_PropertyS tate_LOD200")) AS ?layerPropertyState) .Table 20 : The query for the construction of wall object data D3
?WallInstance a dice:BuildingObject . ?WallInstance dicl:hasID ?GlobalId; rdfs:label ?Name.Table 21 : Example 1 -Instances for the demonstration @
diclvl:Italy_Level_of_Development diclvl:LOG_Geometrical_Object diclvl:LOG_G