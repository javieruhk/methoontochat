INTRODUCTION
Ontology reuse is included as a fundamental step in most of ontology design methodologies, and is considered crucial because it both allows developers to save effort, and encourages the inclusion of ontological fragments that have been independently validated, hence improving on quality In addition, while different approaches to ontology reuse exist, the decision on which approach is more suitable for a given situation is usually taken by ontology engineers when bootstrapping a project Effective reuse poses a significant challenge to the community, hampered by a variety of factors such as:(1) possible deficiencies in ontologies' documentation make it difficult to find all ontologies suitable for reuse The ultimate goal of our research is to develop a comprehensive framework for assessing ontologies for reuse, capturing the requirements for reusing ontologies, identifying the modalities of reuse, the ontology features, and any additional information that ontology engineers need to be aware of when selecting a candidate ontology to reuse.To achieve this objective, we attempt to provide a more precise characterisation of the practice of reuse against the theory. We approach this task by producing a questionnaire aimed at ontology engineers and developers, based on an extensive review of the literature on ontology reuse. To the best of our knowledge this is the first study that investigates the motivations of this gap by consulting directly ontology developers, rather than analysing the existing literature. In particular, the goal of our study is to determine whether and to what extent different approaches to reuse depend on the expertise of the developers.This paper reports on the results from the questionnaire responses, that address the following questions: Question 1. How do developers practically reuse? We want to find out how developers reuse in practice, what the preferred ontology reuse methods, definitions and functions are, or whether ontologists prefer to reuse domain specific ontologies or upperlevel ontologies.Question 2. Which of information reported about ontologies are practically looked at? We want to find out what aspects of an ontology developers are searching for when deciding to reuse, and which ones they are less interested in. Question 3. What are the barriers to reuse? We want to know of any important empirical obstacles that have hampered reuse, and any essential features that might reduce ontology reusability.The paper is organised as follows: after framing our research with a discussion on the background in Section 2, Section 3 presents the research methodology followed for our study. Section 4 reports on the results from the study while Section 5 offers a discussion of such results. Finally, conclusions and future trends are outlined in Section 6.BACKGROUND
Ontology reuse has been extensively studied by the research community, who have contributed several definitions, methodologies, implementations, and evaluation approaches to reuse. In this section, rather than providing a general state of the art review, we focus on those efforts which have been most influential in shaping our study, whose aim is to characterise the gap between the principles and practice of ontology reuse.One of the first analyses on ontology reuse presents different use cases as well as methods and tools Poveda and colleagues A more recent study from the same group Kamdar and colleagues This work shows that knowledge reuse is especially widespread among the ontologies in the OBO Foundry and that the knowledge reused belongs to a small set of popular ontologies, which makes popularity one of the key practices in reuse, proposed by Finally, Carriero and colleagues RESEARCH METHODOLOGY
In order to answer the three questions mentioned in Section 1, we devised a study in form of a questionnaire, to be administered online to participants with experience in ontology engineering.The complete set of questions is provided at https://www.allcounted. com/share?view=questions&cid=etfbfn66ab4ja&lang=en_US.The responses were analysed statistically to identify any correlation with levels of expertise of the participants.The questionnaire also included a set of open text questions, whose replied were used to inform a discussion on the analysis, as provided in Section 5.In this section, we will describe the methodology we adopted to carry out each phase of the experiment, that comprises the following aspects:(1) The identification of the selective variables to include in the survey (Section 3.1). ( Identification of the variables to include in the survey
We reviewed the state of the art on reusing ontologies to identify several aspects of preferences related to each of the questions we wanted to address. We selected papers from three main standpoints: recognised efforts to define reuse from different perspectives Variables for Question 1.
In order to address the question How do developers actually reuse?, we distilled from the literature the following variables, representing reuse definitions and methods:• Import the whole ontology (Hard reuse or As-is).• Reference to the ontology elements URIs (Soft reuse).• Reuse by removing some axioms (Extraction).• Reuse by adding new axioms (Extension).
• Reuse by merging several ontologies (Combination).• Reuse by extracting/using Ontology Design Patterns (ODPs).• Reuse by copying the ontology structure.Variables for Question 2. In order to address the question
Which reported information about ontologies are practically looked at?, the following variables were identified from the literature, representing features that developers might want to investigate, and which might influence their decision to reuse, variables for which we asked participants to provide a ranking:• Ontology purpose.• Ontology scope.• Target groups and intended uses of ontology.• Ontology developers.• The language used to express the ontology.• Requirement specification document (RSD).• Competency questions(CQs).• Ontology design specifications (classes, properties and relationships).3.1.3 Variables for Question 3. Finally, in order to address the question What are the barriers to reuse?, we identified the variables accounting for aspects that might hamper reuse, and again we asked participants for a ranking:• Size.• Number of imports (e.g. importing a number of ontologies, that in turn import other ontologies).• Complexity (large number of classes, axioms and properties).
• Versioning, the existence of different versions of the same ontology. • Known conflicts with other imported ontologies.Other variables we extracted from the survey refer more specifically to reuse metrics, for which we again asked the survey participants for a ranking, from most to least preferred, with respect to the reuse of ontologies, and comprising łscheme metricsž Results from this further set of issues are not discussed in this paper and will be deferred to future reporting.Composition of the survey
We evaluate the variables in relation to the expertise and background reported by the participants, as explained in the next section. In order to do so, we devised a set of tasks with the goal to aggregate and condense the participants' experience and 'gut-feeling' about empirical attitudes. The survey consisted of around 44 between questions and tasks, subdivided into five parts, and was designed to take between 30 to 45 minutes to complete:(1) Background information;(2) General features of the ontology;(3) Ontology documentation; (4) Technical information about the ontology and its reuse;(5) Conclusion.The first round of this questionnaire was a validation process of the questions, mainly through a campaign that targeted specific ontology engineers and specialised groups. The received comments from this campaign have adjusted some questions for the next campaign.We report here on the results from(1) Popularity tasks we used to investigate the most popular definition of reuse that was used in practice, and how this differed on the basis of the participant's experience, in answer to our first question on how developers reuse, and (2) Ranking tasks covering different aspects of the engineers' decision-making process, in answer to the remaining two questions on what information they look at and what are the perceived obstacles to reuse.In particular we considered:(1) Popularity Task for Reuse wrt Experience, where participants select the most frequently used approaches for ontology reuse implementation from a list of the seven most popular ones. (2) Popularity Task for Ontology Type wrt Experience, where participants identify the type of ontologies been reused (upper-level ontologies vs. specific domain ontologies). (3) Ranking Task for Details wrt Experience, where participants rank ontology reporting details (as presented in the most popular metrics).(4) Ranking Task for Obstacles wrt. Experience, where participants are asked to rank five obsttacles to ontology reuse taken from the literature.Administration of the survey to participants
The target population of this study was the Semantic Web community in academia and industry. The questionnaire was disseminated during the period March to November 2020, both as direct invitation to selected contacts, and through calls for participation posted to relevant mailing lists and advertised at conferences (e.g. the 19th International Semantic Web Conference).Overall, 78 participants took the survey, however a number were excluded from the analysis either because self reporting as having no ontology engineering experience or filtered out by the initial screening. In the end, N = 54 responses were included in the analysis. The geographical distribution of the responses originated primarily from Spain 15%, UK 13% and US 13%.On average participants reported to have worked for 4 to 5 years in ontology engineering (M =4:26; SD=1:32), and rated their own expertise with ontology engineering quite high (M =3:87; SD =0.933) on a 5-point-Likert scale from 1 (none at all experienced) to 5 (expert). We divided the population into Highly Experienced (HE) participants (4 or 5 on the Likert-scale), which accounts for 65% of the population, and Moderate Knowledge (MK), that accounts for the remaining 35% of the population.The participants reported a propensity for reusing ontologies (M =3:87; SD =0.991), measured on a 5-point-frequency scale from 1 (rarely) to 5 (always). About 68% of the participants considered reusing ontologies frequently (often to always on the Frequentscale) and none of the participants said they would never choose to consider reuse.The frequency of reusing ontologies differs depending on the familiarity level with ontology engineering, a Mann-Whitney U test showed that there was a significant difference (U =200.500, p = 0.012) between the respondents. The highly experienced participants reuse ontologies more frequently than the moderate knowledge (MK 31.6% often, 15.8% always vs HE 35.3% often and 41.2% always).Overall, the chosen sample is experienced in the field of ontology engineering, and is willing to reuse ontologies. This makes the results of our survey meaningful with respect to their validity for identifying good practices of reuse.Tools for data analysis
The data analysis was carried out by means of descriptive statistics; for guidance, and to aid replicability, we list here the statistical tools used for different analysis purposes and variant data types:(1) The Chi-square (𝜒 2 ) test is a statistical procedure used for popularity tasks to examine the differences between categorical variables. The test determines whether there is a statistically significant difference between the expected frequencies and the observed frequencies in one or more categories of a contingency table. The statistic is said to be "statistically significant" if the value of Asymp. Sig. (which is the p-value of the Chi-Square statistic) is less than .05 (which is the alpha level associated with a 95% confidence level). (2) The Friedman test is a non-parametric alternative to the one-way ANOVA with repeated measures used for ranking tasks as the answers (dependent variables) on an ordinal scale. The aim is to detect significant differences between aspects for each objective (with 𝛼 = .05).(3) The Wilcoxon signed-rank tests is a non parametric hypothesis test, and is used, if significant differences are detected overall, to determine if two or more sets of pairs are statistically significantly different from one another. (4) The Dunn-Bonferroni correction is a post-hoc procedure to adjusts probability (p) values when making multiple statistical tests, and is used to correct the error rate following the analysis of variance.RESULTS
We provide in this section the analysis of the responses to the various tasks listed in Section 3.2.Popularity Task for Reuse wrt Experience
The analysis showed that:Finding 1. The most popular reuse approach across the board is Soft Reuse, while the least popular is Reuse by Copying the Ontology Structure.The analysis showed that the Soft reuse approach was selected by 74.3% HE, and 47.4% MK, while the Reuse by Copying the Ontology Structure was selected 22.9% HE, and not selected by any MK.When checking for how different approaches relate to participants' experience were, we found that: In more detail:• The data analysis on approaches dependent on experiences was that:(1) Hard Reuse was selected by 57.1% HE and 26.3% MK, 𝜒 2 (1, 𝑁 = 54) = 4.70, 𝑝 = .030) (2) Soft Reuse, as showed above, was selected by 74.3% HE, and 47.4% MK, (𝜒 2 (1, 𝑁 = 54) = 3.91, 𝑝 = .048) (3) Reuse by Copying the Ontology Structure was selected by 22.9% HE and no MK, (𝜒 2 (1, 𝑁 = 54) = 5.098, 𝑝 = .024). • The data analysis for the remaining approaches which showed no statistical relationship with respect to the participants' experience was, in descending order from the most selected approach to the least for each class of participants:(1) Among the HE participants: Extension 51.4%, Using ODP 34.3%, Extraction 28.6%, and Combination 25.7%. (2) Among the MK participants: Extension 42.1%, Extraction and Combination both at 31.6%, and Using ODP 21.1%.Popularity Task for Ontology Type wrt Experience
The analysis of the results for this task showed that:Finding 3. The reuse of specific domain ontologies is the approach of choice by the developers with moderate knowledge.Finding 4. The reuse of upper level ontologies is the approach of choice by the highly experienced developers.In more detail: reusing specific domain ontologies was selected by 31% HE and 78% MK. In contrast, reusing upper level ontologies was selected by 74% HE and 21% MK.Ranking Task for Details wrt Experience
In the analysis of how participants perceive the usefulness of ontology details when deciding to reuse we found that: Finding 5. The most relevant aspect of an ontology with respect to reuse is the ontology developer(s), both for medium and for highly experienced practitioners. Finding 6. The least informative detail about an ontology when deciding to reuse is: its scope for highly experienced practitioners, and its target group (intended use) for medium experienced practitioners.Table To further confirm this difference, in other words to validate that the position occupied by the items in the ranking is indeed significant, we performed post-hoc tests, using Wilcoxon signedrank tests, with the Dunn-Bonferroni correction, among all pairs of features. Results confirmed that:• For the HE, there is a significant difference between the rank on Ontology Developers (the top ranked feature) and five of the other features, with p respectively scoring as follows: with Ontology Scope (p=.000), with Ontology Design Specifications (p=.000), with Ontology Purpose (p=.000), with Ontology Language (p=.016), and with Target Group-Intended Uses (p=.050). • For the HE, there is also a significant difference between the rank on Scope (the bottom ranked feature) and five of the other features, with p respectively scoring as follows: with Ontology Developers (p=.000), with Ontology Language (p=.002), with Target group-Intended Use (p=.000), with CQs (p=.000), and with RSD (p=.000). • For MK, there is a significant difference between the rank on Ontology Developers (the top ranked feature) and three of the other features, with p respectively scoring as follows: with Target group-Intended use (p=.000), with Ontology Purpose (p=.001), and with Ontology Scope (p=.010). • For MK, there is a significant difference between the rank on Target Group-Intended Use (the bottom ranked feature) and three of the other features, with p respectively scoring as follows: with RSD (p=.052), with Ontology Language (p=.006), and with Ontology Developers (p=.000).• For MK, there is a significant difference between the rank on Ontology Purpose (the second from the bottom ranked feature) and two of the other features with p respectively scoring as follows: with Ontology Language (p=.052), and with Ontology Developers (p=.001). • However, there were no significant differences between any other pair of features, in neither class. We are therefore more confident in the ranking of the top and bottom feature for each of the classes of participants.Ranking Task for Obstacles wrt Experience
In the analysis of how participants perceive the ontology features that would hamper reuse we found that: Finding 7. The major obstacle to reuse, for both medium knowledge and highly experienced practitioners, is the presence of conflicts with other imported ontologies. The second major obstacle is complexity, and the third is the number of imports.Finding 8. The least problematic obstacle to reuse for highly experienced developers is the presence of versioning, while for moderate experience developers is its size.Table Again, we performed post-hoc Wilcoxon signed-rank tests, with the Dunn-Bonferroni correction, among all pairs of features, to validate the choice of ranking the top obstacle (only) for both classes of practitioners. The results show that:• For the HE, there is a significant difference between the rank on Conflicts with Other Imported Ontologies (the top ranked feature) and only one of the other features, Ontology Versioning (p=.032). • For the MK, N= 19, we found a significant difference between the rank on Conflicts with Other Imported Ontologies (the top ranked feature) and three of the other features with p scoring respectively as follows: with Number of Imports (p=.021), with Ontology Versioning (p=.001), and with Ontology Size (p=.000). • However, there were no significant differences between any other pair of obstacles for in neither class.DISCUSSION
Ontology reuse has been the subject of several studies in the past 20 years, and up until recently The analysis of the results presented in the previous section confirms and complements the most recent surveys in the area, and offers some new insights on how the degree of competence in ontology engineering affects some of the choices made when reusing an ontology. In the reminder of this section we discuss these insights.Preference for soft reuse
Ontology reuse is typically implemented with owl:imports (known as direct or hard reuse), whereby the semantics of the reused ontology is included into the new one; a method supported by many ontology editors, such as Protege. However, Findings 1 and 2 seem to suggest that, irrespective of the level of experience, ontology engineers seem to prefer soft reuse to formal imports. Only a fraction of the respondents expressed a preference for direct reuse. The participants free text comments highlight the adoption of mixed practices, e.g. łhybrid approach, reference to the ontology element URIs and copying the structure of an ontology, based on specific project's requirements (sic)ž, łmerging the soft reuse with the extension is common practicež, łmapping to show overlap and differencesž and łreference to specific objects via their name space and IRI ž. We can identify a number of reasons for preferring soft reuse:(1) the complexity of hard reuse, that does not facilitate the customisation of the imports of ontologies, and might result in irrelevant concepts or conflicts with requirements in the local ontology (3) and finally, reused ontologies may become unavailable or evolve.Reuse through ODPs
Ontology Design Patterns (ODPs) are concise ontological representations of reusable components, based on the corresponding notion in software engineering Choice of ontologies to reuse
There are several types of ontologies that can be reused, whose scope ranges from specific domain ontologies to broader upperlevel ontologies. The analysis found a strong correlation between the level of expertise in ontology engineering and such choice. Ontology developers with moderate knowledge tend to choose domain ontologies, because, as indicated in the free text comments: łDomain-specific [ontology reuse] has more flexibilityž, łDomain-specific [ontology reuse] is easierž, ł[it is] easy to managež, and ł[it is] easy to understandž.Conversely, more experienced ontology developers tend to reuse upper-level ontologies, because they think they provide the foundational basis for domain level ontologies, they model commonly used concepts, they promote interoperability and reduce the development cost.This confirms and extends a similar result in A possible explanation for this finding is that experienced ontology developers are aware that reuse affects the structure and logical consequences derived in the new ontology, especially when reusing through imports, where the semantics of the reused terms is included. In this case, the issues of long-term access, maintenance, and preservation of the reused terms become critical factors in the decision over which ontology to reuse.This observation is related to Finding 5, according to which the most important criteria for deciding whether to reuse an ontology is its ontology developers. Indeed, experienced ontology developers know that ontologies developed as use cases for academic publications and within projects tend not to be maintained regularly, if at all. Therefore, a determining factor in the choice of an ontology to reuse is the confidence in its developers. Similar conclusions are reached in Obstacles to ontology reuse
Findings 7 and 8 look at the perceived importance of the reasons that can prevent developers from reusing an ontology. The three most important issues that prevent reuse are ranked equally by developers with different experience: conflicts with other imported ontologies, complexity, and number of imports.These findings are correlated to Finding 1 and 2 and especially with respect to those consistency problems that arise from hard reuse. In addition, the participant to our study identified a number of other issues that may deter them from reusing ontologies, e.g. łMissing class and properties annotationsž, łUnstable availability, visible lack of maintenancež and łNo or few documentation (sic)ž.Indeed, ontology engineering good practices recommend drawing terms from the same ontology rather than importing many ontologies. This ensures overall coherence, and allows more efficient reasoning Lack of flexible approaches to reuse
When analysing the text free responses to the questionnaire, and in particular when commenting on the importance of reusing only part of an ontology and having sufficient information to support reuse (question 41), many respondents voiced the need for more flexible reuse ways.A number of respondents highlighted the lack of a comprehensive and systematic approaches to reuse: łThere should be clear method/guidelines for reuse. When to do import, soft, reusing some of the axioms, etc (sic)ž, łReusing ontologies is hard and tricky, a systematic approach is neededž, or łSome ways of reusing ontologies are well known, like imports, but others are not so described, and done more ad hoc, like reusing parts of an ontology.Some respondents confirmed the need to reuse ontologies either in their entirety or through modularisation Many also identified the need for appropriate mechanisms for ontology discovery: ł[Having such systematic method] would facilitate ontology reuse and reduce the time to choose if and which ontology to reusež or łI think the current guidelines for reusing ontologies do not help much neither in choosing the ontology or implementing the reusež, which confirms the existence of a gap between theory and practice, and the need for a set of more comprehensive and flexible heuristics.CONCLUSIONS AND FUTURE WORK
In this paper we presented a user study aimed at understanding how ontology developers reuse existing ontologies, what are the factors affecting their choices, and the issues that might deter them from reusing a specific ontology. Whilst ontology reuse has been extensively investigated in the literature, and the majority of ontology engineering methodologies proposed in the past 20 years include a reuse phase, there seems to be a gap between the theory and practice of reuse To the best of our knowledge this is the first study that investigates the motivations of this gap by consulting directly ontology developers, rather than analysing the existing literature. In particular, our study aims to ascertain to what extent the choice of different approaches to reuse depends on the expertise of the developers.This paper presents the methodology adopted to formulate the questions in the study, the analysis performed on the answers and the most salient results drawn from the data. Our results confirm and extend some of the findings in the literature. In particular, the referencing of URIs (also referred to as soft or indirect reuse) seems to be the most established way of reusing terms from other ontologies, irrespective of the expertise of the developers. However, the level of expertise plays a significant role when choosing the ontology to reuse: more experienced ontology developers tend to choose upper-level ontologies or those published by well known organisations (e.g. the W3C). This is because these ontologies are more likely to be maintained and evolved to reflect any changes in the domain.Furthermore, ontology developers actively consult further information about the ontology in order to guide their decision, but they can be deterred if the ontology to reuse appears to be complex, i.e. if it appears to conflict with other imported ontologies, or has a significant number of imports.The findings of our study further confirm the necessity to expand the current guidelines and tools that support ontology developers in properly documenting their ontologies (e.g. Finding 2 .
Table 1 :
Table 2 :
http://www.obofoundry.org